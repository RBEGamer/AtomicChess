<html lang="en">

<head>
  <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, user-scalable=no, target-densityDpi=device-dpi" />
  <meta content="text/html; charset=utf-8" http-equiv="content-type">
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">

  <link rel="apple-touch-icon" sizes="57x57" href="/favicon/apple-icon-57x57.png">
  <link rel="apple-touch-icon" sizes="60x60" href="/favicon/apple-icon-60x60.png">
  <link rel="apple-touch-icon" sizes="72x72" href="/favicon/apple-icon-72x72.png">
  <link rel="apple-touch-icon" sizes="76x76" href="/favicon/apple-icon-76x76.png">
  <link rel="apple-touch-icon" sizes="114x114" href="/favicon/apple-icon-114x114.png">
  <link rel="apple-touch-icon" sizes="120x120" href="/favicon/apple-icon-120x120.png">
  <link rel="apple-touch-icon" sizes="144x144" href="/favicon/apple-icon-144x144.png">
  <link rel="apple-touch-icon" sizes="152x152" href="/favicon/apple-icon-152x152.png">
  <link rel="apple-touch-icon" sizes="180x180" href="/favicon/apple-icon-180x180.png">
  <link rel="icon" type="image/png" sizes="192x192"  href="/favicon/android-icon-192x192.png">
  <link rel="icon" type="image/png" sizes="32x32" href="/favicon/favicon-32x32.png">
  <link rel="icon" type="image/png" sizes="96x96" href="/favicon/favicon-96x96.png">
  <link rel="icon" type="image/png" sizes="16x16" href="/favicon/favicon-16x16.png">
  <link rel="manifest" href="/favicon/manifest.json">
  <meta name="msapplication-TileColor" content="#ffffff">
  <meta name="msapplication-TileImage" content="/favicon/ms-icon-144x144.png">
  <meta name="theme-color" content="#ffffff">

  <link href="/bootstrap/css/bootstrap.min.css" rel="stylesheet">
  <link href="/css/landing-page.css" rel="stylesheet">
  <link href="/css/lightbox.min.css" rel="stylesheet">
  <link href="/css/photo_gallery.css" rel="stylesheet">
  <link href="/ionicons/css/ionicons.min.css" rel="stylesheet">
  <link href="/css/faq.css" rel="stylesheet">
  <link href="/css/main.css" rel="stylesheet">
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <meta name="description" content="AtomicChess">
  <meta name="author" content="Marcel Ochsendorf">
  <meta http-equiv="cache-control" content="max-age=0" />
  <meta http-equiv="cache-control" content="no-cache" />
  <meta http-equiv="expires" content="0" />
  <meta http-equiv="expires" content="Tue, 01 Jan 1980 1:00:00 GMT" />
  <meta http-equiv="pragma" content="no-cache" />



  <link href="/css/font-awesome.min.css" rel="stylesheet">
  <link href="/css/three_dots_loading_animations.css" rel="stylesheet">
  <link rel="stylesheet" href="/css/chessboard.css">
  <style>
    html, body {
      margin: 0;
      height: 100%;
      overflow: hidden;
      overflow-y: hidden;
    }

  .board_base{
    overflow: hidden;
    margin: 0;
  }

    .bord_mobile_portrait{
      min-width: 50%;
      max-width: 90%;
    }
    .bord_mobile_landscape{
      width: 20%;
    }

    .board_desktop{
      width: 60%;
    }
  </style>

  <meta charset="utf-8">

  <meta name="description" content="AtomicChess">
  <meta name="author" content="Marcel Ochsendorf">
  <meta http-equiv="cache-control" content="max-age=0" />
  <meta http-equiv="cache-control" content="no-cache" />
  <meta http-equiv="expires" content="0" />
  <meta http-equiv="expires" content="Tue, 01 Jan 1980 1:00:00 GMT" />
  <meta http-equiv="pragma" content="no-cache" />
  <title>AtomicChess - WebClient</title>



</head>

<body class="container">

<nav class="navbar navbar-expand-lg navbar-light bg-light">

  <a class="navbar-brand" href="/"><img width="64px"  src="/img/icons/chess_icon.png"><b>AtomicChess - WEBCHESS</b></a>

  <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
    <span class="navbar-toggler-icon"></span>
  </button>

  <div class="collapse navbar-collapse" id="navbarSupportedContent">
    <ul class="navbar-nav mr-auto">
      <li class="nav-item">
        <a class="nav-link" id="" target="_blank" href="/">Home</a>
      </li>

      <li class="nav-item">
        <a class="nav-link" id="nav_ypp" target="_blank" href="#">Your Player Profile</a>
      </li>

      <li class="nav-item">
        <a class="nav-link" id="nav_opp" target="_blank" href="#">Opponent Player Profile</a>
      </li>

      <li class="nav-item">
        <a class="nav-link" id="" target="_blank" href="/statistics">Statistics</a>
      </li>




    </ul>



    <a class="btn btn-sm btn-fh active" target="_blank" id="player_name" target="_blank" aria-pressed="true" href="#"></a>

  </div>
</nav>





<!-- LOGIN/GETHWID Modal -->
<div class="modal" id="modalLoginForm" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
  <div class="modal-dialog" role="document" >
    <div class="modal-content">
      <div class="modal-header text-center">
        <h4 class="modal-title w-100 font-weight-bold">LOGIN</h4>
      </div>
      <div class="modal-body mx-3">
        <form method="get">
          <div class="form-group">
            <label for="m_gng_hwid">PROFILE ID</label>
            <input type="text" class="form-control" id="m_gng_hwid" name="playerid" aria-describedby="m_gng_hwid" placeholder="" required minlength="36" maxlength="36">
            <small id="m_gng_hwid" class="form-text text-muted">Remember this ID to login to this Profile later again.</small>
          </div>

        <button type="submit" class="btn btn-info btn-lg btn-block" >START NEW GAME</button>
        </form>
      </div>

    </div>
  </div>
</div>



<!-- LOADING Modal -->
<div class="modal" id="modalLoadingForm" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
  <div class="modal-dialog" role="document" >
    <div class="modal-content">
      <div class="modal-header text-center">
        <h4 class="modal-title w-100 font-weight-bold">PLEASE WAIT</h4>
      </div>
      <div class="modal-body mx-3">

        <div class="snippet" data-title=".dot-bricks">
          <div class="stage">
            <div class="dot-bricks"></div>
          </div>
        </div>


      </div>

    </div>
  </div>
</div>

<!-- MATCHMAKING Modal -->
<div class="modal" id="modalWaitingForGameForm" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
  <div class="modal-dialog" role="document" >
    <div class="modal-content">
      <div class="modal-header text-center">
        <h4 class="modal-title w-100 font-weight-bold">WAITING FOR GAME</h4>
      </div>
      <div class="modal-body mx-3">
       Bitte warten, bis ein freier Spieler gefunden wurde, dies dauert ca. 20 Sekunden.
       Wenn der Schachtisch nicht frei ist, spielst du gegen den Computer.
        <div class="snippet" data-title=".dot-collision">
          <div class="stage">
            <div class="dot-collision"></div>
          </div>
        </div>


      </div>

    </div>
  </div>
</div>



<div class="row">


  <div class="col-lg-12 text-center text-lg-center my-auto">
    <div id="alert_message"></div>
  </div>

  <div class="col-lg-12 text-center text-lg-center my-auto">
    <h4 class="text-justify text-center" id=""><span id="player_color">--- GAME ---</span></h4>
  </div>

  <div class="col-12">

    <div class="justify-content-center">
      <div id="board" class="board_base" style=""></div>
    </div>
  </div>

</div>










<!--<script src="/js/jquery/jquery.min.js"></script> -->

<script src="js/json3.min.js"></script>
<script src="js/jquery/jquery.min.js"></script>
<script src="js/chessboard.js"></script>
<script src="/bootstrap/js/bootstrap.min.js"></script>

<script>

  var HWID = null;
  var SID = null;
  var PLAYER_STATE = null;

  const PLAYER_STATE_SEARCHING = "4";
  const PLAYER_STATE_IDLE ="1";

  //------ CONFIG CHESSBOARD ------




  //https://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid
  function uuidv4() {
    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {
      var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);
      return v.toString(16);
    });
  }

  //PARSE Date Object into human readable
  //https://stackoverflow.com/questions/5416920/timestamp-to-human-readable-format
  function getFormattedDate(_dt) {
    var date = new Date(_dt);

    var month = date.getMonth() + 1;
    var day = date.getDate();
    var hour = date.getHours();
    var min = date.getMinutes();
    var sec = date.getSeconds();
    //APPEND 0
    month = (month < 10 ? "0" : "") + month;
    day = (day < 10 ? "0" : "") + day;
    hour = (hour < 10 ? "0" : "") + hour;
    min = (min < 10 ? "0" : "") + min;
    sec = (sec < 10 ? "0" : "") + sec;
    var str = date.getFullYear() + "-" + month + "-" + day + "_" +  hour + ":" + min + ":" + sec;
    return str;
  }

  //PARSES THE QUERY STRING IN THE URL
  //https://stackoverflow.com/questions/901115/how-can-i-get-query-string-values-in-javascript
  function getParameterByName(name, url = window.location.href) {
    name = name.replace(/[\[\]]/g, '\\$&');
    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),
            results = regex.exec(url);
    if (!results) return null;
    if (!results[2]) return '';
    return decodeURIComponent(results[2].replace(/\+/g, ' '));
  }



  var GMOA_TRIGGERED = 0;
  var LAST_VALID_FEN = "";
  function generate_moveoption_table(_move_array){
    console.log(_move_array);
    if(GMOA_TRIGGERED == 1){return;}
    if(_move_array == null){return;}

    var tmp = "";


    tmp +="<div class=\"row justify-content-center\">";

    var btn_per_row = 3;
    var col_type = btn_per_row / 12;
    for (var i=0;i<_move_array.length;i++){
      const n = _move_array[i];
      if(n.length != 4){continue;}

      var from = (String(n)[0] + String(n)[1]).toLocaleUpperCase();
      var to = String(n).substr(2,3).toLocaleUpperCase();
      //TODO BOOSTRAP GRID
      //3 dann neue row

      tmp += "<div class=\"col-"+String(btn_per_row)+"  text-center my-auto\">";



      tmp +="<button type=\"button\" class=\"btn btn-primary btn-sm\" onclick=\"exec_move_btn('"+String(n)+"')\">"+from + "->" +to+"</button>";

      tmp += "</div>";

      //ADD NEW ROW
      if(((i+1)%btn_per_row) == 0 && i>0){
        tmp +="</div>";
        tmp +="<div class=\"row justify-content-center\" style=\"min-height: 75px\">";
      }

    }


    tmp +="</div>";

    $("#move_options").html(tmp);
    GMOA_TRIGGERED = 1;
  }





  var onChange = function(oldPos, newPos) {

    // board.position();

    console.log("Position changed:");
    console.log("Old position: " + ChessBoard.objToFen(oldPos));
    console.log("New position: " + ChessBoard.objToFen(newPos));
    console.log("--------------------");

    FEN = ChessBoard.objToFen(newPos);

    //  document.getElementById('content').innerHTML = FEN;


  };

  var onDrop = function(source, target, piece, newPos, oldPos, orientation) {
    console.log("Source: " + source);
    console.log("Target: " + target);
    console.log("Piece: " + piece);
    console.log("New position: " + ChessBoard.objToFen(newPos));
    console.log("Old position: " + ChessBoard.objToFen(oldPos));
    console.log("Orientation: " + orientation);
    console.log("--------------------");
    LAST_VALID_FEN =ChessBoard.objToFen(oldPos);
    var FEN = ChessBoard.objToFen(newPos);
    //document.getElementById("myFen").value = FEN;

    exec_move_btn(source + target,ChessBoard.objToFen(oldPos));


    //   document.getElementById('content').innerHTML =  wer;


  };

  //------ CONFIG BOARD HERE ------- //
  var BOARD_CFG = {
    draggable: false,
    position: '8/8/8/8/8/8/8/8',
    onDrop: onDrop,
    onChange: onChange,
    sparePieces: false,
    orientation:'black' //white
  };
  var board = ChessBoard('board', BOARD_CFG);
  var update_board = false;


  var DISP_FEN = "";
  function load_fen_to_viewer(_fen){
    if(_fen == null || _fen === ""){
      return;
    }
    //CHECK SAME => SKIP
    if(String(_fen).includes(board.fen())){return;}
    board.position(_fen);
    DISP_FEN = _fen;
  }






  function exec_move_btn(_mv_string, _old){
    set_make_move(HWID,SID,_mv_string,_old);
  }

  function generate_waiting_animation(){
    if(GMOA_TRIGGERED == 2){return;}

    var tmp = "<span class=\"text-justify text-center\">WAITING FOR OTHER PLAYERS TURN</span>";
    $("#move_options").html(tmp);
    GMOA_TRIGGERED = 2;
  }

  function get_login(_hwid, _cb){
    if(_hwid == null || _hwid === ""){
      console.log("get_login _hwid not set");
      return;
    }

    const PLAYER_TYPE = 2; //HUMAN VIRTUAL (=WEBBROWSER) PLAYER

    $('#modalLoadingForm').modal('show');
    $.get( "/rest/login?hwid=" +_hwid + "&playertype=" + String(PLAYER_TYPE), function( data ) {
      if(data && data.status && data.status === "ok" && data.sid){
        console.log("GOT SID:", data.sid);
        SID= data.sid;
        _cb(true);
        return true;
      }else if(data && data.status && data.status !== "ok"){
        console.log("LOGIN FAILED :", data.status);
      }else{
        console.log(data);
      }
      //RETURN TO LOGIN SCREEN
      alert("LOGIN FAILED - PLEASE TRY AGAIN LATER")
      $('#modalLoadingForm').modal('hide');
      window.location.href = "/webclient";
      _cb(false);
      return false;
    });
  }

  function get_logout(_hwid, _cb){
    if(_hwid == null || _hwid === ""){
      console.log("get_login _hwid not set");
      return;
    }
    $.get( "/rest/logout?hwid=" +_hwid, function( data ) {
      _cb(true);
      return false;
    });
  }


  function get_heartbeat(_hwid, _sid){
    if(_hwid == null || _hwid === ""){
      console.log("get_login _hwid not set");
      return false;
    }
    if(_sid == null || _sid === ""){
      console.log("get_login _hwid not set");
      return false;
    }

    $.get( "/rest/heartbeat?hwid=" +_hwid + "&sid=" + _sid, function( data ) {
      if(data && data.status && data.status !== "" && data.sid) {
      //  console.log("HB OK");
        return true;
      }else{
        //console.log(data);
      }

      return false;
    });
  }

  function set_playerstate(_hwid, _sid, _ps){
    if(_hwid == null || _hwid === ""){
      console.log("get_login _hwid not set");
      return false;
    }
    if(_sid == null || _sid === ""){
      console.log("get_login _sid not set");
      return false;
    }
    if(_ps == null || _ps === ""){
      console.log("get_login _ps not set");
      return false;
    }
    $.get( "/rest/set_player_state?hwid=" +_hwid + "&sid=" + _sid + "&ps=" + _ps, function( data ) {

      if(data && data.status && data.status === "ok") {
        console.log("PLAYER_SET", _ps, " OK");
        return true;
      }else{
        console.log(data);
      }

      return false;
    });
  }

  function set_playerconfigrmation(_hwid, _sid){
    if(_hwid == null || _hwid === ""){
      console.log("get_login _hwid not set");
      return false;
    }
    if(_sid == null || _sid === ""){
      console.log("get_login _sid not set");
      return false;
    }

    $.get( "/rest/player_setup_confirmation?hwid=" +_hwid + "&sid=" + _sid, function( data ) {


      return true;
    });
  }

  function set_make_move(_hwid, _sid, _mv, _old_fen){
  //  debugger;
    if(_hwid == null || _hwid === ""){
      console.log("get_login _hwid not set");
      return false;
    }
    if(_sid == null || _sid === ""){
      console.log("get_login _sid not set");
      return false;
    }
    if(_mv == null || _mv === ""){
      console.log("get_login _sid not set");
      return false;
    }

    $.get( "/rest/make_move?hwid=" +_hwid + "&sid=" + _sid + "&move=" + _mv, function( data ) {
    if(data && data.status && data.status === "ok"){

    }else if(data && data.status && data.status === "move not valid"){
      board.position(_old_fen);

      console.log("-- INVALID MOVE ---");
    }

      return true;
    });
  }
  function get_player_state(_hwid, _sid, _cb){
    if(_hwid == null || _hwid === ""){
      console.log("get_login _hwid not set");
      return false;
    }
    if(_sid == null || _sid === ""){
      console.log("get_login _sid not set");
      return false;
    }

    $.get( "/rest/get_player_state?hwid=" +_hwid + "&sid=" + _sid , function( data ) {

      if(data && data.status && data.status === "ok") {
        PLAYER_STATE = data;
      }else{
        PLAYER_STATE = null;
      }

      _cb(PLAYER_STATE);
    });
  }


  var got_game_id= "";






  $(document).ready(function ($) {
    console.log("ready!");
    console.log(navigator.userAgent);
    var bMobile = navigator.userAgent.indexOf( "Mobile" ) !== -1 || navigator.userAgent.indexOf( "iPhone" ) !== -1 || navigator.userAgent.indexOf( "Android" ) !== -1 || navigator.userAgent.indexOf( "Windows Phone" ) !== -1 ;

    if(bMobile){
      if (window.matchMedia("(orientation: portrait)").matches) {
        $("#board").addClass("bord_mobile_portrait");
      }else{
        $("#board").addClass("bord_mobile_landscape");
      }

    }else{
      $("#board").addClass("board_desktop");
    }
    board.resize();

    window.addEventListener('resize', function (){
      board.resize();
    });
    //HIDE GAME INFORMATION
   //toggle_visible_information_container(false);
//$("#modalLoginForm").modal.show();
    var tmp = getParameterByName('playerid');

    //IF PLAYERID IS NOT SET SHOW LOGIN FORM
    if(tmp == null || tmp == ""){
      console.log("playerid is null show login screen");
      var uid= uuidv4();
      $('#m_gng_hwid').val(uid)
      window.location.href = "/webclient?playerid="+String(uid);
     // $('#modalLoginForm').modal('show');
    }else{
      $('#modalLoginForm').modal('hide');
      HWID = tmp;
    }



    get_logout(HWID, function (_login_succ){
      get_login(HWID, function (_login_succ){
        set_playerstate(HWID,SID,PLAYER_STATE_SEARCHING); //SET PLAYER STATE TO MATCHMAKING
        $('#modalLoginForm').modal('hide');
        $('#modalLoadingForm').modal('hide');
      });
    });


    setInterval(function(){
        if(SID != null && SID !== ""){
          get_heartbeat(HWID,SID);
        }


        if(SID != null && SID !== ""){
          get_player_state(HWID,SID,function (_state){
           // console.log(_state);
            //CHECK FOR INVALID GAMESTATE / MATCHMKAING COMBINATION => REDIRECT TO HOMESCREEN
            if(_state.matchmaking_state.waiting_for_game == null || _state.matchmaking_state.waiting_for_game === false){
              if(_state.game_state != null && _state.game_state.game_running === false){
                  //TODO ADD MODAL
                if(got_game_id != ""){
                  window.location.href = "/statistics?list_count=10&gid=" + String(got_game_id);
                }

                //AUTO REDIRECT TO STATICSTICS
              }
            }

            if(_state.matchmaking_state.waiting_for_game != null && _state.matchmaking_state.waiting_for_game === true){
              $('#modalWaitingForGameForm').modal('show');
            }else if(_state.matchmaking_state.waiting_for_game != null && _state.matchmaking_state.waiting_for_game === false){
              $('#modalWaitingForGameForm').modal('hide');
            }


            if(_state.game_state != null && _state.game_state.simplified != null && _state.game_state.simplified.is_syncing_phase === true){
              //LOAD GAME
              got_game_id = _state.game_state.detailed.id;
              console.log("SET PLAYER CONFIRMATION");
              set_playerconfigrmation(HWID,SID);

              $('#modalLoginForm').modal('hide');
              $('#modalLoadingForm').modal('hide');
              if(_state.game_state.simplified.im_white_player){
                BOARD_CFG.orientation = 'white';
                board.expandConfig(BOARD_CFG);
                board.orientation('white');
              }else{
                BOARD_CFG.orientation = 'black';
                board.expandConfig(BOARD_CFG);
                board.orientation('black');
              }
              load_fen_to_viewer(_state.game_state.simplified.current_board.ExtendetFen);
              //debugger;
              //DISPLAY OPPONEND USER NAME:
              if(_state.game_state.simplified.playerprofiles && _state.game_state.simplified.im_white_player === true){
             //   $("#player_name").html("<a target='_blank' class='fhcolor_text' href='profile?pid="+_state.game_state.simplified.playerprofiles.white_player.virtual_player_id+"'>"+_state.game_state.simplified.playerprofiles.white_player.firendly_name+"</a>");
                $("#nav_ypp").prop("href","/profile?pid="+_state.game_state.simplified.playerprofiles.white_player.virtual_player_id);
                $("#nav_opp").prop("href","/profile?pid="+_state.game_state.simplified.playerprofiles.black_player.virtual_player_id);
                $("#player_name").html("<b>" + _state.game_state.simplified.playerprofiles.white_player.firendly_name + "</b> VS " + _state.game_state.simplified.playerprofiles.black_player.firendly_name);
                //IF TYPE IS TABLE _PLAYER => SHOW LIVESTREAM POPUP
                if(_state.game_state.simplified.playerprofiles.black_player.player_type === 0){
                  $("#alert_message").html("<div class='alert alert-fh' role='alert'>!! YOU ARE PLAYING AGAINS A TABLE !! <a class='btn btn-warning' role='button' target='_blank' href='/redirect?destination=livestream'> => OPEN LIVESTREAM <= </a></div>");
                }

              }else if(_state.game_state.simplified.playerprofiles && _state.game_state.simplified.im_white_player == false){
             //   $("#player_name").html("<a target='_blank' class='fhcolor_text' href='profile?pid="+_state.game_state.simplified.playerprofiles.black_player.virtual_player_id+"'>"+_state.game_state.simplified.playerprofiles.black_player.firendly_name+"</a>");
                $("#nav_ypp").prop("href","/profile?pid="+_state.game_state.simplified.playerprofiles.black_player.virtual_player_id);
                $("#nav_opp").prop("href","/profile?pid="+_state.game_state.simplified.playerprofiles.white_player.virtual_player_id);
                $("#player_name").html("<b>" + _state.game_state.simplified.playerprofiles.black_player.firendly_name + "</b> VS " + _state.game_state.simplified.playerprofiles.white_player.firendly_name);
                //IF TYPE IS TABLE _PLAYER => SHOW LIVESTREAM POPUP
                if(_state.game_state.simplified.playerprofiles.white_player.player_type === 0){
                  $("#alert_message").html("<div class='alert alert-fh' role='alert'>!! YOU ARE PLAYING AGAINS A TABLE !! <a class='btn btn-warning' role='button' target='_blank' href='/redirect?destination=livestream'> => OPEN LIVESTREAM <= </a></div>");
                }
              }
              $("#player_name").prop("href","/statistics?gid="+_state.game_state.detailed.id);
            }





            if(_state.game_state != null && _state.game_state.simplified != null && _state.game_state.game_running === true){

              if(_state.game_state.simplified.is_my_turn === true){
                //SHOW MOVE BUTTONS UNDER THE FIELD
                $("#player_color").html("--- MY TURN ---");
                //TODO SHOW PLAYERS TURN
             //   generate_moveoption_table(_state.game_state.simplified.current_board.legal_moves);
                BOARD_CFG.draggable = true;
                if(_state.game_state.simplified.im_white_player){
                  board.orientation('white');
                }else{
                  board.orientation('black');
                }
                board.expandConfig(BOARD_CFG);
              }else{
                $("#player_color").html("--- OPPONENTS TURN ---");
                BOARD_CFG.draggable = false;
                board.expandConfig(BOARD_CFG);
                  generate_waiting_animation();


              }
              load_fen_to_viewer(_state.game_state.simplified.current_board.ExtendetFen);
              LAST_VALID_FEN =_state.game_state.simplified.current_board.ExtendetFen;
            }
            if(_state.game_state != null && _state.game_state.simplified != null && _state.game_state.simplified.current_board.is_game_over === true) {
              if(got_game_id != ""){
                window.location.href = "/statistics?list_count=10&gid=" + String(got_game_id);
              }else{
                window.location.href = "/statistics?list_count=10";
              }
            }


          });
        }

    }, 1000);


  });
</script>

</body>

</html>
