Started by an SCM change
Running as SYSTEM
Building remotely on [8mha:////4NhQxXi60jAlX5rncxKDkW4xGC/PmymblX2gatAeBdgUAAAAoh+LCAAAAAAAAP9b85aBtbiIQTGjNKU4P08vOT+vOD8nVc83PyU1x6OyILUoJzMv2y+/JJUBAhiZGBgqihhk0NSjKDWzXb3RdlLBUSYGJk8GtpzUvPSSDB8G5tKinBIGIZ+sxLJE/ZzEvHT94JKizLx0a6BxUmjGOUNodHsLgAyeEgYx/eT83ILSktQi/Zz85MSc+OLUorLUIgBFdgO6ywAAAA==[0mlocal_server (ATC_SERVER_AGENT) in workspace /var/jenkins_build/workspace/AtomicChessBuildroot
The recommended git tool is: NONE
using credential 867013a9-1ccb-4bd0-b0c8-f41e88a499f9
 > git rev-parse --is-inside-work-tree # timeout=10
Fetching changes from the remote Git repository
 > git config remote.origin.url git@github.com:RBEGamer/AtomicChessOS.git # timeout=10
Fetching upstream changes from git@github.com:RBEGamer/AtomicChessOS.git
 > git --version # timeout=10
 > git --version # 'git version 2.17.1'
using GIT_SSH to set credentials local ssh key
 > git fetch --tags --progress -- git@github.com:RBEGamer/AtomicChessOS.git +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git rev-parse refs/remotes/origin/buildroot^{commit} # timeout=10
Checking out Revision 93ab884f2637b995900357c40b4f8e84045fbed2 (refs/remotes/origin/buildroot)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f 93ab884f2637b995900357c40b4f8e84045fbed2 # timeout=10
Commit message: "."
 > git rev-list --no-walk b65db9f740cdeeee68ff1a9868dd759af9afbb33 # timeout=10
[AtomicChessBuildroot] $ /bin/sh -xe /tmp/jenkins4774511708173532438.sh
+ ls
src
+ cd ./src/src_buildroot/buildroot
+ bash ./build.sh
--- STARTING BUILD ---
/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot
arch
backup_config.sh
board
boot
build.sh
CHANGES
config_backup
Config.in
Config.in.legacy
configs
COPYING
DELETE_FOR_REBUILD
DEVELOPERS
dl
docs
fs
linux
Makefile
Makefile.legacy
output
OVERLAY_FS
package
PATCHES
README
restore_config.sh
support
SWUPDATE
system
toolchain
utils
VERSIONING
GIT_COMMIT=93ab884f2637b995900357c40b4f8e84045fbed2
RUN_DISPLAY_URL=http://85.214.224.153:8082/job/AtomicChessBuildroot/21/display/redirect
JENKINS_URL=http://85.214.224.153:8082/
EXECUTOR_NUMBER=2
SSH_CONNECTION=127.0.0.1 41674 127.0.0.1 22
LANG=de_DE.UTF-8
BUILD_ID=21
OLDPWD=/var/jenkins_build/workspace/AtomicChessBuildroot
RUN_CHANGES_DISPLAY_URL=http://85.214.224.153:8082/job/AtomicChessBuildroot/21/display/redirect?page=changes
JOB_BASE_NAME=AtomicChessBuildroot
WORKSPACE_TMP=/var/jenkins_build/workspace/AtomicChessBuildroot@tmp
GIT_URL=git@github.com:RBEGamer/AtomicChessOS.git
HUDSON_COOKIE=43cec8e3-111e-4ebd-86bc-8c942f6fe9e1
USER=root
BUILD_NUMBER=21
WORKSPACE=/var/jenkins_build/workspace/AtomicChessBuildroot
PWD=/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot
HUDSON_URL=http://85.214.224.153:8082/
HOME=/root
NODE_NAME=local_server
HUDSON_SERVER_COOKIE=18b5d3f8e67d489e
SSH_CLIENT=127.0.0.1 41674 22
JENKINS_HOME=/var/jenkins_home
JOB_NAME=AtomicChessBuildroot
RUN_TESTS_DISPLAY_URL=http://85.214.224.153:8082/job/AtomicChessBuildroot/21/display/redirect?page=tests
GIT_PREVIOUS_COMMIT=b65db9f740cdeeee68ff1a9868dd759af9afbb33
HUDSON_HOME=/var/jenkins_home
JOB_DISPLAY_URL=http://85.214.224.153:8082/job/AtomicChessBuildroot/display/redirect
RUN_ARTIFACTS_DISPLAY_URL=http://85.214.224.153:8082/job/AtomicChessBuildroot/21/display/redirect?page=artifacts
MAIL=/var/mail/root
BUILD_URL=http://85.214.224.153:8082/job/AtomicChessBuildroot/21/
SHELL=/bin/bash
JOB_URL=http://85.214.224.153:8082/job/AtomicChessBuildroot/
BUILD_DISPLAY_NAME=#21
SHLVL=2
GIT_BRANCH=origin/buildroot
BUILD_TAG=jenkins-AtomicChessBuildroot-21
NODE_LABELS=ATC_SERVER_AGENT local_server
LOGNAME=root
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
GIT_PREVIOUS_SUCCESSFUL_COMMIT=b65db9f740cdeeee68ff1a9868dd759af9afbb33
JENKINS_SERVER_COOKIE=18b5d3f8e67d489e
_=/usr/bin/env
--- GENERATE KEYS FOR SWUPDATE---
--KEYS EYISTS --
OLD_VERSION: 4.3.5
['4', '3', '6']
NEW_VERSION: 4.3.6
./DELETE_FOR_REBUILD exists.
-- COPY CONFIG FILE --
rm -Rf /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/build/atcgui-origin_qtui
rm -Rf /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/build/atcctl-origin_controller
rm -Rf /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/build/atctp-origin_testprogram
--BUILD FIRT ITERATION --
/usr/bin/make -j1 O=/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output HOSTCC="/usr/bin/gcc" HOSTCXX="/usr/bin/g++" syncconfig
make[1]: Verzeichnis â€ž/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildrootâ€œ wird betreten
#
# configuration written to /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/.config
#
make[1]: Verzeichnis â€ž/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildrootâ€œ wird verlassen
>>> atcctl origin_controller Downloading
Leeres Git-Repository in /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/dl/atcctl/git/.git/ initialisiert
Fetching all references
Von github.com:RBEGamer/AtomicChessOS
 * [neuer Branch]      CI            -> origin/CI
 * [neuer Branch]      IOController  -> origin/IOController
 * [neuer Branch]      buildroot     -> origin/buildroot
 * [neuer Branch]      controller    -> origin/controller
 * [neuer Branch]      documentation -> origin/documentation
 * [neuer Branch]      master        -> origin/master
 * [neuer Branch]      qtui          -> origin/qtui
 * [neuer Branch]      rpclib        -> origin/rpclib
 * [neuer Branch]      server        -> origin/server
 * [neuer Branch]      testprogram   -> origin/testprogram
 * [neues Tag]         CI_BUILD      -> CI_BUILD
 * [neues Tag]         jenkinsbuild  -> jenkinsbuild
Could not fetch special ref 'origin/controller'; assuming it is not special.
WARNING: no hash file for atcctl-origin_controller.tar.gz
>>> atcctl origin_controller Extracting
gzip -d -c /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/dl/atcctl/atcctl-origin_controller.tar.gz | tar --strip-components=1 -C /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/build/atcctl-origin_controller   -xf -
>>> atcctl origin_controller Patching
>>> atcctl origin_controller Configuring
>>> atcctl origin_controller Building
ATCCTL_BUILD!
/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/build/atcctl-origin_controller
-----------------
/usr/bin/make -j9 PATH="/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/bin:/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/sbin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin" AR="/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/bin/arm-buildroot-linux-gnueabihf-ar" AS="/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/bin/arm-buildroot-linux-gnueabihf-as" LD="/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/bin/arm-buildroot-linux-gnueabihf-ld" NM="/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/bin/arm-buildroot-linux-gnueabihf-nm" CC="/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/bin/arm-buildroot-linux-gnueabihf-gcc" GCC="/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/bin/arm-buildroot-linux-gnueabihf-gcc" CPP="/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/bin/arm-buildroot-linux-gnueabihf-cpp" CXX="/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/bin/arm-buildroot-linux-gnueabihf-g++" FC="/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/bin/arm-buildroot-linux-gnueabihf-gfortran" F77="/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/bin/arm-buildroot-linux-gnueabihf-gfortran" RANLIB="/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/bin/arm-buildroot-linux-gnueabihf-ranlib" READELF="/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/bin/arm-buildroot-linux-gnueabihf-readelf" STRIP="/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/bin/arm-buildroot-linux-gnueabihf-strip" OBJCOPY="/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/bin/arm-buildroot-linux-gnueabihf-objcopy" OBJDUMP="/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/bin/arm-buildroot-linux-gnueabihf-objdump" AR_FOR_BUILD="/usr/bin/ar" AS_FOR_BUILD="/usr/bin/as" CC_FOR_BUILD="/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/bin/ccache /usr/bin/gcc" GCC_FOR_BUILD="/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/bin/ccache /usr/bin/gcc" CXX_FOR_BUILD="/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/bin/ccache /usr/bin/g++" LD_FOR_BUILD="/usr/bin/ld" CPPFLAGS_FOR_BUILD="-I/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/include" CFLAGS_FOR_BUILD="-O2 -I/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/include" CXXFLAGS_FOR_BUILD="-O2 -I/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/include" LDFLAGS_FOR_BUILD="-L/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/lib -Wl,-rpath,/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/lib" FCFLAGS_FOR_BUILD="" DEFAULT_ASSEMBLER="/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/bin/arm-buildroot-linux-gnueabihf-as" DEFAULT_LINKER="/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/bin/arm-buildroot-linux-gnueabihf-ld" CPPFLAGS="-D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64" CFLAGS="-D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  " CXXFLAGS="-D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  " LDFLAGS="" FCFLAGS=" -Os " FFLAGS=" -Os " PKG_CONFIG="/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/bin/pkg-config" STAGING_DIR="/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/sysroot" INTLTOOL_PERL=/usr/bin/perl -C /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/build/atcctl-origin_controller/src/src_controller/controller/controller CONFIG=DEBUGLOCAL TARGETNAME=atc_controller
make[1]: Verzeichnis â€ž/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/build/atcctl-origin_controller/src/src_controller/controller/controllerâ€œ wird betreten
/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/bin/arm-buildroot-linux-gnueabihf-g++ -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os   -c BackendConnector.cpp -o Debug/BackendConnector.o -MD -MF Debug/BackendConnector.dep
/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/bin/arm-buildroot-linux-gnueabihf-g++ -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os   -c BoardUserMoveWatcher.cpp -o Debug/BoardUserMoveWatcher.o -MD -MF Debug/BoardUserMoveWatcher.dep
/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/bin/arm-buildroot-linux-gnueabihf-g++ -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os   -c ChessBoard.cpp -o Debug/ChessBoard.o -MD -MF Debug/ChessBoard.dep
/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/bin/arm-buildroot-linux-gnueabihf-g++ -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os   -c ChessField.cpp -o Debug/ChessField.o -MD -MF Debug/ChessField.dep
/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/bin/arm-buildroot-linux-gnueabihf-g++ -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os   -c ChessPiece.cpp -o Debug/ChessPiece.o -MD -MF Debug/ChessPiece.dep
/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/bin/arm-buildroot-linux-gnueabihf-g++ -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os   -c ConfigParser.cpp -o Debug/ConfigParser.o -MD -MF Debug/ConfigParser.dep
/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/bin/arm-buildroot-linux-gnueabihf-g++ -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os   -c controller.cpp -o Debug/controller.o -MD -MF Debug/controller.dep
/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/bin/arm-buildroot-linux-gnueabihf-g++ -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os   -c GCodeSender.cpp -o Debug/GCodeSender.o -MD -MF Debug/GCodeSender.dep
/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/bin/arm-buildroot-linux-gnueabihf-g++ -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os   -c HardwareInterface.cpp -o Debug/HardwareInterface.o -MD -MF Debug/HardwareInterface.dep
/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/bin/arm-buildroot-linux-gnueabihf-g++ -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os   -c IOController.cpp -o Debug/IOController.o -MD -MF Debug/IOController.dep
/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/bin/arm-buildroot-linux-gnueabihf-g++ -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os   -c SHARED/guicommunicator/guicommunicator.cpp -o Debug/guicommunicator.o -MD -MF Debug/guicommunicator.dep
/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/bin/arm-buildroot-linux-gnueabihf-g++ -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os   -c SHARED/json11-master/json11.cpp -o Debug/json11.o -MD -MF Debug/json11.dep
/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/bin/arm-buildroot-linux-gnueabihf-g++ -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os   -c SHARED/loguru-master/loguru.cpp -o Debug/loguru.o -MD -MF Debug/loguru.dep
In Datei, eingebunden von ConfigParser.h:13,
                 von GCodeSender.h:16,
                 von GCodeSender.cpp:1:
SHARED/magic_enum-master/include/magic_enum.hpp:99:23: Fehler: Â»optionalÂ« in Namensraum Â»stdÂ« bezeichnet keinen Templatetyp
   99 | using optional = std::optional<T>;
      |                       ^~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:99:18: Anmerkung: Â»std::optionalÂ« ist erst ab C++17 verfÃ¼gbar
   99 | using optional = std::optional<T>;
      |                  ^~~
SHARED/magic_enum-master/include/magic_enum.hpp:106:26: Fehler: Â»string_viewÂ« in Namensbereich Â»stdÂ« bezeichnet keinen Typ
  106 | using string_view = std::string_view;
      |                          ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:106:21: Anmerkung: Â»std::string_viewÂ« ist erst ab C++17 verfÃ¼gbar
  106 | using string_view = std::string_view;
      |                     ^~~
In Datei, eingebunden von ConfigParser.h:13,
                 von GCodeSender.h:16,
                 von GCodeSender.cpp:1:
SHARED/magic_enum-master/include/magic_enum.hpp:123:22: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  123 |   static_assert(std::is_enum_v<E>, "magic_enum::customize::enum_range requires enum type.");
      |                      ^~~~~~~~~
      |                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:123:33: Fehler: expected primary-expression before Â»>Â« token
  123 |   static_assert(std::is_enum_v<E>, "magic_enum::customize::enum_range requires enum type.");
      |                                 ^
SHARED/magic_enum-master/include/magic_enum.hpp:123:34: Fehler: expected primary-expression before Â»,Â« token
  123 |   static_assert(std::is_enum_v<E>, "magic_enum::customize::enum_range requires enum type.");
      |                                  ^
SHARED/magic_enum-master/include/magic_enum.hpp:124:3: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  124 |   inline static constexpr int min = MAGIC_ENUM_RANGE_MIN;
      |   ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:125:3: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  125 |   inline static constexpr int max = MAGIC_ENUM_RANGE_MAX;
      |   ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:139:11: Fehler: Â»string_viewÂ« bezeichnet keinen Typ
  139 | constexpr string_view enum_name(E) noexcept {
      |           ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:159:47: Fehler: expected Â»)Â« before Â»strÂ«
  159 |   constexpr explicit static_string(string_view str) noexcept : static_string{str, std::make_index_sequence<N>{}} {
      |                                   ~           ^~~~
      |                                               )
SHARED/magic_enum-master/include/magic_enum.hpp:159:114: Fehler: expected unqualified-id before Â»{Â« token
  159 |   constexpr explicit static_string(string_view str) noexcept : static_string{str, std::make_index_sequence<N>{}} {
      |                                                                                                                  ^
SHARED/magic_enum-master/include/magic_enum.hpp:167:22: Fehler: expected type-specifier before Â»string_viewÂ«
  167 |   constexpr operator string_view() const noexcept { return {data(), size()}; }
      |                      ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:171:38: Fehler: expected Â»)Â« before Â»strÂ«
  171 |   constexpr static_string(string_view str, std::index_sequence<I...>) noexcept : chars{{str[I]..., '\0'}} {}
      |                          ~           ^~~~
      |                                      )
SHARED/magic_enum-master/include/magic_enum.hpp:171:107: Fehler: expected unqualified-id before Â»{Â« token
  171 |   constexpr static_string(string_view str, std::index_sequence<I...>) noexcept : chars{{str[I]..., '\0'}} {}
      |                                                                                                           ^
SHARED/magic_enum-master/include/magic_enum.hpp:178:13: Fehler: nur Deklarationen von Konstruktoren und Umwandlungsoperatoren kÃ¶nnen Â»explicitÂ« sein
  178 |   constexpr explicit static_string(string_view) noexcept {}
      |             ^~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:178:36: Fehler: Feld Â»string_viewÂ« hat unvollstÃ¤ndigen Typen Â»const magic_enum::detail::static_string<0>Â«
  178 |   constexpr explicit static_string(string_view) noexcept {}
      |                                    ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:177:8: Anmerkung: Definition von Â»struct magic_enum::detail::static_string<0>Â« ist erst nach der schlieÃŸenden Klammer vollendet
  177 | struct static_string<0> {
      |        ^~~~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:178:3: Fehler: nicht-statisches Datenelement Â»string_viewÂ« als Â»constexprÂ« deklariert
  178 |   constexpr explicit static_string(string_view) noexcept {}
      |   ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:178:47: Fehler: Â»;Â« am Ende von Elementdeklaration erwartet
  178 |   constexpr explicit static_string(string_view) noexcept {}
      |                                               ^
      |                                                ;
SHARED/magic_enum-master/include/magic_enum.hpp:178:49: Fehler: expected unqualified-id before Â»noexceptÂ«
  178 |   constexpr explicit static_string(string_view) noexcept {}
      |                                                 ^~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:184:22: Fehler: expected type-specifier before Â»string_viewÂ«
  184 |   constexpr operator string_view() const noexcept { return {}; }
      |                      ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:193:11: Fehler: Â»string_viewÂ« bezeichnet keinen Typ
  193 | constexpr string_view pretty_name(string_view name) noexcept {
      |           ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:213:28: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  213 | constexpr std::size_t find(string_view str, char c) noexcept {
      |                            ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:213:45: Fehler: expected primary-expression before Â»charÂ«
  213 | constexpr std::size_t find(string_view str, char c) noexcept {
      |                                             ^~~~
SHARED/magic_enum-master/include/magic_enum.hpp:213:51: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
  213 | constexpr std::size_t find(string_view str, char c) noexcept {
      |                                                   ^
SHARED/magic_enum-master/include/magic_enum.hpp:235:26: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                          ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:235:43: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                                           ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:235:75: Fehler: expected primary-expression before Â»&&Â« token
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                                                                           ^~
SHARED/magic_enum-master/include/magic_enum.hpp:235:78: Fehler: Â»pÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                                                                              ^
SHARED/magic_enum-master/include/magic_enum.hpp:235:79: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                                                                               ^
SHARED/magic_enum-master/include/magic_enum.hpp:235:80: Fehler: expected Â»;Â« before Â»noexceptÂ«
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                                                                                ^~~~~~~~~
      |                                                                                ;
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr bool magic_enum::detail::cmp_less(L, R)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:264:22: Fehler: Â»is_integral_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_integralÂ«?
  264 |   static_assert(std::is_integral_v<L> && std::is_integral_v<R>, "magic_enum::detail::cmp_less requires integral type.");
      |                      ^~~~~~~~~~~~~
      |                      is_integral
SHARED/magic_enum-master/include/magic_enum.hpp:264:37: Fehler: expected primary-expression before Â»>Â« token
  264 |   static_assert(std::is_integral_v<L> && std::is_integral_v<R>, "magic_enum::detail::cmp_less requires integral type.");
      |                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:264:45: Fehler: expected Â»,Â« before Â»::Â« token
  264 |   static_assert(std::is_integral_v<L> && std::is_integral_v<R>, "magic_enum::detail::cmp_less requires integral type.");
      |                                             ^~
      |                                             ,
SHARED/magic_enum-master/include/magic_enum.hpp:264:45: Fehler: expected string-literal before Â»::Â« token
  264 |   static_assert(std::is_integral_v<L> && std::is_integral_v<R>, "magic_enum::detail::cmp_less requires integral type.");
      |                                             ^~
SHARED/magic_enum-master/include/magic_enum.hpp:264:45: Fehler: expected Â»)Â« before Â»::Â« token
  264 |   static_assert(std::is_integral_v<L> && std::is_integral_v<R>, "magic_enum::detail::cmp_less requires integral type.");
      |                ~                            ^~
      |                                             )
SHARED/magic_enum-master/include/magic_enum.hpp:266:6: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |      ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:266:22: Fehler: Â»is_signed_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_signedÂ«?
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                      ^~~~~~~~~~~
      |                      is_signed
SHARED/magic_enum-master/include/magic_enum.hpp:266:35: Fehler: expected primary-expression before Â»>Â« token
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                                   ^
SHARED/magic_enum-master/include/magic_enum.hpp:266:37: Fehler: expected primary-expression before Â»==Â« token
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                                     ^~
SHARED/magic_enum-master/include/magic_enum.hpp:266:45: Fehler: Â»is_signed_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_signedÂ«?
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                                             ^~~~~~~~~~~
      |                                             is_signed
SHARED/magic_enum-master/include/magic_enum.hpp:266:58: Fehler: expected primary-expression before Â»>Â« token
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                                                          ^
SHARED/magic_enum-master/include/magic_enum.hpp:266:59: Fehler: expected primary-expression before Â»)Â« token
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                                                           ^
SHARED/magic_enum-master/include/magic_enum.hpp:269:13: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  269 |   } else if constexpr (std::is_signed_v<R>) {
      |             ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:269:29: Fehler: Â»is_signed_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_signedÂ«?
  269 |   } else if constexpr (std::is_signed_v<R>) {
      |                             ^~~~~~~~~~~
      |                             is_signed
SHARED/magic_enum-master/include/magic_enum.hpp:269:42: Fehler: expected primary-expression before Â»>Â« token
  269 |   } else if constexpr (std::is_signed_v<R>) {
      |                                          ^
SHARED/magic_enum-master/include/magic_enum.hpp:269:43: Fehler: expected primary-expression before Â»)Â« token
  269 |   } else if constexpr (std::is_signed_v<R>) {
      |                                           ^
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr I magic_enum::detail::log2(I)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:280:22: Fehler: Â»is_integral_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_integralÂ«?
  280 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::log2 requires integral type.");
      |                      ^~~~~~~~~~~~~
      |                      is_integral
SHARED/magic_enum-master/include/magic_enum.hpp:280:37: Fehler: expected primary-expression before Â»>Â« token
  280 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::log2 requires integral type.");
      |                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:280:38: Fehler: expected primary-expression before Â»,Â« token
  280 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::log2 requires integral type.");
      |                                      ^
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr bool magic_enum::detail::is_pow2(I)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:290:22: Fehler: Â»is_integral_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_integralÂ«?
  290 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::is_pow2 requires integral type.");
      |                      ^~~~~~~~~~~~~
      |                      is_integral
SHARED/magic_enum-master/include/magic_enum.hpp:290:37: Fehler: expected primary-expression before Â»>Â« token
  290 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::is_pow2 requires integral type.");
      |                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:290:38: Fehler: expected primary-expression before Â»,Â« token
  290 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::is_pow2 requires integral type.");
      |                                      ^
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:296:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  296 | inline constexpr bool is_enum_v = std::is_enum_v<T> && std::is_same_v<T, std::decay_t<T>>;
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:296:40: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  296 | inline constexpr bool is_enum_v = std::is_enum_v<T> && std::is_same_v<T, std::decay_t<T>>;
      |                                        ^~~~~~~~~
      |                                        is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:296:51: Fehler: expected primary-expression before Â»>Â« token
  296 | inline constexpr bool is_enum_v = std::is_enum_v<T> && std::is_same_v<T, std::decay_t<T>>;
      |                                                   ^
SHARED/magic_enum-master/include/magic_enum.hpp:296:56: Fehler: Marke Â»stdÂ« auÃŸerhalb einer Funktion referenziert
  296 | inline constexpr bool is_enum_v = std::is_enum_v<T> && std::is_same_v<T, std::decay_t<T>>;
      |                                                        ^~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr auto magic_enum::detail::n()Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:305:13: Fehler: Â»string_viewÂ« bezeichnet keinen Typ
  305 |   constexpr string_view name{__PRETTY_FUNCTION__ + 49, sizeof(__PRETTY_FUNCTION__) - 51};
      |             ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:309:24: Fehler: Â»nameÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  309 |   return static_string<name.size()>{name};
      |                        ^~~~
SHARED/magic_enum-master/include/magic_enum.hpp:309:35: Fehler: Templateargument 1 ist ungÃ¼ltig
  309 |   return static_string<name.size()>{name};
      |                                   ^
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:316:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  316 | inline constexpr auto type_name_v = n<E>();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr auto magic_enum::detail::n()Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:321:43: Fehler: Â»enum_nameÂ« ist kein Element von Â»magic_enum::customizeÂ«; meinten Sie Â»enum_rangeÂ«?
  321 |   constexpr auto custom_name = customize::enum_name<E>(V);
      |                                           ^~~~~~~~~
      |                                           enum_range
SHARED/magic_enum-master/include/magic_enum.hpp:321:54: Fehler: expected primary-expression before Â»>Â« token
  321 |   constexpr auto custom_name = customize::enum_name<E>(V);
      |                                                      ^
SHARED/magic_enum-master/include/magic_enum.hpp:323:6: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  323 |   if constexpr (custom_name.empty()) {
      |      ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:341:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  341 | inline constexpr auto enum_name_v = n<E, V>();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:343:23: Fehler: Â»autoÂ«-Parameter darf in diesem Kontext nicht verwendet werden
  343 | template <typename E, auto V>
      |                       ^~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr int magic_enum::detail::reflected_min()Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:354:6: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  354 |   if constexpr (IsFlags) {
      |      ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:361:8: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  361 |     if constexpr (cmp_less(lhs, rhs)) {
      |        ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr int magic_enum::detail::reflected_max()Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:373:6: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  373 |   if constexpr (IsFlags) {
      |      ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:380:8: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  380 |     if constexpr (cmp_less(lhs, rhs)) {
      |        ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:389:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  389 | inline constexpr auto reflected_min_v = reflected_min<E, IsFlags>();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:392:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  392 | inline constexpr auto reflected_max_v = reflected_max<E, IsFlags>();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr E magic_enum::detail::value(std::size_t)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:398:6: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  398 |   if constexpr (IsFlags) {
      |      ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr auto magic_enum::detail::values(std::index_sequence<I ...>)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:409:62: Fehler: Â»constexprÂ«-Lambda ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  409 |   constexpr std::size_t count = [](decltype((valid)) valid_) constexpr noexcept -> std::size_t {
      |                                                              ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:419:22: Fehler: der Wert von Â»countÂ« ist in konstantem Ausdruck nicht verwendbar
  419 |   std::array<E, count> values{};
      |                      ^
SHARED/magic_enum-master/include/magic_enum.hpp:409:25: Anmerkung: Â»countÂ« in seiner eigenen Initialisierung verwendet
  409 |   constexpr std::size_t count = [](decltype((valid)) valid_) constexpr noexcept -> std::size_t {
      |                         ^~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:419:22: Anmerkung: in Templateargument fÃ¼r Typ Â»unsigned intÂ«
  419 |   std::array<E, count> values{};
      |                      ^
SHARED/magic_enum-master/include/magic_enum.hpp:422:13: Fehler: ungÃ¼ltige Typen Â»int[std::size_t {aka unsigned int}]Â« fÃ¼r Feldindex
  422 |       values[v++] = value<E, Min, IsFlags>(i);
      |             ^
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:440:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  440 | inline constexpr auto values_v = values<E, IsFlags>();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:446:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  446 | inline constexpr auto count_v = values_v<E, IsFlags>.size();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:449:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  449 | inline constexpr auto min_v = static_cast<U>(values_v<E, IsFlags>.front());
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:452:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  452 | inline constexpr auto max_v = static_cast<U>(values_v<E, IsFlags>.back());
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:467:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  467 | inline constexpr auto range_size_v = range_size<E, IsFlags>();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:473:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  473 | inline constexpr auto invalid_index_v = (std::numeric_limits<index_t<E, IsFlags>>::max)();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:485:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  485 | inline constexpr auto indexes_v = indexes<E, IsFlags>(std::make_index_sequence<range_size_v<E, IsFlags>>{});
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr auto magic_enum::detail::names(std::index_sequence<I ...>)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:491:21: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  491 |   return std::array<string_view, sizeof...(I)>{{enum_name_v<E, values_v<E, IsFlags>[I]>...}};
      |                     ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:491:46: Fehler: Templateargument 1 ist ungÃ¼ltig
  491 |   return std::array<string_view, sizeof...(I)>{{enum_name_v<E, values_v<E, IsFlags>[I]>...}};
      |                                              ^
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:495:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  495 | inline constexpr auto names_v = names<E, IsFlags>(std::make_index_sequence<count_v<E, IsFlags>>{});
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr auto magic_enum::detail::entries(std::index_sequence<I ...>)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:504:34: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  504 |   return std::array<std::pair<E, string_view>, sizeof...(I)>{{{values_v<E, IsFlags>[I], enum_name_v<E, values_v<E, IsFlags>[I]>}...}};
      |                                  ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:504:45: Fehler: Templateargument 2 ist ungÃ¼ltig
  504 |   return std::array<std::pair<E, string_view>, sizeof...(I)>{{{values_v<E, IsFlags>[I], enum_name_v<E, values_v<E, IsFlags>[I]>}...}};
      |                                             ^
SHARED/magic_enum-master/include/magic_enum.hpp:504:60: Fehler: Templateargument 1 ist ungÃ¼ltig
  504 |   return std::array<std::pair<E, string_view>, sizeof...(I)>{{{values_v<E, IsFlags>[I], enum_name_v<E, values_v<E, IsFlags>[I]>}...}};
      |                                                            ^
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:508:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  508 | inline constexpr auto entries_v = entries<E, IsFlags>(std::make_index_sequence<count_v<E, IsFlags>>{});
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:521:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  521 | inline constexpr bool is_sparse_v = is_sparse<E, IsFlags>();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr std::size_t magic_enum::detail::undex(U)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:527:7: Warnung: Â»init-statement in AuswahlanweisungenÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  527 |   if (const auto i = static_cast<std::size_t>(value - min_v<E>); value >= min_v<E> && value <= max_v<E>) {
      |       ^~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:528:8: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  528 |     if constexpr (is_sparse_v<E>) {
      |        ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:529:11: Warnung: Â»init-statement in AuswahlanweisungenÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  529 |       if (const auto idx = indexes_v<E>[i]; idx != invalid_index_v<E>) {
      |           ^~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:579:55: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  579 | using enable_if_enum_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, false, T, R>::type;
      |                                                       ^~~~~~~~~
      |                                                       is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:579:55: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  579 | using enable_if_enum_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, false, T, R>::type;
      |                                                       ^~~~~~~~~
      |                                                       is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:579:79: Fehler: falsche Anzahl der Templateargumente (1, sollte 4 sein)
  579 | using enable_if_enum_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, false, T, R>::type;
      |                                                                               ^~
SHARED/magic_enum-master/include/magic_enum.hpp:560:8: Anmerkung: fÃ¼r Â»template<bool <anonym>, bool <anonym>, class T, class R> struct magic_enum::detail::enable_if_enumÂ« bereitgestellt
  560 | struct enable_if_enum {};
      |        ^~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:579:35: Fehler: Spezifikation mit geschachteltem Namen erwartet
  579 | using enable_if_enum_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, false, T, R>::type;
      |                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:582:61: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  582 | using enable_if_enum_flags_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, true, T, R>::type;
      |                                                             ^~~~~~~~~
      |                                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:582:61: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  582 | using enable_if_enum_flags_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, true, T, R>::type;
      |                                                             ^~~~~~~~~
      |                                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:582:85: Fehler: falsche Anzahl der Templateargumente (1, sollte 4 sein)
  582 | using enable_if_enum_flags_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, true, T, R>::type;
      |                                                                                     ^~
SHARED/magic_enum-master/include/magic_enum.hpp:560:8: Anmerkung: fÃ¼r Â»template<bool <anonym>, bool <anonym>, class T, class R> struct magic_enum::detail::enable_if_enumÂ« bereitgestellt
  560 | struct enable_if_enum {};
      |        ^~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:582:41: Fehler: Spezifikation mit geschachteltem Namen erwartet
  582 | using enable_if_enum_flags_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, true, T, R>::type;
      |                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:584:63: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  584 | template <typename T, typename Enable = std::enable_if_t<std::is_enum_v<std::decay_t<T>>>>
      |                                                               ^~~~~~~~~
      |                                                               is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:584:63: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  584 | template <typename T, typename Enable = std::enable_if_t<std::is_enum_v<std::decay_t<T>>>>
      |                                                               ^~~~~~~~~
      |                                                               is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:584:87: Fehler: Templateargument 1 ist ungÃ¼ltig
  584 | template <typename T, typename Enable = std::enable_if_t<std::is_enum_v<std::decay_t<T>>>>
      |                                                                                       ^~
SHARED/magic_enum-master/include/magic_enum.hpp:584:89: Fehler: expected Â»>Â« before Â»>>Â« token
  584 | template <typename T, typename Enable = std::enable_if_t<std::is_enum_v<std::decay_t<T>>>>
      |                                                                                         ^~
SHARED/magic_enum-master/include/magic_enum.hpp:587:35: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  587 | template <typename T, bool = std::is_enum_v<T>>
      |                                   ^~~~~~~~~
      |                                   is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:587:46: Fehler: expected primary-expression before Â»>>Â« token
  587 | template <typename T, bool = std::is_enum_v<T>>
      |                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:587:46: Fehler: expected Â»>Â« before Â»>>Â« token
SHARED/magic_enum-master/include/magic_enum.hpp:591:52: Fehler: expected template-name before Â»<Â« token
  591 | struct is_scoped_enum<T, true> : std::bool_constant<!std::is_convertible_v<T, std::underlying_type_t<T>>> {};
      |                                                    ^
SHARED/magic_enum-master/include/magic_enum.hpp:591:52: Fehler: expected Â»{Â« before Â»<Â« token
SHARED/magic_enum-master/include/magic_enum.hpp:593:35: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  593 | template <typename T, bool = std::is_enum_v<T>>
      |                                   ^~~~~~~~~
      |                                   is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:593:46: Fehler: expected primary-expression before Â»>>Â« token
  593 | template <typename T, bool = std::is_enum_v<T>>
      |                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:593:46: Fehler: expected Â»>Â« before Â»>>Â« token
SHARED/magic_enum-master/include/magic_enum.hpp:597:54: Fehler: expected template-name before Â»<Â« token
  597 | struct is_unscoped_enum<T, true> : std::bool_constant<std::is_convertible_v<T, std::underlying_type_t<T>>> {};
      |                                                      ^
SHARED/magic_enum-master/include/magic_enum.hpp:597:54: Fehler: expected Â»{Â« before Â»<Â« token
SHARED/magic_enum-master/include/magic_enum.hpp:599:35: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  599 | template <typename T, bool = std::is_enum_v<std::decay_t<T>>>
      |                                   ^~~~~~~~~
      |                                   is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:599:59: Fehler: expected primary-expression before Â»>Â« token
  599 | template <typename T, bool = std::is_enum_v<std::decay_t<T>>>
      |                                                           ^~
SHARED/magic_enum-master/include/magic_enum.hpp:599:61: Fehler: expected unqualified-id before Â»>Â« token
  599 | template <typename T, bool = std::is_enum_v<std::decay_t<T>>>
      |                                                             ^
SHARED/magic_enum-master/include/magic_enum.hpp:603:8: Fehler: Â»underlying_typeÂ« ist kein Klassentemplate
  603 | struct underlying_type<T, true> : std::underlying_type<std::decay_t<T>> {};
      |        ^~~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:608:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  608 | inline constexpr bool is_magic_enum_supported = detail::supported<void>::value;
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:611:36: Fehler: Templateargument 2 ist ungÃ¼ltig
  611 | using Enum = detail::enum_concept<T>;
      |                                    ^
SHARED/magic_enum-master/include/magic_enum.hpp:616:53: Fehler: Templateargument 2 ist ungÃ¼ltig
  616 | struct is_unscoped_enum : detail::is_unscoped_enum<T> {};
      |                                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:619:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  619 | inline constexpr bool is_unscoped_enum_v = is_unscoped_enum<T>::value;
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:624:49: Fehler: Templateargument 2 ist ungÃ¼ltig
  624 | struct is_scoped_enum : detail::is_scoped_enum<T> {};
      |                                                 ^
SHARED/magic_enum-master/include/magic_enum.hpp:627:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  627 | inline constexpr bool is_scoped_enum_v = is_scoped_enum<T>::value;
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:105: Fehler: Templateargument 1 ist ungÃ¼ltig
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                                         ^~
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:105: Fehler: Templateargument 1 ist ungÃ¼ltig
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                                         ^~
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:105: Fehler: Templateargument 1 ist ungÃ¼ltig
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                                         ^~
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:105: Fehler: Templateargument 1 ist ungÃ¼ltig
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                                         ^~
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:105: Fehler: Templateargument 1 ist ungÃ¼ltig
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                                         ^~
SHARED/magic_enum-master/include/magic_enum.hpp:639:59: Fehler: ungÃ¼ltige Verwendung des Template-Namens Â»std::enable_if_tÂ« ohne eine Argumentliste
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                           ^~~
In Datei, eingebunden von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/bits/move.h:57,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/bits/stl_pair.h:59,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/bits/stl_algobase.h:64,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/bits/char_traits.h:39,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/string:40,
                 von GCodeSender.h:5,
                 von GCodeSender.cpp:1:
/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/type_traits:2554:11: Anmerkung: Â»template<bool _Cond, class _Tp> using enable_if_t = typename std::enable_if::typeÂ« ist hier deklariert
 2554 |     using enable_if_t = typename enable_if<_Cond, _Tp>::type;
      |           ^~~~~~~~~~~
In Datei, eingebunden von ConfigParser.h:13,
                 von GCodeSender.h:16,
                 von GCodeSender.cpp:1:
SHARED/magic_enum-master/include/magic_enum.hpp:639:75: Fehler: expected initializer before Â»<Â« token
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                           ^
SHARED/magic_enum-master/include/magic_enum.hpp:649:63: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  649 | [[nodiscard]] constexpr auto enum_count() noexcept -> detail::enable_if_enum_t<E, std::size_t> {
      |                                                               ^~~~~~~~~~~~~~~~
      |                                                               enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:649:79: Fehler: expected initializer before Â»<Â« token
  649 | [[nodiscard]] constexpr auto enum_count() noexcept -> detail::enable_if_enum_t<E, std::size_t> {
      |                                                                               ^
SHARED/magic_enum-master/include/magic_enum.hpp:658:80: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  658 | [[nodiscard]] constexpr auto enum_value(std::size_t index) noexcept -> detail::enable_if_enum_t<E, std::decay_t<E>> {
      |                                                                                ^~~~~~~~~~~~~~~~
      |                                                                                enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:658:96: Fehler: expected initializer before Â»<Â« token
  658 | [[nodiscard]] constexpr auto enum_value(std::size_t index) noexcept -> detail::enable_if_enum_t<E, std::decay_t<E>> {
      |                                                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:670:64: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  670 | [[nodiscard]] constexpr auto enum_values() noexcept -> detail::enable_if_enum_t<E, detail::values_t<E>> {
      |                                                                ^~~~~~~~~~~~~~~~
      |                                                                enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:670:80: Fehler: expected initializer before Â»<Â« token
  670 | [[nodiscard]] constexpr auto enum_values() noexcept -> detail::enable_if_enum_t<E, detail::values_t<E>> {
      |                                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:678:11: Fehler: Â»autoÂ«-Parameter darf in diesem Kontext nicht verwendet werden
  678 | template <auto V>
      |           ^~~~
SHARED/magic_enum-master/include/magic_enum.hpp:679:76: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  679 | [[nodiscard]] constexpr auto enum_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<decltype(V)>>, string_view> {
      |                                                                            ^~~~~~~~~
      |                                                                            is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:679:76: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  679 | [[nodiscard]] constexpr auto enum_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<decltype(V)>>, string_view> {
      |                                                                            ^~~~~~~~~
      |                                                                            is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:679:99: Fehler: Templateargument 1 ist ungÃ¼ltig
  679 | [[nodiscard]] constexpr auto enum_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<decltype(V)>>, string_view> {
      |                                                                                                   ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:679:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  679 | [[nodiscard]] constexpr auto enum_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<decltype(V)>>, string_view> {
      |                                                                                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:690:69: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  690 | [[nodiscard]] constexpr auto enum_name(E value) noexcept -> detail::enable_if_enum_t<E, string_view> {
      |                                                                     ^~~~~~~~~~~~~~~~
      |                                                                     enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:690:85: Fehler: expected initializer before Â»<Â« token
  690 | [[nodiscard]] constexpr auto enum_name(E value) noexcept -> detail::enable_if_enum_t<E, string_view> {
      |                                                                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:702:63: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  702 | [[nodiscard]] constexpr auto enum_names() noexcept -> detail::enable_if_enum_t<E, detail::names_t<E>> {
      |                                                               ^~~~~~~~~~~~~~~~
      |                                                               enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:702:79: Fehler: expected initializer before Â»<Â« token
  702 | [[nodiscard]] constexpr auto enum_names() noexcept -> detail::enable_if_enum_t<E, detail::names_t<E>> {
      |                                                                               ^
SHARED/magic_enum-master/include/magic_enum.hpp:710:65: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  710 | [[nodiscard]] constexpr auto enum_entries() noexcept -> detail::enable_if_enum_t<E, detail::entries_t<E>> {
      |                                                                 ^~~~~~~~~~~~~~~~
      |                                                                 enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:710:81: Fehler: expected initializer before Â»<Â« token
  710 | [[nodiscard]] constexpr auto enum_entries() noexcept -> detail::enable_if_enum_t<E, detail::entries_t<E>> {
      |                                                                                 ^
SHARED/magic_enum-master/include/magic_enum.hpp:719:88: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  719 | [[nodiscard]] constexpr auto enum_cast(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                                                        ^~~~~~~~~~~~~~~~
      |                                                                                        enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:719:104: Fehler: expected initializer before Â»<Â« token
  719 | [[nodiscard]] constexpr auto enum_cast(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:732:40: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:732:40: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
SHARED/magic_enum-master/include/magic_enum.hpp:732:75: Fehler: expected primary-expression before Â»pÂ«
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                                           ^
SHARED/magic_enum-master/include/magic_enum.hpp:732:76: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                                            ^
SHARED/magic_enum-master/include/magic_enum.hpp:732:77: Fehler: expected Â»;Â« before Â»noexceptÂ«
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                                             ^~~~~~~~~
      |                                                                             ;
SHARED/magic_enum-master/include/magic_enum.hpp:748:40: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
  748 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:748:40: Fehler: Redeklaration von Â»template<class E> constexpr const auto magic_enum::enum_castÂ«
SHARED/magic_enum-master/include/magic_enum.hpp:732:30: Anmerkung: vorherige Deklaration von Â»template<class E, class BinaryPredicate> constexpr<TypprÃ¤fixfehler> magic_enum::enum_cast<E, BinaryPredicate>Â«
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                              ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:748:40: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  748 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:748:58: Fehler: expected Â»;Â« before Â»noexceptÂ«
  748 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                          ^~~~~~~~~
      |                                                          ;
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:756:64: Fehler: ungÃ¼ltige Verwendung des Template-Namens Â»std::enable_if_tÂ« ohne eine Argumentliste
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                ^~~
In Datei, eingebunden von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/bits/move.h:57,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/bits/stl_pair.h:59,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/bits/stl_algobase.h:64,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/bits/char_traits.h:39,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/string:40,
                 von GCodeSender.h:5,
                 von GCodeSender.cpp:1:
/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/type_traits:2554:11: Anmerkung: Â»template<bool _Cond, class _Tp> using enable_if_t = typename std::enable_if::typeÂ« ist hier deklariert
 2554 |     using enable_if_t = typename enable_if<_Cond, _Tp>::type;
      |           ^~~~~~~~~~~
In Datei, eingebunden von ConfigParser.h:13,
                 von GCodeSender.h:16,
                 von GCodeSender.cpp:1:
SHARED/magic_enum-master/include/magic_enum.hpp:756:80: Fehler: expected initializer before Â»<Â« token
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:763:70: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  763 | [[nodiscard]] constexpr auto enum_index(E value) noexcept -> detail::enable_if_enum_t<E, optional<std::size_t>> {
      |                                                                      ^~~~~~~~~~~~~~~~
      |                                                                      enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:763:86: Fehler: expected initializer before Â»<Â« token
  763 | [[nodiscard]] constexpr auto enum_index(E value) noexcept -> detail::enable_if_enum_t<E, optional<std::size_t>> {
      |                                                                                      ^
SHARED/magic_enum-master/include/magic_enum.hpp:775:73: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  775 | [[nodiscard]] constexpr auto enum_contains(E value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                                                         ^~~~~~~~~~~~~~~~
      |                                                                         enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:775:89: Fehler: expected initializer before Â»<Â« token
  775 | [[nodiscard]] constexpr auto enum_contains(E value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                                                                         ^
SHARED/magic_enum-master/include/magic_enum.hpp:783:92: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  783 | [[nodiscard]] constexpr auto enum_contains(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                                                                            ^~~~~~~~~~~~~~~~
      |                                                                                            enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:783:108: Fehler: expected initializer before Â»<Â« token
  783 | [[nodiscard]] constexpr auto enum_contains(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                                                                                            ^
SHARED/magic_enum-master/include/magic_enum.hpp:791:44: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
  791 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:791:44: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
SHARED/magic_enum-master/include/magic_enum.hpp:791:79: Fehler: expected primary-expression before Â»pÂ«
  791 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, bool> {
      |                                                                               ^
SHARED/magic_enum-master/include/magic_enum.hpp:791:80: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
  791 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, bool> {
      |                                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:791:81: Fehler: expected Â»;Â« before Â»noexceptÂ«
  791 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, bool> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 ;
SHARED/magic_enum-master/include/magic_enum.hpp:800:44: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
  800 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:800:44: Fehler: Redeklaration von Â»template<class E> constexpr const auto magic_enum::enum_containsÂ«
SHARED/magic_enum-master/include/magic_enum.hpp:791:30: Anmerkung: vorherige Deklaration von Â»template<class E, class BinaryPredicate> constexpr<TypprÃ¤fixfehler> magic_enum::enum_contains<E, BinaryPredicate>Â«
  791 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, bool> {
      |                              ^~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:800:44: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  800 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:800:62: Fehler: expected Â»;Â« before Â»noexceptÂ«
  800 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                                              ^~~~~~~~~
      |                                                              ;
SHARED/magic_enum-master/include/magic_enum.hpp:808:77: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  808 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                             ^~~~~~~~~
      |                                                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:808:77: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  808 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                             ^~~~~~~~~
      |                                                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:808:88: Fehler: Templateargument 1 ist ungÃ¼ltig
  808 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:808:96: Fehler: expected unqualified-id before Â»=Â« token
  808 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:823:77: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  823 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                             ^~~~~~~~~
      |                                                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:823:77: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  823 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                             ^~~~~~~~~
      |                                                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:823:88: Fehler: Templateargument 1 ist ungÃ¼ltig
  823 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:823:96: Fehler: expected unqualified-id before Â»=Â« token
  823 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:832:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  832 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:832:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  832 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:832:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  832 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:832:64: Fehler: expected unqualified-id before Â»=Â« token
  832 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:837:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  837 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:837:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  837 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:837:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  837 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:837:64: Fehler: expected unqualified-id before Â»=Â« token
  837 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:842:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  842 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:842:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  842 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:842:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  842 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:842:64: Fehler: expected unqualified-id before Â»=Â« token
  842 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:847:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  847 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:847:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  847 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:847:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  847 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:847:64: Fehler: expected unqualified-id before Â»=Â« token
  847 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:852:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  852 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:852:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  852 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:852:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  852 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:852:64: Fehler: expected unqualified-id before Â»=Â« token
  852 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:857:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  857 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:857:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  857 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:857:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  857 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:857:64: Fehler: expected unqualified-id before Â»=Â« token
  857 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:862:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  862 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:862:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  862 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:862:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  862 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:862:64: Fehler: expected unqualified-id before Â»=Â« token
  862 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:872:19: Fehler: Â»enum_type_nameÂ« wurde nicht innerhalb von Â»magic_enumÂ« deklariert
  872 | using magic_enum::enum_type_name;
      |                   ^~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:876:63: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  876 | [[nodiscard]] constexpr auto enum_count() noexcept -> detail::enable_if_enum_flags_t<E, std::size_t> {
      |                                                               ^~~~~~~~~~~~~~~~~~~~~~
      |                                                               enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:876:85: Fehler: expected initializer before Â»<Â« token
  876 | [[nodiscard]] constexpr auto enum_count() noexcept -> detail::enable_if_enum_flags_t<E, std::size_t> {
      |                                                                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:885:80: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  885 | [[nodiscard]] constexpr auto enum_value(std::size_t index) noexcept -> detail::enable_if_enum_flags_t<E, std::decay_t<E>> {
      |                                                                                ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                                enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:885:102: Fehler: expected initializer before Â»<Â« token
  885 | [[nodiscard]] constexpr auto enum_value(std::size_t index) noexcept -> detail::enable_if_enum_flags_t<E, std::decay_t<E>> {
      |                                                                                                      ^
SHARED/magic_enum-master/include/magic_enum.hpp:899:64: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  899 | [[nodiscard]] constexpr auto enum_values() noexcept -> detail::enable_if_enum_flags_t<E, detail::values_t<E, true>> {
      |                                                                ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:899:86: Fehler: expected initializer before Â»<Â« token
  899 | [[nodiscard]] constexpr auto enum_values() noexcept -> detail::enable_if_enum_flags_t<E, detail::values_t<E, true>> {
      |                                                                                      ^
SHARED/magic_enum-master/include/magic_enum.hpp:908:50: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  908 | [[nodiscard]] auto enum_name(E value) -> detail::enable_if_enum_flags_t<E, string> {
      |                                                  ^~~~~~~~~~~~~~~~~~~~~~
      |                                                  enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:908:72: Fehler: expected initializer before Â»<Â« token
  908 | [[nodiscard]] auto enum_name(E value) -> detail::enable_if_enum_flags_t<E, string> {
      |                                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:934:63: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  934 | [[nodiscard]] constexpr auto enum_names() noexcept -> detail::enable_if_enum_flags_t<E, detail::names_t<E, true>> {
      |                                                               ^~~~~~~~~~~~~~~~~~~~~~
      |                                                               enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:934:85: Fehler: expected initializer before Â»<Â« token
  934 | [[nodiscard]] constexpr auto enum_names() noexcept -> detail::enable_if_enum_flags_t<E, detail::names_t<E, true>> {
      |                                                                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:942:65: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  942 | [[nodiscard]] constexpr auto enum_entries() noexcept -> detail::enable_if_enum_flags_t<E, detail::entries_t<E, true>> {
      |                                                                 ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                 enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:942:87: Fehler: expected initializer before Â»<Â« token
  942 | [[nodiscard]] constexpr auto enum_entries() noexcept -> detail::enable_if_enum_flags_t<E, detail::entries_t<E, true>> {
      |                                                                                       ^
SHARED/magic_enum-master/include/magic_enum.hpp:951:88: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  951 | [[nodiscard]] constexpr auto enum_cast(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                                                        ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                                        enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:951:110: Fehler: expected initializer before Â»<Â« token
  951 | [[nodiscard]] constexpr auto enum_cast(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                                                                              ^
SHARED/magic_enum-master/include/magic_enum.hpp:981:40: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
  981 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:981:40: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
SHARED/magic_enum-master/include/magic_enum.hpp:981:75: Fehler: expected primary-expression before Â»pÂ«
  981 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                                           ^
SHARED/magic_enum-master/include/magic_enum.hpp:981:76: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
  981 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                                            ^
SHARED/magic_enum-master/include/magic_enum.hpp:981:77: Fehler: expected Â»;Â« before Â»noexceptÂ«
  981 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                                             ^~~~~~~~~
      |                                                                             ;
SHARED/magic_enum-master/include/magic_enum.hpp:1014:40: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
 1014 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1014:40: Fehler: Redeklaration von Â»template<class E> constexpr const auto magic_enum::flags::enum_castÂ«
SHARED/magic_enum-master/include/magic_enum.hpp:981:30: Anmerkung: vorherige Deklaration von Â»template<class E, class BinaryPredicate> constexpr<TypprÃ¤fixfehler> magic_enum::flags::enum_cast<E, BinaryPredicate>Â«
  981 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                              ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1014:40: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
 1014 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1014:58: Fehler: expected Â»;Â« before Â»noexceptÂ«
 1014 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                          ^~~~~~~~~
      |                                                          ;
SHARED/magic_enum-master/include/magic_enum.hpp:1021:19: Fehler: Â»enum_integerÂ« wurde nicht innerhalb von Â»magic_enumÂ« deklariert
 1021 | using magic_enum::enum_integer;
      |                   ^~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1026:70: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
 1026 | [[nodiscard]] constexpr auto enum_index(E value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::size_t>> {
      |                                                                      ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                      enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:1026:92: Fehler: expected initializer before Â»<Â« token
 1026 | [[nodiscard]] constexpr auto enum_index(E value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::size_t>> {
      |                                                                                            ^
SHARED/magic_enum-master/include/magic_enum.hpp:1043:73: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
 1043 | [[nodiscard]] constexpr auto enum_contains(E value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                         ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                         enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:1043:95: Fehler: expected initializer before Â»<Â« token
 1043 | [[nodiscard]] constexpr auto enum_contains(E value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                                               ^
SHARED/magic_enum-master/include/magic_enum.hpp:1052:92: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
 1052 | [[nodiscard]] constexpr auto enum_contains(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                                            ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                                            enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:1052:114: Fehler: expected initializer before Â»<Â« token
 1052 | [[nodiscard]] constexpr auto enum_contains(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                                                                  ^
SHARED/magic_enum-master/include/magic_enum.hpp:1060:44: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
 1060 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1060:44: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
SHARED/magic_enum-master/include/magic_enum.hpp:1060:79: Fehler: expected primary-expression before Â»pÂ«
 1060 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                               ^
SHARED/magic_enum-master/include/magic_enum.hpp:1060:80: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
 1060 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:1060:81: Fehler: expected Â»;Â« before Â»noexceptÂ«
 1060 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 ;
SHARED/magic_enum-master/include/magic_enum.hpp:1069:44: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
 1069 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1069:44: Fehler: Redeklaration von Â»template<class E> constexpr const auto magic_enum::flags::enum_containsÂ«
SHARED/magic_enum-master/include/magic_enum.hpp:1060:30: Anmerkung: vorherige Deklaration von Â»template<class E, class BinaryPredicate> constexpr<TypprÃ¤fixfehler> magic_enum::flags::enum_contains<E, BinaryPredicate>Â«
 1060 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, bool> {
      |                              ^~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1069:44: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
 1069 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1069:62: Fehler: expected Â»;Â« before Â»noexceptÂ«
 1069 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                              ^~~~~~~~~
      |                                                              ;
SHARED/magic_enum-master/include/magic_enum.hpp:1079:63: Fehler: Â»magic_enum::detail::enable_if_enum_flags_tÂ« wurde nicht deklariert
 1079 | template <typename Char, typename Traits, typename E, detail::enable_if_enum_flags_t<E, int> = 0>
      |                                                               ^~~~~~~~~~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1079:85: Fehler: expected Â»>Â« before Â»<Â« token
 1079 | template <typename Char, typename Traits, typename E, detail::enable_if_enum_flags_t<E, int> = 0>
      |                                                                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»std::basic_ostream<_CharT, _Traits>& magic_enum::flags::ostream_operators::operator<<(std::basic_ostream<_CharT, _Traits>&, E)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:1084:7: Warnung: Â»init-statement in AuswahlanweisungenÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
 1084 |   if (const auto name = magic_enum::flags::enum_name<D>(value); !name.empty()) {
      |       ^~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1084:44: Fehler: Â»enum_nameÂ« ist kein Element von Â»magic_enum::flagsÂ«; meinten Sie Â»enum_castÂ«?
 1084 |   if (const auto name = magic_enum::flags::enum_name<D>(value); !name.empty()) {
      |                                            ^~~~~~~~~
      |                                            enum_cast
SHARED/magic_enum-master/include/magic_enum.hpp:1084:55: Fehler: expected primary-expression before Â»>Â« token
 1084 |   if (const auto name = magic_enum::flags::enum_name<D>(value); !name.empty()) {
      |                                                       ^
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:1094:63: Fehler: Â»magic_enum::detail::enable_if_enum_flags_tÂ« wurde nicht deklariert
 1094 | template <typename Char, typename Traits, typename E, detail::enable_if_enum_flags_t<E, int> = 0>
      |                                                               ^~~~~~~~~~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1094:85: Fehler: expected Â»>Â« before Â»<Â« token
 1094 | template <typename Char, typename Traits, typename E, detail::enable_if_enum_flags_t<E, int> = 0>
      |                                                                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:1095:84: Fehler: Â»optionalÂ« wurde nicht deklariert
 1095 | std::basic_ostream<Char, Traits>& operator<<(std::basic_ostream<Char, Traits>& os, optional<E> value) {
      |                                                                                    ^~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1095:92: Fehler: expected Â»,Â« or Â»...Â« before Â»<Â« token
 1095 | std::basic_ostream<Char, Traits>& operator<<(std::basic_ostream<Char, Traits>& os, optional<E> value) {
      |                                                                                            ^
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»std::basic_ostream<_CharT, _Traits>& magic_enum::flags::ostream_operators::operator<<(std::basic_ostream<_CharT, _Traits>&, int)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:1096:10: Fehler: Â»valueÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht deklariert; meinten Sie Â»magic_enum::detail::valueÂ«?
 1096 |   return value.has_value() ? (os << value.value()) : os;
      |          ^~~~~
      |          magic_enum::detail::value
SHARED/magic_enum-master/include/magic_enum.hpp:395:13: Anmerkung: Â»magic_enum::detail::valueÂ« ist hier deklariert
  395 | constexpr E value(std::size_t i) noexcept {
      |             ^~~~~
Makefile:212: recipe for target 'Debug/GCodeSender.o' failed
make[1]: *** [Debug/GCodeSender.o] Error 1
make[1]: *** Auf noch nicht beendete Prozesse wird gewartet â€¦
In Datei, eingebunden von ConfigParser.h:13,
                 von HardwareInterface.h:15,
                 von HardwareInterface.cpp:1:
SHARED/magic_enum-master/include/magic_enum.hpp:99:23: Fehler: Â»optionalÂ« in Namensraum Â»stdÂ« bezeichnet keinen Templatetyp
   99 | using optional = std::optional<T>;
      |                       ^~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:99:18: Anmerkung: Â»std::optionalÂ« ist erst ab C++17 verfÃ¼gbar
   99 | using optional = std::optional<T>;
      |                  ^~~
SHARED/magic_enum-master/include/magic_enum.hpp:106:26: Fehler: Â»string_viewÂ« in Namensbereich Â»stdÂ« bezeichnet keinen Typ
  106 | using string_view = std::string_view;
      |                          ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:106:21: Anmerkung: Â»std::string_viewÂ« ist erst ab C++17 verfÃ¼gbar
  106 | using string_view = std::string_view;
      |                     ^~~
In Datei, eingebunden von ConfigParser.h:13,
                 von HardwareInterface.h:15,
                 von HardwareInterface.cpp:1:
SHARED/magic_enum-master/include/magic_enum.hpp:123:22: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  123 |   static_assert(std::is_enum_v<E>, "magic_enum::customize::enum_range requires enum type.");
      |                      ^~~~~~~~~
      |                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:123:33: Fehler: expected primary-expression before Â»>Â« token
  123 |   static_assert(std::is_enum_v<E>, "magic_enum::customize::enum_range requires enum type.");
      |                                 ^
SHARED/magic_enum-master/include/magic_enum.hpp:123:34: Fehler: expected primary-expression before Â»,Â« token
  123 |   static_assert(std::is_enum_v<E>, "magic_enum::customize::enum_range requires enum type.");
      |                                  ^
SHARED/magic_enum-master/include/magic_enum.hpp:124:3: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  124 |   inline static constexpr int min = MAGIC_ENUM_RANGE_MIN;
      |   ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:125:3: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  125 |   inline static constexpr int max = MAGIC_ENUM_RANGE_MAX;
      |   ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:139:11: Fehler: Â»string_viewÂ« bezeichnet keinen Typ
  139 | constexpr string_view enum_name(E) noexcept {
      |           ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:159:47: Fehler: expected Â»)Â« before Â»strÂ«
  159 |   constexpr explicit static_string(string_view str) noexcept : static_string{str, std::make_index_sequence<N>{}} {
      |                                   ~           ^~~~
      |                                               )
SHARED/magic_enum-master/include/magic_enum.hpp:159:114: Fehler: expected unqualified-id before Â»{Â« token
  159 |   constexpr explicit static_string(string_view str) noexcept : static_string{str, std::make_index_sequence<N>{}} {
      |                                                                                                                  ^
SHARED/magic_enum-master/include/magic_enum.hpp:167:22: Fehler: expected type-specifier before Â»string_viewÂ«
  167 |   constexpr operator string_view() const noexcept { return {data(), size()}; }
      |                      ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:171:38: Fehler: expected Â»)Â« before Â»strÂ«
  171 |   constexpr static_string(string_view str, std::index_sequence<I...>) noexcept : chars{{str[I]..., '\0'}} {}
      |                          ~           ^~~~
      |                                      )
SHARED/magic_enum-master/include/magic_enum.hpp:171:107: Fehler: expected unqualified-id before Â»{Â« token
  171 |   constexpr static_string(string_view str, std::index_sequence<I...>) noexcept : chars{{str[I]..., '\0'}} {}
      |                                                                                                           ^
SHARED/magic_enum-master/include/magic_enum.hpp:178:13: Fehler: nur Deklarationen von Konstruktoren und Umwandlungsoperatoren kÃ¶nnen Â»explicitÂ« sein
  178 |   constexpr explicit static_string(string_view) noexcept {}
      |             ^~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:178:36: Fehler: Feld Â»string_viewÂ« hat unvollstÃ¤ndigen Typen Â»const magic_enum::detail::static_string<0>Â«
  178 |   constexpr explicit static_string(string_view) noexcept {}
      |                                    ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:177:8: Anmerkung: Definition von Â»struct magic_enum::detail::static_string<0>Â« ist erst nach der schlieÃŸenden Klammer vollendet
  177 | struct static_string<0> {
      |        ^~~~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:178:3: Fehler: nicht-statisches Datenelement Â»string_viewÂ« als Â»constexprÂ« deklariert
  178 |   constexpr explicit static_string(string_view) noexcept {}
      |   ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:178:47: Fehler: Â»;Â« am Ende von Elementdeklaration erwartet
  178 |   constexpr explicit static_string(string_view) noexcept {}
      |                                               ^
      |                                                ;
SHARED/magic_enum-master/include/magic_enum.hpp:178:49: Fehler: expected unqualified-id before Â»noexceptÂ«
  178 |   constexpr explicit static_string(string_view) noexcept {}
      |                                                 ^~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:184:22: Fehler: expected type-specifier before Â»string_viewÂ«
  184 |   constexpr operator string_view() const noexcept { return {}; }
      |                      ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:193:11: Fehler: Â»string_viewÂ« bezeichnet keinen Typ
  193 | constexpr string_view pretty_name(string_view name) noexcept {
      |           ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:213:28: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  213 | constexpr std::size_t find(string_view str, char c) noexcept {
      |                            ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:213:45: Fehler: expected primary-expression before Â»charÂ«
  213 | constexpr std::size_t find(string_view str, char c) noexcept {
      |                                             ^~~~
SHARED/magic_enum-master/include/magic_enum.hpp:213:51: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
  213 | constexpr std::size_t find(string_view str, char c) noexcept {
      |                                                   ^
SHARED/magic_enum-master/include/magic_enum.hpp:235:26: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                          ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:235:43: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                                           ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:235:75: Fehler: expected primary-expression before Â»&&Â« token
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                                                                           ^~
SHARED/magic_enum-master/include/magic_enum.hpp:235:78: Fehler: Â»pÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                                                                              ^
SHARED/magic_enum-master/include/magic_enum.hpp:235:79: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                                                                               ^
SHARED/magic_enum-master/include/magic_enum.hpp:235:80: Fehler: expected Â»;Â« before Â»noexceptÂ«
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                                                                                ^~~~~~~~~
      |                                                                                ;
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr bool magic_enum::detail::cmp_less(L, R)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:264:22: Fehler: Â»is_integral_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_integralÂ«?
  264 |   static_assert(std::is_integral_v<L> && std::is_integral_v<R>, "magic_enum::detail::cmp_less requires integral type.");
      |                      ^~~~~~~~~~~~~
      |                      is_integral
SHARED/magic_enum-master/include/magic_enum.hpp:264:37: Fehler: expected primary-expression before Â»>Â« token
  264 |   static_assert(std::is_integral_v<L> && std::is_integral_v<R>, "magic_enum::detail::cmp_less requires integral type.");
      |                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:264:45: Fehler: expected Â»,Â« before Â»::Â« token
  264 |   static_assert(std::is_integral_v<L> && std::is_integral_v<R>, "magic_enum::detail::cmp_less requires integral type.");
      |                                             ^~
      |                                             ,
SHARED/magic_enum-master/include/magic_enum.hpp:264:45: Fehler: expected string-literal before Â»::Â« token
  264 |   static_assert(std::is_integral_v<L> && std::is_integral_v<R>, "magic_enum::detail::cmp_less requires integral type.");
      |                                             ^~
SHARED/magic_enum-master/include/magic_enum.hpp:264:45: Fehler: expected Â»)Â« before Â»::Â« token
  264 |   static_assert(std::is_integral_v<L> && std::is_integral_v<R>, "magic_enum::detail::cmp_less requires integral type.");
      |                ~                            ^~
      |                                             )
SHARED/magic_enum-master/include/magic_enum.hpp:266:6: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |      ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:266:22: Fehler: Â»is_signed_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_signedÂ«?
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                      ^~~~~~~~~~~
      |                      is_signed
SHARED/magic_enum-master/include/magic_enum.hpp:266:35: Fehler: expected primary-expression before Â»>Â« token
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                                   ^
SHARED/magic_enum-master/include/magic_enum.hpp:266:37: Fehler: expected primary-expression before Â»==Â« token
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                                     ^~
SHARED/magic_enum-master/include/magic_enum.hpp:266:45: Fehler: Â»is_signed_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_signedÂ«?
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                                             ^~~~~~~~~~~
      |                                             is_signed
SHARED/magic_enum-master/include/magic_enum.hpp:266:58: Fehler: expected primary-expression before Â»>Â« token
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                                                          ^
SHARED/magic_enum-master/include/magic_enum.hpp:266:59: Fehler: expected primary-expression before Â»)Â« token
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                                                           ^
SHARED/magic_enum-master/include/magic_enum.hpp:269:13: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  269 |   } else if constexpr (std::is_signed_v<R>) {
      |             ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:269:29: Fehler: Â»is_signed_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_signedÂ«?
  269 |   } else if constexpr (std::is_signed_v<R>) {
      |                             ^~~~~~~~~~~
      |                             is_signed
SHARED/magic_enum-master/include/magic_enum.hpp:269:42: Fehler: expected primary-expression before Â»>Â« token
  269 |   } else if constexpr (std::is_signed_v<R>) {
      |                                          ^
SHARED/magic_enum-master/include/magic_enum.hpp:269:43: Fehler: expected primary-expression before Â»)Â« token
  269 |   } else if constexpr (std::is_signed_v<R>) {
      |                                           ^
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr I magic_enum::detail::log2(I)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:280:22: Fehler: Â»is_integral_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_integralÂ«?
  280 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::log2 requires integral type.");
      |                      ^~~~~~~~~~~~~
      |                      is_integral
SHARED/magic_enum-master/include/magic_enum.hpp:280:37: Fehler: expected primary-expression before Â»>Â« token
  280 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::log2 requires integral type.");
      |                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:280:38: Fehler: expected primary-expression before Â»,Â« token
  280 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::log2 requires integral type.");
      |                                      ^
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr bool magic_enum::detail::is_pow2(I)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:290:22: Fehler: Â»is_integral_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_integralÂ«?
  290 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::is_pow2 requires integral type.");
      |                      ^~~~~~~~~~~~~
      |                      is_integral
SHARED/magic_enum-master/include/magic_enum.hpp:290:37: Fehler: expected primary-expression before Â»>Â« token
  290 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::is_pow2 requires integral type.");
      |                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:290:38: Fehler: expected primary-expression before Â»,Â« token
  290 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::is_pow2 requires integral type.");
      |                                      ^
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:296:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  296 | inline constexpr bool is_enum_v = std::is_enum_v<T> && std::is_same_v<T, std::decay_t<T>>;
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:296:40: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  296 | inline constexpr bool is_enum_v = std::is_enum_v<T> && std::is_same_v<T, std::decay_t<T>>;
      |                                        ^~~~~~~~~
      |                                        is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:296:51: Fehler: expected primary-expression before Â»>Â« token
  296 | inline constexpr bool is_enum_v = std::is_enum_v<T> && std::is_same_v<T, std::decay_t<T>>;
      |                                                   ^
SHARED/magic_enum-master/include/magic_enum.hpp:296:56: Fehler: Marke Â»stdÂ« auÃŸerhalb einer Funktion referenziert
  296 | inline constexpr bool is_enum_v = std::is_enum_v<T> && std::is_same_v<T, std::decay_t<T>>;
      |                                                        ^~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr auto magic_enum::detail::n()Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:305:13: Fehler: Â»string_viewÂ« bezeichnet keinen Typ
  305 |   constexpr string_view name{__PRETTY_FUNCTION__ + 49, sizeof(__PRETTY_FUNCTION__) - 51};
      |             ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:309:24: Fehler: Â»nameÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht deklariert; meinten Sie Â»renameÂ«?
  309 |   return static_string<name.size()>{name};
      |                        ^~~~
      |                        rename
SHARED/magic_enum-master/include/magic_enum.hpp:309:35: Fehler: Templateargument 1 ist ungÃ¼ltig
  309 |   return static_string<name.size()>{name};
      |                                   ^
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:316:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  316 | inline constexpr auto type_name_v = n<E>();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr auto magic_enum::detail::n()Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:321:43: Fehler: Â»enum_nameÂ« ist kein Element von Â»magic_enum::customizeÂ«; meinten Sie Â»enum_rangeÂ«?
  321 |   constexpr auto custom_name = customize::enum_name<E>(V);
      |                                           ^~~~~~~~~
      |                                           enum_range
SHARED/magic_enum-master/include/magic_enum.hpp:321:54: Fehler: expected primary-expression before Â»>Â« token
  321 |   constexpr auto custom_name = customize::enum_name<E>(V);
      |                                                      ^
SHARED/magic_enum-master/include/magic_enum.hpp:323:6: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  323 |   if constexpr (custom_name.empty()) {
      |      ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:341:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  341 | inline constexpr auto enum_name_v = n<E, V>();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:343:23: Fehler: Â»autoÂ«-Parameter darf in diesem Kontext nicht verwendet werden
  343 | template <typename E, auto V>
      |                       ^~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr int magic_enum::detail::reflected_min()Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:354:6: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  354 |   if constexpr (IsFlags) {
      |      ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:361:8: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  361 |     if constexpr (cmp_less(lhs, rhs)) {
      |        ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr int magic_enum::detail::reflected_max()Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:373:6: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  373 |   if constexpr (IsFlags) {
      |      ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:380:8: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  380 |     if constexpr (cmp_less(lhs, rhs)) {
      |        ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:389:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  389 | inline constexpr auto reflected_min_v = reflected_min<E, IsFlags>();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:392:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  392 | inline constexpr auto reflected_max_v = reflected_max<E, IsFlags>();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr E magic_enum::detail::value(std::size_t)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:398:6: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  398 |   if constexpr (IsFlags) {
      |      ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr auto magic_enum::detail::values(std::index_sequence<I ...>)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:409:62: Fehler: Â»constexprÂ«-Lambda ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  409 |   constexpr std::size_t count = [](decltype((valid)) valid_) constexpr noexcept -> std::size_t {
      |                                                              ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:419:22: Fehler: der Wert von Â»countÂ« ist in konstantem Ausdruck nicht verwendbar
  419 |   std::array<E, count> values{};
      |                      ^
SHARED/magic_enum-master/include/magic_enum.hpp:409:25: Anmerkung: Â»countÂ« in seiner eigenen Initialisierung verwendet
  409 |   constexpr std::size_t count = [](decltype((valid)) valid_) constexpr noexcept -> std::size_t {
      |                         ^~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:419:22: Anmerkung: in Templateargument fÃ¼r Typ Â»unsigned intÂ«
  419 |   std::array<E, count> values{};
      |                      ^
SHARED/magic_enum-master/include/magic_enum.hpp:422:13: Fehler: ungÃ¼ltige Typen Â»int[std::size_t {aka unsigned int}]Â« fÃ¼r Feldindex
  422 |       values[v++] = value<E, Min, IsFlags>(i);
      |             ^
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:440:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  440 | inline constexpr auto values_v = values<E, IsFlags>();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:446:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  446 | inline constexpr auto count_v = values_v<E, IsFlags>.size();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:449:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  449 | inline constexpr auto min_v = static_cast<U>(values_v<E, IsFlags>.front());
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:452:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  452 | inline constexpr auto max_v = static_cast<U>(values_v<E, IsFlags>.back());
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:467:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  467 | inline constexpr auto range_size_v = range_size<E, IsFlags>();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:473:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  473 | inline constexpr auto invalid_index_v = (std::numeric_limits<index_t<E, IsFlags>>::max)();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:485:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  485 | inline constexpr auto indexes_v = indexes<E, IsFlags>(std::make_index_sequence<range_size_v<E, IsFlags>>{});
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr auto magic_enum::detail::names(std::index_sequence<I ...>)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:491:21: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  491 |   return std::array<string_view, sizeof...(I)>{{enum_name_v<E, values_v<E, IsFlags>[I]>...}};
      |                     ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:491:46: Fehler: Templateargument 1 ist ungÃ¼ltig
  491 |   return std::array<string_view, sizeof...(I)>{{enum_name_v<E, values_v<E, IsFlags>[I]>...}};
      |                                              ^
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:495:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  495 | inline constexpr auto names_v = names<E, IsFlags>(std::make_index_sequence<count_v<E, IsFlags>>{});
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr auto magic_enum::detail::entries(std::index_sequence<I ...>)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:504:34: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  504 |   return std::array<std::pair<E, string_view>, sizeof...(I)>{{{values_v<E, IsFlags>[I], enum_name_v<E, values_v<E, IsFlags>[I]>}...}};
      |                                  ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:504:45: Fehler: Templateargument 2 ist ungÃ¼ltig
  504 |   return std::array<std::pair<E, string_view>, sizeof...(I)>{{{values_v<E, IsFlags>[I], enum_name_v<E, values_v<E, IsFlags>[I]>}...}};
      |                                             ^
SHARED/magic_enum-master/include/magic_enum.hpp:504:60: Fehler: Templateargument 1 ist ungÃ¼ltig
  504 |   return std::array<std::pair<E, string_view>, sizeof...(I)>{{{values_v<E, IsFlags>[I], enum_name_v<E, values_v<E, IsFlags>[I]>}...}};
      |                                                            ^
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:508:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  508 | inline constexpr auto entries_v = entries<E, IsFlags>(std::make_index_sequence<count_v<E, IsFlags>>{});
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:521:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  521 | inline constexpr bool is_sparse_v = is_sparse<E, IsFlags>();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr std::size_t magic_enum::detail::undex(U)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:527:7: Warnung: Â»init-statement in AuswahlanweisungenÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  527 |   if (const auto i = static_cast<std::size_t>(value - min_v<E>); value >= min_v<E> && value <= max_v<E>) {
      |       ^~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:528:8: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  528 |     if constexpr (is_sparse_v<E>) {
      |        ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:529:11: Warnung: Â»init-statement in AuswahlanweisungenÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  529 |       if (const auto idx = indexes_v<E>[i]; idx != invalid_index_v<E>) {
      |           ^~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:579:55: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  579 | using enable_if_enum_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, false, T, R>::type;
      |                                                       ^~~~~~~~~
      |                                                       is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:579:55: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  579 | using enable_if_enum_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, false, T, R>::type;
      |                                                       ^~~~~~~~~
      |                                                       is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:579:79: Fehler: falsche Anzahl der Templateargumente (1, sollte 4 sein)
  579 | using enable_if_enum_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, false, T, R>::type;
      |                                                                               ^~
SHARED/magic_enum-master/include/magic_enum.hpp:560:8: Anmerkung: fÃ¼r Â»template<bool <anonym>, bool <anonym>, class T, class R> struct magic_enum::detail::enable_if_enumÂ« bereitgestellt
  560 | struct enable_if_enum {};
      |        ^~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:579:35: Fehler: Spezifikation mit geschachteltem Namen erwartet
  579 | using enable_if_enum_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, false, T, R>::type;
      |                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:582:61: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  582 | using enable_if_enum_flags_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, true, T, R>::type;
      |                                                             ^~~~~~~~~
      |                                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:582:61: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  582 | using enable_if_enum_flags_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, true, T, R>::type;
      |                                                             ^~~~~~~~~
      |                                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:582:85: Fehler: falsche Anzahl der Templateargumente (1, sollte 4 sein)
  582 | using enable_if_enum_flags_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, true, T, R>::type;
      |                                                                                     ^~
SHARED/magic_enum-master/include/magic_enum.hpp:560:8: Anmerkung: fÃ¼r Â»template<bool <anonym>, bool <anonym>, class T, class R> struct magic_enum::detail::enable_if_enumÂ« bereitgestellt
  560 | struct enable_if_enum {};
      |        ^~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:582:41: Fehler: Spezifikation mit geschachteltem Namen erwartet
  582 | using enable_if_enum_flags_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, true, T, R>::type;
      |                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:584:63: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  584 | template <typename T, typename Enable = std::enable_if_t<std::is_enum_v<std::decay_t<T>>>>
      |                                                               ^~~~~~~~~
      |                                                               is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:584:63: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  584 | template <typename T, typename Enable = std::enable_if_t<std::is_enum_v<std::decay_t<T>>>>
      |                                                               ^~~~~~~~~
      |                                                               is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:584:87: Fehler: Templateargument 1 ist ungÃ¼ltig
  584 | template <typename T, typename Enable = std::enable_if_t<std::is_enum_v<std::decay_t<T>>>>
      |                                                                                       ^~
SHARED/magic_enum-master/include/magic_enum.hpp:584:89: Fehler: expected Â»>Â« before Â»>>Â« token
  584 | template <typename T, typename Enable = std::enable_if_t<std::is_enum_v<std::decay_t<T>>>>
      |                                                                                         ^~
SHARED/magic_enum-master/include/magic_enum.hpp:587:35: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  587 | template <typename T, bool = std::is_enum_v<T>>
      |                                   ^~~~~~~~~
      |                                   is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:587:46: Fehler: expected primary-expression before Â»>>Â« token
  587 | template <typename T, bool = std::is_enum_v<T>>
      |                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:587:46: Fehler: expected Â»>Â« before Â»>>Â« token
SHARED/magic_enum-master/include/magic_enum.hpp:591:52: Fehler: expected template-name before Â»<Â« token
  591 | struct is_scoped_enum<T, true> : std::bool_constant<!std::is_convertible_v<T, std::underlying_type_t<T>>> {};
      |                                                    ^
SHARED/magic_enum-master/include/magic_enum.hpp:591:52: Fehler: expected Â»{Â« before Â»<Â« token
SHARED/magic_enum-master/include/magic_enum.hpp:593:35: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  593 | template <typename T, bool = std::is_enum_v<T>>
      |                                   ^~~~~~~~~
      |                                   is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:593:46: Fehler: expected primary-expression before Â»>>Â« token
  593 | template <typename T, bool = std::is_enum_v<T>>
      |                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:593:46: Fehler: expected Â»>Â« before Â»>>Â« token
SHARED/magic_enum-master/include/magic_enum.hpp:597:54: Fehler: expected template-name before Â»<Â« token
  597 | struct is_unscoped_enum<T, true> : std::bool_constant<std::is_convertible_v<T, std::underlying_type_t<T>>> {};
      |                                                      ^
SHARED/magic_enum-master/include/magic_enum.hpp:597:54: Fehler: expected Â»{Â« before Â»<Â« token
SHARED/magic_enum-master/include/magic_enum.hpp:599:35: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  599 | template <typename T, bool = std::is_enum_v<std::decay_t<T>>>
      |                                   ^~~~~~~~~
      |                                   is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:599:59: Fehler: expected primary-expression before Â»>Â« token
  599 | template <typename T, bool = std::is_enum_v<std::decay_t<T>>>
      |                                                           ^~
SHARED/magic_enum-master/include/magic_enum.hpp:599:61: Fehler: expected unqualified-id before Â»>Â« token
  599 | template <typename T, bool = std::is_enum_v<std::decay_t<T>>>
      |                                                             ^
SHARED/magic_enum-master/include/magic_enum.hpp:603:8: Fehler: Â»underlying_typeÂ« ist kein Klassentemplate
  603 | struct underlying_type<T, true> : std::underlying_type<std::decay_t<T>> {};
      |        ^~~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:608:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  608 | inline constexpr bool is_magic_enum_supported = detail::supported<void>::value;
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:611:36: Fehler: Templateargument 2 ist ungÃ¼ltig
  611 | using Enum = detail::enum_concept<T>;
      |                                    ^
SHARED/magic_enum-master/include/magic_enum.hpp:616:53: Fehler: Templateargument 2 ist ungÃ¼ltig
  616 | struct is_unscoped_enum : detail::is_unscoped_enum<T> {};
      |                                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:619:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  619 | inline constexpr bool is_unscoped_enum_v = is_unscoped_enum<T>::value;
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:624:49: Fehler: Templateargument 2 ist ungÃ¼ltig
  624 | struct is_scoped_enum : detail::is_scoped_enum<T> {};
      |                                                 ^
SHARED/magic_enum-master/include/magic_enum.hpp:627:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  627 | inline constexpr bool is_scoped_enum_v = is_scoped_enum<T>::value;
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:105: Fehler: Templateargument 1 ist ungÃ¼ltig
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                                         ^~
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:105: Fehler: Templateargument 1 ist ungÃ¼ltig
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                                         ^~
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:105: Fehler: Templateargument 1 ist ungÃ¼ltig
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                                         ^~
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:105: Fehler: Templateargument 1 ist ungÃ¼ltig
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                                         ^~
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:105: Fehler: Templateargument 1 ist ungÃ¼ltig
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                                         ^~
SHARED/magic_enum-master/include/magic_enum.hpp:639:59: Fehler: ungÃ¼ltige Verwendung des Template-Namens Â»std::enable_if_tÂ« ohne eine Argumentliste
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                           ^~~
In Datei, eingebunden von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/ratio:39,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/chrono:39,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/thread:43,
                 von HardwareInterface.h:8,
                 von HardwareInterface.cpp:1:
/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/type_traits:2554:11: Anmerkung: Â»template<bool _Cond, class _Tp> using enable_if_t = typename std::enable_if::typeÂ« ist hier deklariert
 2554 |     using enable_if_t = typename enable_if<_Cond, _Tp>::type;
      |           ^~~~~~~~~~~
In Datei, eingebunden von ConfigParser.h:13,
                 von HardwareInterface.h:15,
                 von HardwareInterface.cpp:1:
SHARED/magic_enum-master/include/magic_enum.hpp:639:75: Fehler: expected initializer before Â»<Â« token
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                           ^
SHARED/magic_enum-master/include/magic_enum.hpp:649:63: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  649 | [[nodiscard]] constexpr auto enum_count() noexcept -> detail::enable_if_enum_t<E, std::size_t> {
      |                                                               ^~~~~~~~~~~~~~~~
      |                                                               enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:649:79: Fehler: expected initializer before Â»<Â« token
  649 | [[nodiscard]] constexpr auto enum_count() noexcept -> detail::enable_if_enum_t<E, std::size_t> {
      |                                                                               ^
SHARED/magic_enum-master/include/magic_enum.hpp:658:80: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  658 | [[nodiscard]] constexpr auto enum_value(std::size_t index) noexcept -> detail::enable_if_enum_t<E, std::decay_t<E>> {
      |                                                                                ^~~~~~~~~~~~~~~~
      |                                                                                enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:658:96: Fehler: expected initializer before Â»<Â« token
  658 | [[nodiscard]] constexpr auto enum_value(std::size_t index) noexcept -> detail::enable_if_enum_t<E, std::decay_t<E>> {
      |                                                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:670:64: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  670 | [[nodiscard]] constexpr auto enum_values() noexcept -> detail::enable_if_enum_t<E, detail::values_t<E>> {
      |                                                                ^~~~~~~~~~~~~~~~
      |                                                                enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:670:80: Fehler: expected initializer before Â»<Â« token
  670 | [[nodiscard]] constexpr auto enum_values() noexcept -> detail::enable_if_enum_t<E, detail::values_t<E>> {
      |                                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:678:11: Fehler: Â»autoÂ«-Parameter darf in diesem Kontext nicht verwendet werden
  678 | template <auto V>
      |           ^~~~
SHARED/magic_enum-master/include/magic_enum.hpp:679:76: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  679 | [[nodiscard]] constexpr auto enum_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<decltype(V)>>, string_view> {
      |                                                                            ^~~~~~~~~
      |                                                                            is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:679:76: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  679 | [[nodiscard]] constexpr auto enum_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<decltype(V)>>, string_view> {
      |                                                                            ^~~~~~~~~
      |                                                                            is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:679:99: Fehler: Templateargument 1 ist ungÃ¼ltig
  679 | [[nodiscard]] constexpr auto enum_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<decltype(V)>>, string_view> {
      |                                                                                                   ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:679:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  679 | [[nodiscard]] constexpr auto enum_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<decltype(V)>>, string_view> {
      |                                                                                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:690:69: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  690 | [[nodiscard]] constexpr auto enum_name(E value) noexcept -> detail::enable_if_enum_t<E, string_view> {
      |                                                                     ^~~~~~~~~~~~~~~~
      |                                                                     enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:690:85: Fehler: expected initializer before Â»<Â« token
  690 | [[nodiscard]] constexpr auto enum_name(E value) noexcept -> detail::enable_if_enum_t<E, string_view> {
      |                                                                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:702:63: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  702 | [[nodiscard]] constexpr auto enum_names() noexcept -> detail::enable_if_enum_t<E, detail::names_t<E>> {
      |                                                               ^~~~~~~~~~~~~~~~
      |                                                               enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:702:79: Fehler: expected initializer before Â»<Â« token
  702 | [[nodiscard]] constexpr auto enum_names() noexcept -> detail::enable_if_enum_t<E, detail::names_t<E>> {
      |                                                                               ^
SHARED/magic_enum-master/include/magic_enum.hpp:710:65: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  710 | [[nodiscard]] constexpr auto enum_entries() noexcept -> detail::enable_if_enum_t<E, detail::entries_t<E>> {
      |                                                                 ^~~~~~~~~~~~~~~~
      |                                                                 enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:710:81: Fehler: expected initializer before Â»<Â« token
  710 | [[nodiscard]] constexpr auto enum_entries() noexcept -> detail::enable_if_enum_t<E, detail::entries_t<E>> {
      |                                                                                 ^
SHARED/magic_enum-master/include/magic_enum.hpp:719:88: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  719 | [[nodiscard]] constexpr auto enum_cast(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                                                        ^~~~~~~~~~~~~~~~
      |                                                                                        enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:719:104: Fehler: expected initializer before Â»<Â« token
  719 | [[nodiscard]] constexpr auto enum_cast(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:732:40: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:732:40: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
SHARED/magic_enum-master/include/magic_enum.hpp:732:75: Fehler: expected primary-expression before Â»pÂ«
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                                           ^
SHARED/magic_enum-master/include/magic_enum.hpp:732:76: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                                            ^
SHARED/magic_enum-master/include/magic_enum.hpp:732:77: Fehler: expected Â»;Â« before Â»noexceptÂ«
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                                             ^~~~~~~~~
      |                                                                             ;
SHARED/magic_enum-master/include/magic_enum.hpp:748:40: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
  748 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:748:40: Fehler: Redeklaration von Â»template<class E> constexpr const auto magic_enum::enum_castÂ«
SHARED/magic_enum-master/include/magic_enum.hpp:732:30: Anmerkung: vorherige Deklaration von Â»template<class E, class BinaryPredicate> constexpr<TypprÃ¤fixfehler> magic_enum::enum_cast<E, BinaryPredicate>Â«
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                              ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:748:40: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  748 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:748:58: Fehler: expected Â»;Â« before Â»noexceptÂ«
  748 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                          ^~~~~~~~~
      |                                                          ;
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:756:64: Fehler: ungÃ¼ltige Verwendung des Template-Namens Â»std::enable_if_tÂ« ohne eine Argumentliste
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                ^~~
In Datei, eingebunden von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/ratio:39,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/chrono:39,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/thread:43,
                 von HardwareInterface.h:8,
                 von HardwareInterface.cpp:1:
/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/type_traits:2554:11: Anmerkung: Â»template<bool _Cond, class _Tp> using enable_if_t = typename std::enable_if::typeÂ« ist hier deklariert
 2554 |     using enable_if_t = typename enable_if<_Cond, _Tp>::type;
      |           ^~~~~~~~~~~
In Datei, eingebunden von ConfigParser.h:13,
                 von HardwareInterface.h:15,
                 von HardwareInterface.cpp:1:
SHARED/magic_enum-master/include/magic_enum.hpp:756:80: Fehler: expected initializer before Â»<Â« token
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:763:70: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  763 | [[nodiscard]] constexpr auto enum_index(E value) noexcept -> detail::enable_if_enum_t<E, optional<std::size_t>> {
      |                                                                      ^~~~~~~~~~~~~~~~
      |                                                                      enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:763:86: Fehler: expected initializer before Â»<Â« token
  763 | [[nodiscard]] constexpr auto enum_index(E value) noexcept -> detail::enable_if_enum_t<E, optional<std::size_t>> {
      |                                                                                      ^
SHARED/magic_enum-master/include/magic_enum.hpp:775:73: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  775 | [[nodiscard]] constexpr auto enum_contains(E value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                                                         ^~~~~~~~~~~~~~~~
      |                                                                         enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:775:89: Fehler: expected initializer before Â»<Â« token
  775 | [[nodiscard]] constexpr auto enum_contains(E value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                                                                         ^
SHARED/magic_enum-master/include/magic_enum.hpp:783:92: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  783 | [[nodiscard]] constexpr auto enum_contains(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                                                                            ^~~~~~~~~~~~~~~~
      |                                                                                            enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:783:108: Fehler: expected initializer before Â»<Â« token
  783 | [[nodiscard]] constexpr auto enum_contains(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                                                                                            ^
SHARED/magic_enum-master/include/magic_enum.hpp:791:44: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
  791 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:791:44: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
SHARED/magic_enum-master/include/magic_enum.hpp:791:79: Fehler: expected primary-expression before Â»pÂ«
  791 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, bool> {
      |                                                                               ^
SHARED/magic_enum-master/include/magic_enum.hpp:791:80: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
  791 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, bool> {
      |                                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:791:81: Fehler: expected Â»;Â« before Â»noexceptÂ«
  791 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, bool> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 ;
SHARED/magic_enum-master/include/magic_enum.hpp:800:44: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
  800 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:800:44: Fehler: Redeklaration von Â»template<class E> constexpr const auto magic_enum::enum_containsÂ«
SHARED/magic_enum-master/include/magic_enum.hpp:791:30: Anmerkung: vorherige Deklaration von Â»template<class E, class BinaryPredicate> constexpr<TypprÃ¤fixfehler> magic_enum::enum_contains<E, BinaryPredicate>Â«
  791 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, bool> {
      |                              ^~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:800:44: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  800 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:800:62: Fehler: expected Â»;Â« before Â»noexceptÂ«
  800 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                                              ^~~~~~~~~
      |                                                              ;
SHARED/magic_enum-master/include/magic_enum.hpp:808:77: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  808 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                             ^~~~~~~~~
      |                                                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:808:77: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  808 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                             ^~~~~~~~~
      |                                                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:808:88: Fehler: Templateargument 1 ist ungÃ¼ltig
  808 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:808:96: Fehler: expected unqualified-id before Â»=Â« token
  808 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:823:77: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  823 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                             ^~~~~~~~~
      |                                                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:823:77: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  823 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                             ^~~~~~~~~
      |                                                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:823:88: Fehler: Templateargument 1 ist ungÃ¼ltig
  823 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:823:96: Fehler: expected unqualified-id before Â»=Â« token
  823 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:832:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  832 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:832:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  832 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:832:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  832 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:832:64: Fehler: expected unqualified-id before Â»=Â« token
  832 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:837:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  837 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:837:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  837 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:837:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  837 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:837:64: Fehler: expected unqualified-id before Â»=Â« token
  837 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:842:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  842 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:842:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  842 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:842:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  842 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:842:64: Fehler: expected unqualified-id before Â»=Â« token
  842 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:847:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  847 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:847:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  847 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:847:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  847 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:847:64: Fehler: expected unqualified-id before Â»=Â« token
  847 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:852:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  852 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:852:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  852 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:852:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  852 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:852:64: Fehler: expected unqualified-id before Â»=Â« token
  852 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:857:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  857 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:857:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  857 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:857:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  857 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:857:64: Fehler: expected unqualified-id before Â»=Â« token
  857 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:862:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  862 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:862:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  862 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:862:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  862 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:862:64: Fehler: expected unqualified-id before Â»=Â« token
  862 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:872:19: Fehler: Â»enum_type_nameÂ« wurde nicht innerhalb von Â»magic_enumÂ« deklariert
  872 | using magic_enum::enum_type_name;
      |                   ^~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:876:63: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  876 | [[nodiscard]] constexpr auto enum_count() noexcept -> detail::enable_if_enum_flags_t<E, std::size_t> {
      |                                                               ^~~~~~~~~~~~~~~~~~~~~~
      |                                                               enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:876:85: Fehler: expected initializer before Â»<Â« token
  876 | [[nodiscard]] constexpr auto enum_count() noexcept -> detail::enable_if_enum_flags_t<E, std::size_t> {
      |                                                                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:885:80: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  885 | [[nodiscard]] constexpr auto enum_value(std::size_t index) noexcept -> detail::enable_if_enum_flags_t<E, std::decay_t<E>> {
      |                                                                                ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                                enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:885:102: Fehler: expected initializer before Â»<Â« token
  885 | [[nodiscard]] constexpr auto enum_value(std::size_t index) noexcept -> detail::enable_if_enum_flags_t<E, std::decay_t<E>> {
      |                                                                                                      ^
SHARED/magic_enum-master/include/magic_enum.hpp:899:64: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  899 | [[nodiscard]] constexpr auto enum_values() noexcept -> detail::enable_if_enum_flags_t<E, detail::values_t<E, true>> {
      |                                                                ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:899:86: Fehler: expected initializer before Â»<Â« token
  899 | [[nodiscard]] constexpr auto enum_values() noexcept -> detail::enable_if_enum_flags_t<E, detail::values_t<E, true>> {
      |                                                                                      ^
SHARED/magic_enum-master/include/magic_enum.hpp:908:50: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  908 | [[nodiscard]] auto enum_name(E value) -> detail::enable_if_enum_flags_t<E, string> {
      |                                                  ^~~~~~~~~~~~~~~~~~~~~~
      |                                                  enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:908:72: Fehler: expected initializer before Â»<Â« token
  908 | [[nodiscard]] auto enum_name(E value) -> detail::enable_if_enum_flags_t<E, string> {
      |                                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:934:63: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  934 | [[nodiscard]] constexpr auto enum_names() noexcept -> detail::enable_if_enum_flags_t<E, detail::names_t<E, true>> {
      |                                                               ^~~~~~~~~~~~~~~~~~~~~~
      |                                                               enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:934:85: Fehler: expected initializer before Â»<Â« token
  934 | [[nodiscard]] constexpr auto enum_names() noexcept -> detail::enable_if_enum_flags_t<E, detail::names_t<E, true>> {
      |                                                                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:942:65: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  942 | [[nodiscard]] constexpr auto enum_entries() noexcept -> detail::enable_if_enum_flags_t<E, detail::entries_t<E, true>> {
      |                                                                 ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                 enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:942:87: Fehler: expected initializer before Â»<Â« token
  942 | [[nodiscard]] constexpr auto enum_entries() noexcept -> detail::enable_if_enum_flags_t<E, detail::entries_t<E, true>> {
      |                                                                                       ^
SHARED/magic_enum-master/include/magic_enum.hpp:951:88: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  951 | [[nodiscard]] constexpr auto enum_cast(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                                                        ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                                        enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:951:110: Fehler: expected initializer before Â»<Â« token
  951 | [[nodiscard]] constexpr auto enum_cast(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                                                                              ^
SHARED/magic_enum-master/include/magic_enum.hpp:981:40: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
  981 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:981:40: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
SHARED/magic_enum-master/include/magic_enum.hpp:981:75: Fehler: expected primary-expression before Â»pÂ«
  981 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                                           ^
SHARED/magic_enum-master/include/magic_enum.hpp:981:76: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
  981 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                                            ^
SHARED/magic_enum-master/include/magic_enum.hpp:981:77: Fehler: expected Â»;Â« before Â»noexceptÂ«
  981 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                                             ^~~~~~~~~
      |                                                                             ;
SHARED/magic_enum-master/include/magic_enum.hpp:1014:40: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
 1014 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1014:40: Fehler: Redeklaration von Â»template<class E> constexpr const auto magic_enum::flags::enum_castÂ«
SHARED/magic_enum-master/include/magic_enum.hpp:981:30: Anmerkung: vorherige Deklaration von Â»template<class E, class BinaryPredicate> constexpr<TypprÃ¤fixfehler> magic_enum::flags::enum_cast<E, BinaryPredicate>Â«
  981 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                              ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1014:40: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
 1014 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1014:58: Fehler: expected Â»;Â« before Â»noexceptÂ«
 1014 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                          ^~~~~~~~~
      |                                                          ;
SHARED/magic_enum-master/include/magic_enum.hpp:1021:19: Fehler: Â»enum_integerÂ« wurde nicht innerhalb von Â»magic_enumÂ« deklariert
 1021 | using magic_enum::enum_integer;
      |                   ^~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1026:70: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
 1026 | [[nodiscard]] constexpr auto enum_index(E value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::size_t>> {
      |                                                                      ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                      enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:1026:92: Fehler: expected initializer before Â»<Â« token
 1026 | [[nodiscard]] constexpr auto enum_index(E value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::size_t>> {
      |                                                                                            ^
SHARED/magic_enum-master/include/magic_enum.hpp:1043:73: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
 1043 | [[nodiscard]] constexpr auto enum_contains(E value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                         ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                         enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:1043:95: Fehler: expected initializer before Â»<Â« token
 1043 | [[nodiscard]] constexpr auto enum_contains(E value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                                               ^
SHARED/magic_enum-master/include/magic_enum.hpp:1052:92: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
 1052 | [[nodiscard]] constexpr auto enum_contains(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                                            ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                                            enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:1052:114: Fehler: expected initializer before Â»<Â« token
 1052 | [[nodiscard]] constexpr auto enum_contains(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                                                                  ^
SHARED/magic_enum-master/include/magic_enum.hpp:1060:44: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
 1060 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1060:44: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
SHARED/magic_enum-master/include/magic_enum.hpp:1060:79: Fehler: expected primary-expression before Â»pÂ«
 1060 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                               ^
SHARED/magic_enum-master/include/magic_enum.hpp:1060:80: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
 1060 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:1060:81: Fehler: expected Â»;Â« before Â»noexceptÂ«
 1060 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 ;
SHARED/magic_enum-master/include/magic_enum.hpp:1069:44: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
 1069 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1069:44: Fehler: Redeklaration von Â»template<class E> constexpr const auto magic_enum::flags::enum_containsÂ«
SHARED/magic_enum-master/include/magic_enum.hpp:1060:30: Anmerkung: vorherige Deklaration von Â»template<class E, class BinaryPredicate> constexpr<TypprÃ¤fixfehler> magic_enum::flags::enum_contains<E, BinaryPredicate>Â«
 1060 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, bool> {
      |                              ^~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1069:44: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
 1069 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1069:62: Fehler: expected Â»;Â« before Â»noexceptÂ«
 1069 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                              ^~~~~~~~~
      |                                                              ;
SHARED/magic_enum-master/include/magic_enum.hpp:1079:63: Fehler: Â»magic_enum::detail::enable_if_enum_flags_tÂ« wurde nicht deklariert
 1079 | template <typename Char, typename Traits, typename E, detail::enable_if_enum_flags_t<E, int> = 0>
      |                                                               ^~~~~~~~~~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1079:85: Fehler: expected Â»>Â« before Â»<Â« token
 1079 | template <typename Char, typename Traits, typename E, detail::enable_if_enum_flags_t<E, int> = 0>
      |                                                                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»std::basic_ostream<_Ch, _Tr>& magic_enum::flags::ostream_operators::operator<<(std::basic_ostream<_Ch, _Tr>&, E)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:1084:7: Warnung: Â»init-statement in AuswahlanweisungenÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
 1084 |   if (const auto name = magic_enum::flags::enum_name<D>(value); !name.empty()) {
      |       ^~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1084:44: Fehler: Â»enum_nameÂ« ist kein Element von Â»magic_enum::flagsÂ«; meinten Sie Â»enum_castÂ«?
 1084 |   if (const auto name = magic_enum::flags::enum_name<D>(value); !name.empty()) {
      |                                            ^~~~~~~~~
      |                                            enum_cast
SHARED/magic_enum-master/include/magic_enum.hpp:1084:55: Fehler: expected primary-expression before Â»>Â« token
 1084 |   if (const auto name = magic_enum::flags::enum_name<D>(value); !name.empty()) {
      |                                                       ^
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:1094:63: Fehler: Â»magic_enum::detail::enable_if_enum_flags_tÂ« wurde nicht deklariert
 1094 | template <typename Char, typename Traits, typename E, detail::enable_if_enum_flags_t<E, int> = 0>
      |                                                               ^~~~~~~~~~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1094:85: Fehler: expected Â»>Â« before Â»<Â« token
 1094 | template <typename Char, typename Traits, typename E, detail::enable_if_enum_flags_t<E, int> = 0>
      |                                                                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:1095:84: Fehler: Â»optionalÂ« wurde nicht deklariert
 1095 | std::basic_ostream<Char, Traits>& operator<<(std::basic_ostream<Char, Traits>& os, optional<E> value) {
      |                                                                                    ^~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1095:92: Fehler: expected Â»,Â« or Â»...Â« before Â»<Â« token
 1095 | std::basic_ostream<Char, Traits>& operator<<(std::basic_ostream<Char, Traits>& os, optional<E> value) {
      |                                                                                            ^
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»std::basic_ostream<_Ch, _Tr>& magic_enum::flags::ostream_operators::operator<<(std::basic_ostream<_Ch, _Tr>&, int)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:1096:10: Fehler: Â»valueÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht deklariert; meinten Sie Â»magic_enum::detail::valueÂ«?
 1096 |   return value.has_value() ? (os << value.value()) : os;
      |          ^~~~~
      |          magic_enum::detail::value
SHARED/magic_enum-master/include/magic_enum.hpp:395:13: Anmerkung: Â»magic_enum::detail::valueÂ« ist hier deklariert
  395 | constexpr E value(std::size_t i) noexcept {
      |             ^~~~~
HardwareInterface.cpp: In Elementfunktion Â»ChessPiece::FIGURE HardwareInterface::ScanNFC(int)Â«:
HardwareInterface.cpp:228:1: Warnung: Kontrollfluss erreicht Ende von Nicht-void-Funktion [-Wreturn-type]
  228 | }
      | ^
HardwareInterface.cpp: In Elementfunktion Â»bool HardwareInterface::is_target_position_reached()Â«:
HardwareInterface.cpp:293:1: Warnung: Kontrollfluss erreicht Ende von Nicht-void-Funktion [-Wreturn-type]
  293 | }
      | ^
Makefile:212: recipe for target 'Debug/HardwareInterface.o' failed
make[1]: *** [Debug/HardwareInterface.o] Error 1
In Datei, eingebunden von ConfigParser.h:13,
                 von ConfigParser.cpp:1:
SHARED/magic_enum-master/include/magic_enum.hpp:99:23: Fehler: Â»optionalÂ« in Namensraum Â»stdÂ« bezeichnet keinen Templatetyp
   99 | using optional = std::optional<T>;
      |                       ^~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:99:18: Anmerkung: Â»std::optionalÂ« ist erst ab C++17 verfÃ¼gbar
   99 | using optional = std::optional<T>;
      |                  ^~~
SHARED/magic_enum-master/include/magic_enum.hpp:106:26: Fehler: Â»string_viewÂ« in Namensbereich Â»stdÂ« bezeichnet keinen Typ
  106 | using string_view = std::string_view;
      |                          ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:106:21: Anmerkung: Â»std::string_viewÂ« ist erst ab C++17 verfÃ¼gbar
  106 | using string_view = std::string_view;
      |                     ^~~
In Datei, eingebunden von ConfigParser.h:13,
                 von ConfigParser.cpp:1:
SHARED/magic_enum-master/include/magic_enum.hpp:123:22: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  123 |   static_assert(std::is_enum_v<E>, "magic_enum::customize::enum_range requires enum type.");
      |                      ^~~~~~~~~
      |                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:123:33: Fehler: expected primary-expression before Â»>Â« token
  123 |   static_assert(std::is_enum_v<E>, "magic_enum::customize::enum_range requires enum type.");
      |                                 ^
SHARED/magic_enum-master/include/magic_enum.hpp:123:34: Fehler: expected primary-expression before Â»,Â« token
  123 |   static_assert(std::is_enum_v<E>, "magic_enum::customize::enum_range requires enum type.");
      |                                  ^
SHARED/magic_enum-master/include/magic_enum.hpp:124:3: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  124 |   inline static constexpr int min = MAGIC_ENUM_RANGE_MIN;
      |   ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:125:3: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  125 |   inline static constexpr int max = MAGIC_ENUM_RANGE_MAX;
      |   ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:139:11: Fehler: Â»string_viewÂ« bezeichnet keinen Typ
  139 | constexpr string_view enum_name(E) noexcept {
      |           ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:159:47: Fehler: expected Â»)Â« before Â»strÂ«
  159 |   constexpr explicit static_string(string_view str) noexcept : static_string{str, std::make_index_sequence<N>{}} {
      |                                   ~           ^~~~
      |                                               )
SHARED/magic_enum-master/include/magic_enum.hpp:159:114: Fehler: expected unqualified-id before Â»{Â« token
  159 |   constexpr explicit static_string(string_view str) noexcept : static_string{str, std::make_index_sequence<N>{}} {
      |                                                                                                                  ^
SHARED/magic_enum-master/include/magic_enum.hpp:167:22: Fehler: expected type-specifier before Â»string_viewÂ«
  167 |   constexpr operator string_view() const noexcept { return {data(), size()}; }
      |                      ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:171:38: Fehler: expected Â»)Â« before Â»strÂ«
  171 |   constexpr static_string(string_view str, std::index_sequence<I...>) noexcept : chars{{str[I]..., '\0'}} {}
      |                          ~           ^~~~
      |                                      )
SHARED/magic_enum-master/include/magic_enum.hpp:171:107: Fehler: expected unqualified-id before Â»{Â« token
  171 |   constexpr static_string(string_view str, std::index_sequence<I...>) noexcept : chars{{str[I]..., '\0'}} {}
      |                                                                                                           ^
SHARED/magic_enum-master/include/magic_enum.hpp:178:13: Fehler: nur Deklarationen von Konstruktoren und Umwandlungsoperatoren kÃ¶nnen Â»explicitÂ« sein
  178 |   constexpr explicit static_string(string_view) noexcept {}
      |             ^~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:178:36: Fehler: Feld Â»string_viewÂ« hat unvollstÃ¤ndigen Typen Â»const magic_enum::detail::static_string<0>Â«
  178 |   constexpr explicit static_string(string_view) noexcept {}
      |                                    ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:177:8: Anmerkung: Definition von Â»struct magic_enum::detail::static_string<0>Â« ist erst nach der schlieÃŸenden Klammer vollendet
  177 | struct static_string<0> {
      |        ^~~~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:178:3: Fehler: nicht-statisches Datenelement Â»string_viewÂ« als Â»constexprÂ« deklariert
  178 |   constexpr explicit static_string(string_view) noexcept {}
      |   ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:178:47: Fehler: Â»;Â« am Ende von Elementdeklaration erwartet
  178 |   constexpr explicit static_string(string_view) noexcept {}
      |                                               ^
      |                                                ;
SHARED/magic_enum-master/include/magic_enum.hpp:178:49: Fehler: expected unqualified-id before Â»noexceptÂ«
  178 |   constexpr explicit static_string(string_view) noexcept {}
      |                                                 ^~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:184:22: Fehler: expected type-specifier before Â»string_viewÂ«
  184 |   constexpr operator string_view() const noexcept { return {}; }
      |                      ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:193:11: Fehler: Â»string_viewÂ« bezeichnet keinen Typ
  193 | constexpr string_view pretty_name(string_view name) noexcept {
      |           ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:213:28: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  213 | constexpr std::size_t find(string_view str, char c) noexcept {
      |                            ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:213:45: Fehler: expected primary-expression before Â»charÂ«
  213 | constexpr std::size_t find(string_view str, char c) noexcept {
      |                                             ^~~~
SHARED/magic_enum-master/include/magic_enum.hpp:213:51: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
  213 | constexpr std::size_t find(string_view str, char c) noexcept {
      |                                                   ^
SHARED/magic_enum-master/include/magic_enum.hpp:235:26: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                          ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:235:43: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                                           ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:235:75: Fehler: expected primary-expression before Â»&&Â« token
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                                                                           ^~
SHARED/magic_enum-master/include/magic_enum.hpp:235:78: Fehler: Â»pÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                                                                              ^
SHARED/magic_enum-master/include/magic_enum.hpp:235:79: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                                                                               ^
SHARED/magic_enum-master/include/magic_enum.hpp:235:80: Fehler: expected Â»;Â« before Â»noexceptÂ«
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                                                                                ^~~~~~~~~
      |                                                                                ;
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr bool magic_enum::detail::cmp_less(L, R)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:264:22: Fehler: Â»is_integral_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_integralÂ«?
  264 |   static_assert(std::is_integral_v<L> && std::is_integral_v<R>, "magic_enum::detail::cmp_less requires integral type.");
      |                      ^~~~~~~~~~~~~
      |                      is_integral
SHARED/magic_enum-master/include/magic_enum.hpp:264:37: Fehler: expected primary-expression before Â»>Â« token
  264 |   static_assert(std::is_integral_v<L> && std::is_integral_v<R>, "magic_enum::detail::cmp_less requires integral type.");
      |                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:264:45: Fehler: expected Â»,Â« before Â»::Â« token
  264 |   static_assert(std::is_integral_v<L> && std::is_integral_v<R>, "magic_enum::detail::cmp_less requires integral type.");
      |                                             ^~
      |                                             ,
SHARED/magic_enum-master/include/magic_enum.hpp:264:45: Fehler: expected string-literal before Â»::Â« token
  264 |   static_assert(std::is_integral_v<L> && std::is_integral_v<R>, "magic_enum::detail::cmp_less requires integral type.");
      |                                             ^~
SHARED/magic_enum-master/include/magic_enum.hpp:264:45: Fehler: expected Â»)Â« before Â»::Â« token
  264 |   static_assert(std::is_integral_v<L> && std::is_integral_v<R>, "magic_enum::detail::cmp_less requires integral type.");
      |                ~                            ^~
      |                                             )
SHARED/magic_enum-master/include/magic_enum.hpp:266:6: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |      ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:266:22: Fehler: Â»is_signed_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_signedÂ«?
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                      ^~~~~~~~~~~
      |                      is_signed
SHARED/magic_enum-master/include/magic_enum.hpp:266:35: Fehler: expected primary-expression before Â»>Â« token
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                                   ^
SHARED/magic_enum-master/include/magic_enum.hpp:266:37: Fehler: expected primary-expression before Â»==Â« token
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                                     ^~
SHARED/magic_enum-master/include/magic_enum.hpp:266:45: Fehler: Â»is_signed_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_signedÂ«?
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                                             ^~~~~~~~~~~
      |                                             is_signed
SHARED/magic_enum-master/include/magic_enum.hpp:266:58: Fehler: expected primary-expression before Â»>Â« token
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                                                          ^
SHARED/magic_enum-master/include/magic_enum.hpp:266:59: Fehler: expected primary-expression before Â»)Â« token
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                                                           ^
SHARED/magic_enum-master/include/magic_enum.hpp:269:13: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  269 |   } else if constexpr (std::is_signed_v<R>) {
      |             ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:269:29: Fehler: Â»is_signed_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_signedÂ«?
  269 |   } else if constexpr (std::is_signed_v<R>) {
      |                             ^~~~~~~~~~~
      |                             is_signed
SHARED/magic_enum-master/include/magic_enum.hpp:269:42: Fehler: expected primary-expression before Â»>Â« token
  269 |   } else if constexpr (std::is_signed_v<R>) {
      |                                          ^
SHARED/magic_enum-master/include/magic_enum.hpp:269:43: Fehler: expected primary-expression before Â»)Â« token
  269 |   } else if constexpr (std::is_signed_v<R>) {
      |                                           ^
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr I magic_enum::detail::log2(I)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:280:22: Fehler: Â»is_integral_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_integralÂ«?
  280 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::log2 requires integral type.");
      |                      ^~~~~~~~~~~~~
      |                      is_integral
SHARED/magic_enum-master/include/magic_enum.hpp:280:37: Fehler: expected primary-expression before Â»>Â« token
  280 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::log2 requires integral type.");
      |                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:280:38: Fehler: expected primary-expression before Â»,Â« token
  280 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::log2 requires integral type.");
      |                                      ^
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr bool magic_enum::detail::is_pow2(I)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:290:22: Fehler: Â»is_integral_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_integralÂ«?
  290 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::is_pow2 requires integral type.");
      |                      ^~~~~~~~~~~~~
      |                      is_integral
SHARED/magic_enum-master/include/magic_enum.hpp:290:37: Fehler: expected primary-expression before Â»>Â« token
  290 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::is_pow2 requires integral type.");
      |                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:290:38: Fehler: expected primary-expression before Â»,Â« token
  290 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::is_pow2 requires integral type.");
      |                                      ^
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:296:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  296 | inline constexpr bool is_enum_v = std::is_enum_v<T> && std::is_same_v<T, std::decay_t<T>>;
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:296:40: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  296 | inline constexpr bool is_enum_v = std::is_enum_v<T> && std::is_same_v<T, std::decay_t<T>>;
      |                                        ^~~~~~~~~
      |                                        is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:296:51: Fehler: expected primary-expression before Â»>Â« token
  296 | inline constexpr bool is_enum_v = std::is_enum_v<T> && std::is_same_v<T, std::decay_t<T>>;
      |                                                   ^
SHARED/magic_enum-master/include/magic_enum.hpp:296:56: Fehler: Marke Â»stdÂ« auÃŸerhalb einer Funktion referenziert
  296 | inline constexpr bool is_enum_v = std::is_enum_v<T> && std::is_same_v<T, std::decay_t<T>>;
      |                                                        ^~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr auto magic_enum::detail::n()Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:305:13: Fehler: Â»string_viewÂ« bezeichnet keinen Typ
  305 |   constexpr string_view name{__PRETTY_FUNCTION__ + 49, sizeof(__PRETTY_FUNCTION__) - 51};
      |             ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:309:24: Fehler: Â»nameÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht deklariert; meinten Sie Â»renameÂ«?
  309 |   return static_string<name.size()>{name};
      |                        ^~~~
      |                        rename
SHARED/magic_enum-master/include/magic_enum.hpp:309:35: Fehler: Templateargument 1 ist ungÃ¼ltig
  309 |   return static_string<name.size()>{name};
      |                                   ^
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:316:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  316 | inline constexpr auto type_name_v = n<E>();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr auto magic_enum::detail::n()Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:321:43: Fehler: Â»enum_nameÂ« ist kein Element von Â»magic_enum::customizeÂ«; meinten Sie Â»enum_rangeÂ«?
  321 |   constexpr auto custom_name = customize::enum_name<E>(V);
      |                                           ^~~~~~~~~
      |                                           enum_range
SHARED/magic_enum-master/include/magic_enum.hpp:321:54: Fehler: expected primary-expression before Â»>Â« token
  321 |   constexpr auto custom_name = customize::enum_name<E>(V);
      |                                                      ^
SHARED/magic_enum-master/include/magic_enum.hpp:323:6: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  323 |   if constexpr (custom_name.empty()) {
      |      ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:341:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  341 | inline constexpr auto enum_name_v = n<E, V>();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:343:23: Fehler: Â»autoÂ«-Parameter darf in diesem Kontext nicht verwendet werden
  343 | template <typename E, auto V>
      |                       ^~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr int magic_enum::detail::reflected_min()Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:354:6: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  354 |   if constexpr (IsFlags) {
      |      ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:361:8: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  361 |     if constexpr (cmp_less(lhs, rhs)) {
      |        ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr int magic_enum::detail::reflected_max()Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:373:6: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  373 |   if constexpr (IsFlags) {
      |      ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:380:8: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  380 |     if constexpr (cmp_less(lhs, rhs)) {
      |        ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:389:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  389 | inline constexpr auto reflected_min_v = reflected_min<E, IsFlags>();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:392:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  392 | inline constexpr auto reflected_max_v = reflected_max<E, IsFlags>();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr E magic_enum::detail::value(std::size_t)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:398:6: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  398 |   if constexpr (IsFlags) {
      |      ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr auto magic_enum::detail::values(std::index_sequence<I ...>)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:409:62: Fehler: Â»constexprÂ«-Lambda ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  409 |   constexpr std::size_t count = [](decltype((valid)) valid_) constexpr noexcept -> std::size_t {
      |                                                              ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:419:22: Fehler: der Wert von Â»countÂ« ist in konstantem Ausdruck nicht verwendbar
  419 |   std::array<E, count> values{};
      |                      ^
SHARED/magic_enum-master/include/magic_enum.hpp:409:25: Anmerkung: Â»countÂ« in seiner eigenen Initialisierung verwendet
  409 |   constexpr std::size_t count = [](decltype((valid)) valid_) constexpr noexcept -> std::size_t {
      |                         ^~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:419:22: Anmerkung: in Templateargument fÃ¼r Typ Â»unsigned intÂ«
  419 |   std::array<E, count> values{};
      |                      ^
SHARED/magic_enum-master/include/magic_enum.hpp:422:13: Fehler: ungÃ¼ltige Typen Â»int[std::size_t {aka unsigned int}]Â« fÃ¼r Feldindex
  422 |       values[v++] = value<E, Min, IsFlags>(i);
      |             ^
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:440:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  440 | inline constexpr auto values_v = values<E, IsFlags>();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:446:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  446 | inline constexpr auto count_v = values_v<E, IsFlags>.size();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:449:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  449 | inline constexpr auto min_v = static_cast<U>(values_v<E, IsFlags>.front());
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:452:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  452 | inline constexpr auto max_v = static_cast<U>(values_v<E, IsFlags>.back());
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:467:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  467 | inline constexpr auto range_size_v = range_size<E, IsFlags>();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:473:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  473 | inline constexpr auto invalid_index_v = (std::numeric_limits<index_t<E, IsFlags>>::max)();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:485:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  485 | inline constexpr auto indexes_v = indexes<E, IsFlags>(std::make_index_sequence<range_size_v<E, IsFlags>>{});
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr auto magic_enum::detail::names(std::index_sequence<I ...>)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:491:21: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  491 |   return std::array<string_view, sizeof...(I)>{{enum_name_v<E, values_v<E, IsFlags>[I]>...}};
      |                     ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:491:46: Fehler: Templateargument 1 ist ungÃ¼ltig
  491 |   return std::array<string_view, sizeof...(I)>{{enum_name_v<E, values_v<E, IsFlags>[I]>...}};
      |                                              ^
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:495:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  495 | inline constexpr auto names_v = names<E, IsFlags>(std::make_index_sequence<count_v<E, IsFlags>>{});
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr auto magic_enum::detail::entries(std::index_sequence<I ...>)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:504:34: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  504 |   return std::array<std::pair<E, string_view>, sizeof...(I)>{{{values_v<E, IsFlags>[I], enum_name_v<E, values_v<E, IsFlags>[I]>}...}};
      |                                  ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:504:45: Fehler: Templateargument 2 ist ungÃ¼ltig
  504 |   return std::array<std::pair<E, string_view>, sizeof...(I)>{{{values_v<E, IsFlags>[I], enum_name_v<E, values_v<E, IsFlags>[I]>}...}};
      |                                             ^
SHARED/magic_enum-master/include/magic_enum.hpp:504:60: Fehler: Templateargument 1 ist ungÃ¼ltig
  504 |   return std::array<std::pair<E, string_view>, sizeof...(I)>{{{values_v<E, IsFlags>[I], enum_name_v<E, values_v<E, IsFlags>[I]>}...}};
      |                                                            ^
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:508:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  508 | inline constexpr auto entries_v = entries<E, IsFlags>(std::make_index_sequence<count_v<E, IsFlags>>{});
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:521:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  521 | inline constexpr bool is_sparse_v = is_sparse<E, IsFlags>();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr std::size_t magic_enum::detail::undex(U)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:527:7: Warnung: Â»init-statement in AuswahlanweisungenÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  527 |   if (const auto i = static_cast<std::size_t>(value - min_v<E>); value >= min_v<E> && value <= max_v<E>) {
      |       ^~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:528:8: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  528 |     if constexpr (is_sparse_v<E>) {
      |        ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:529:11: Warnung: Â»init-statement in AuswahlanweisungenÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  529 |       if (const auto idx = indexes_v<E>[i]; idx != invalid_index_v<E>) {
      |           ^~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:579:55: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  579 | using enable_if_enum_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, false, T, R>::type;
      |                                                       ^~~~~~~~~
      |                                                       is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:579:55: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  579 | using enable_if_enum_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, false, T, R>::type;
      |                                                       ^~~~~~~~~
      |                                                       is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:579:79: Fehler: falsche Anzahl der Templateargumente (1, sollte 4 sein)
  579 | using enable_if_enum_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, false, T, R>::type;
      |                                                                               ^~
SHARED/magic_enum-master/include/magic_enum.hpp:560:8: Anmerkung: fÃ¼r Â»template<bool <anonym>, bool <anonym>, class T, class R> struct magic_enum::detail::enable_if_enumÂ« bereitgestellt
  560 | struct enable_if_enum {};
      |        ^~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:579:35: Fehler: Spezifikation mit geschachteltem Namen erwartet
  579 | using enable_if_enum_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, false, T, R>::type;
      |                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:582:61: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  582 | using enable_if_enum_flags_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, true, T, R>::type;
      |                                                             ^~~~~~~~~
      |                                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:582:61: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  582 | using enable_if_enum_flags_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, true, T, R>::type;
      |                                                             ^~~~~~~~~
      |                                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:582:85: Fehler: falsche Anzahl der Templateargumente (1, sollte 4 sein)
  582 | using enable_if_enum_flags_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, true, T, R>::type;
      |                                                                                     ^~
SHARED/magic_enum-master/include/magic_enum.hpp:560:8: Anmerkung: fÃ¼r Â»template<bool <anonym>, bool <anonym>, class T, class R> struct magic_enum::detail::enable_if_enumÂ« bereitgestellt
  560 | struct enable_if_enum {};
      |        ^~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:582:41: Fehler: Spezifikation mit geschachteltem Namen erwartet
  582 | using enable_if_enum_flags_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, true, T, R>::type;
      |                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:584:63: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  584 | template <typename T, typename Enable = std::enable_if_t<std::is_enum_v<std::decay_t<T>>>>
      |                                                               ^~~~~~~~~
      |                                                               is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:584:63: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  584 | template <typename T, typename Enable = std::enable_if_t<std::is_enum_v<std::decay_t<T>>>>
      |                                                               ^~~~~~~~~
      |                                                               is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:584:87: Fehler: Templateargument 1 ist ungÃ¼ltig
  584 | template <typename T, typename Enable = std::enable_if_t<std::is_enum_v<std::decay_t<T>>>>
      |                                                                                       ^~
SHARED/magic_enum-master/include/magic_enum.hpp:584:89: Fehler: expected Â»>Â« before Â»>>Â« token
  584 | template <typename T, typename Enable = std::enable_if_t<std::is_enum_v<std::decay_t<T>>>>
      |                                                                                         ^~
SHARED/magic_enum-master/include/magic_enum.hpp:587:35: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  587 | template <typename T, bool = std::is_enum_v<T>>
      |                                   ^~~~~~~~~
      |                                   is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:587:46: Fehler: expected primary-expression before Â»>>Â« token
  587 | template <typename T, bool = std::is_enum_v<T>>
      |                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:587:46: Fehler: expected Â»>Â« before Â»>>Â« token
SHARED/magic_enum-master/include/magic_enum.hpp:591:52: Fehler: expected template-name before Â»<Â« token
  591 | struct is_scoped_enum<T, true> : std::bool_constant<!std::is_convertible_v<T, std::underlying_type_t<T>>> {};
      |                                                    ^
SHARED/magic_enum-master/include/magic_enum.hpp:591:52: Fehler: expected Â»{Â« before Â»<Â« token
SHARED/magic_enum-master/include/magic_enum.hpp:593:35: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  593 | template <typename T, bool = std::is_enum_v<T>>
      |                                   ^~~~~~~~~
      |                                   is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:593:46: Fehler: expected primary-expression before Â»>>Â« token
  593 | template <typename T, bool = std::is_enum_v<T>>
      |                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:593:46: Fehler: expected Â»>Â« before Â»>>Â« token
SHARED/magic_enum-master/include/magic_enum.hpp:597:54: Fehler: expected template-name before Â»<Â« token
  597 | struct is_unscoped_enum<T, true> : std::bool_constant<std::is_convertible_v<T, std::underlying_type_t<T>>> {};
      |                                                      ^
SHARED/magic_enum-master/include/magic_enum.hpp:597:54: Fehler: expected Â»{Â« before Â»<Â« token
SHARED/magic_enum-master/include/magic_enum.hpp:599:35: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  599 | template <typename T, bool = std::is_enum_v<std::decay_t<T>>>
      |                                   ^~~~~~~~~
      |                                   is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:599:59: Fehler: expected primary-expression before Â»>Â« token
  599 | template <typename T, bool = std::is_enum_v<std::decay_t<T>>>
      |                                                           ^~
SHARED/magic_enum-master/include/magic_enum.hpp:599:61: Fehler: expected unqualified-id before Â»>Â« token
  599 | template <typename T, bool = std::is_enum_v<std::decay_t<T>>>
      |                                                             ^
SHARED/magic_enum-master/include/magic_enum.hpp:603:8: Fehler: Â»underlying_typeÂ« ist kein Klassentemplate
  603 | struct underlying_type<T, true> : std::underlying_type<std::decay_t<T>> {};
      |        ^~~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:608:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  608 | inline constexpr bool is_magic_enum_supported = detail::supported<void>::value;
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:611:36: Fehler: Templateargument 2 ist ungÃ¼ltig
  611 | using Enum = detail::enum_concept<T>;
      |                                    ^
SHARED/magic_enum-master/include/magic_enum.hpp:616:53: Fehler: Templateargument 2 ist ungÃ¼ltig
  616 | struct is_unscoped_enum : detail::is_unscoped_enum<T> {};
      |                                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:619:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  619 | inline constexpr bool is_unscoped_enum_v = is_unscoped_enum<T>::value;
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:624:49: Fehler: Templateargument 2 ist ungÃ¼ltig
  624 | struct is_scoped_enum : detail::is_scoped_enum<T> {};
      |                                                 ^
SHARED/magic_enum-master/include/magic_enum.hpp:627:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  627 | inline constexpr bool is_scoped_enum_v = is_scoped_enum<T>::value;
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:105: Fehler: Templateargument 1 ist ungÃ¼ltig
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                                         ^~
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:105: Fehler: Templateargument 1 ist ungÃ¼ltig
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                                         ^~
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:105: Fehler: Templateargument 1 ist ungÃ¼ltig
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                                         ^~
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:105: Fehler: Templateargument 1 ist ungÃ¼ltig
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                                         ^~
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:105: Fehler: Templateargument 1 ist ungÃ¼ltig
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                                         ^~
SHARED/magic_enum-master/include/magic_enum.hpp:639:59: Fehler: ungÃ¼ltige Verwendung des Template-Namens Â»std::enable_if_tÂ« ohne eine Argumentliste
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                           ^~~
In Datei, eingebunden von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/ratio:39,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/chrono:39,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/thread:43,
                 von ConfigParser.h:5,
                 von ConfigParser.cpp:1:
/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/type_traits:2554:11: Anmerkung: Â»template<bool _Cond, class _Tp> using enable_if_t = typename std::enable_if::typeÂ« ist hier deklariert
 2554 |     using enable_if_t = typename enable_if<_Cond, _Tp>::type;
      |           ^~~~~~~~~~~
In Datei, eingebunden von ConfigParser.h:13,
                 von ConfigParser.cpp:1:
SHARED/magic_enum-master/include/magic_enum.hpp:639:75: Fehler: expected initializer before Â»<Â« token
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                           ^
SHARED/magic_enum-master/include/magic_enum.hpp:649:63: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  649 | [[nodiscard]] constexpr auto enum_count() noexcept -> detail::enable_if_enum_t<E, std::size_t> {
      |                                                               ^~~~~~~~~~~~~~~~
      |                                                               enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:649:79: Fehler: expected initializer before Â»<Â« token
  649 | [[nodiscard]] constexpr auto enum_count() noexcept -> detail::enable_if_enum_t<E, std::size_t> {
      |                                                                               ^
SHARED/magic_enum-master/include/magic_enum.hpp:658:80: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  658 | [[nodiscard]] constexpr auto enum_value(std::size_t index) noexcept -> detail::enable_if_enum_t<E, std::decay_t<E>> {
      |                                                                                ^~~~~~~~~~~~~~~~
      |                                                                                enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:658:96: Fehler: expected initializer before Â»<Â« token
  658 | [[nodiscard]] constexpr auto enum_value(std::size_t index) noexcept -> detail::enable_if_enum_t<E, std::decay_t<E>> {
      |                                                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:670:64: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  670 | [[nodiscard]] constexpr auto enum_values() noexcept -> detail::enable_if_enum_t<E, detail::values_t<E>> {
      |                                                                ^~~~~~~~~~~~~~~~
      |                                                                enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:670:80: Fehler: expected initializer before Â»<Â« token
  670 | [[nodiscard]] constexpr auto enum_values() noexcept -> detail::enable_if_enum_t<E, detail::values_t<E>> {
      |                                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:678:11: Fehler: Â»autoÂ«-Parameter darf in diesem Kontext nicht verwendet werden
  678 | template <auto V>
      |           ^~~~
SHARED/magic_enum-master/include/magic_enum.hpp:679:76: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  679 | [[nodiscard]] constexpr auto enum_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<decltype(V)>>, string_view> {
      |                                                                            ^~~~~~~~~
      |                                                                            is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:679:76: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  679 | [[nodiscard]] constexpr auto enum_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<decltype(V)>>, string_view> {
      |                                                                            ^~~~~~~~~
      |                                                                            is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:679:99: Fehler: Templateargument 1 ist ungÃ¼ltig
  679 | [[nodiscard]] constexpr auto enum_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<decltype(V)>>, string_view> {
      |                                                                                                   ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:679:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  679 | [[nodiscard]] constexpr auto enum_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<decltype(V)>>, string_view> {
      |                                                                                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:690:69: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  690 | [[nodiscard]] constexpr auto enum_name(E value) noexcept -> detail::enable_if_enum_t<E, string_view> {
      |                                                                     ^~~~~~~~~~~~~~~~
      |                                                                     enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:690:85: Fehler: expected initializer before Â»<Â« token
  690 | [[nodiscard]] constexpr auto enum_name(E value) noexcept -> detail::enable_if_enum_t<E, string_view> {
      |                                                                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:702:63: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  702 | [[nodiscard]] constexpr auto enum_names() noexcept -> detail::enable_if_enum_t<E, detail::names_t<E>> {
      |                                                               ^~~~~~~~~~~~~~~~
      |                                                               enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:702:79: Fehler: expected initializer before Â»<Â« token
  702 | [[nodiscard]] constexpr auto enum_names() noexcept -> detail::enable_if_enum_t<E, detail::names_t<E>> {
      |                                                                               ^
SHARED/magic_enum-master/include/magic_enum.hpp:710:65: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  710 | [[nodiscard]] constexpr auto enum_entries() noexcept -> detail::enable_if_enum_t<E, detail::entries_t<E>> {
      |                                                                 ^~~~~~~~~~~~~~~~
      |                                                                 enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:710:81: Fehler: expected initializer before Â»<Â« token
  710 | [[nodiscard]] constexpr auto enum_entries() noexcept -> detail::enable_if_enum_t<E, detail::entries_t<E>> {
      |                                                                                 ^
SHARED/magic_enum-master/include/magic_enum.hpp:719:88: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  719 | [[nodiscard]] constexpr auto enum_cast(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                                                        ^~~~~~~~~~~~~~~~
      |                                                                                        enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:719:104: Fehler: expected initializer before Â»<Â« token
  719 | [[nodiscard]] constexpr auto enum_cast(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:732:40: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:732:40: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
SHARED/magic_enum-master/include/magic_enum.hpp:732:75: Fehler: expected primary-expression before Â»pÂ«
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                                           ^
SHARED/magic_enum-master/include/magic_enum.hpp:732:76: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                                            ^
SHARED/magic_enum-master/include/magic_enum.hpp:732:77: Fehler: expected Â»;Â« before Â»noexceptÂ«
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                                             ^~~~~~~~~
      |                                                                             ;
SHARED/magic_enum-master/include/magic_enum.hpp:748:40: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
  748 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:748:40: Fehler: Redeklaration von Â»template<class E> constexpr const auto magic_enum::enum_castÂ«
SHARED/magic_enum-master/include/magic_enum.hpp:732:30: Anmerkung: vorherige Deklaration von Â»template<class E, class BinaryPredicate> constexpr<TypprÃ¤fixfehler> magic_enum::enum_cast<E, BinaryPredicate>Â«
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                              ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:748:40: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  748 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:748:58: Fehler: expected Â»;Â« before Â»noexceptÂ«
  748 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                          ^~~~~~~~~
      |                                                          ;
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:756:64: Fehler: ungÃ¼ltige Verwendung des Template-Namens Â»std::enable_if_tÂ« ohne eine Argumentliste
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                ^~~
In Datei, eingebunden von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/ratio:39,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/chrono:39,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/thread:43,
                 von ConfigParser.h:5,
                 von ConfigParser.cpp:1:
/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/type_traits:2554:11: Anmerkung: Â»template<bool _Cond, class _Tp> using enable_if_t = typename std::enable_if::typeÂ« ist hier deklariert
 2554 |     using enable_if_t = typename enable_if<_Cond, _Tp>::type;
      |           ^~~~~~~~~~~
In Datei, eingebunden von ConfigParser.h:13,
                 von ConfigParser.cpp:1:
SHARED/magic_enum-master/include/magic_enum.hpp:756:80: Fehler: expected initializer before Â»<Â« token
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:763:70: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  763 | [[nodiscard]] constexpr auto enum_index(E value) noexcept -> detail::enable_if_enum_t<E, optional<std::size_t>> {
      |                                                                      ^~~~~~~~~~~~~~~~
      |                                                                      enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:763:86: Fehler: expected initializer before Â»<Â« token
  763 | [[nodiscard]] constexpr auto enum_index(E value) noexcept -> detail::enable_if_enum_t<E, optional<std::size_t>> {
      |                                                                                      ^
SHARED/magic_enum-master/include/magic_enum.hpp:775:73: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  775 | [[nodiscard]] constexpr auto enum_contains(E value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                                                         ^~~~~~~~~~~~~~~~
      |                                                                         enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:775:89: Fehler: expected initializer before Â»<Â« token
  775 | [[nodiscard]] constexpr auto enum_contains(E value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                                                                         ^
SHARED/magic_enum-master/include/magic_enum.hpp:783:92: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  783 | [[nodiscard]] constexpr auto enum_contains(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                                                                            ^~~~~~~~~~~~~~~~
      |                                                                                            enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:783:108: Fehler: expected initializer before Â»<Â« token
  783 | [[nodiscard]] constexpr auto enum_contains(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                                                                                            ^
SHARED/magic_enum-master/include/magic_enum.hpp:791:44: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
  791 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:791:44: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
SHARED/magic_enum-master/include/magic_enum.hpp:791:79: Fehler: expected primary-expression before Â»pÂ«
  791 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, bool> {
      |                                                                               ^
SHARED/magic_enum-master/include/magic_enum.hpp:791:80: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
  791 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, bool> {
      |                                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:791:81: Fehler: expected Â»;Â« before Â»noexceptÂ«
  791 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, bool> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 ;
SHARED/magic_enum-master/include/magic_enum.hpp:800:44: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
  800 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:800:44: Fehler: Redeklaration von Â»template<class E> constexpr const auto magic_enum::enum_containsÂ«
SHARED/magic_enum-master/include/magic_enum.hpp:791:30: Anmerkung: vorherige Deklaration von Â»template<class E, class BinaryPredicate> constexpr<TypprÃ¤fixfehler> magic_enum::enum_contains<E, BinaryPredicate>Â«
  791 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, bool> {
      |                              ^~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:800:44: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  800 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:800:62: Fehler: expected Â»;Â« before Â»noexceptÂ«
  800 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                                              ^~~~~~~~~
      |                                                              ;
SHARED/magic_enum-master/include/magic_enum.hpp:808:77: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  808 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                             ^~~~~~~~~
      |                                                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:808:77: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  808 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                             ^~~~~~~~~
      |                                                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:808:88: Fehler: Templateargument 1 ist ungÃ¼ltig
  808 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:808:96: Fehler: expected unqualified-id before Â»=Â« token
  808 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:823:77: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  823 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                             ^~~~~~~~~
      |                                                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:823:77: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  823 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                             ^~~~~~~~~
      |                                                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:823:88: Fehler: Templateargument 1 ist ungÃ¼ltig
  823 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:823:96: Fehler: expected unqualified-id before Â»=Â« token
  823 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:832:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  832 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:832:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  832 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:832:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  832 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:832:64: Fehler: expected unqualified-id before Â»=Â« token
  832 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:837:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  837 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:837:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  837 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:837:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  837 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:837:64: Fehler: expected unqualified-id before Â»=Â« token
  837 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:842:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  842 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:842:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  842 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:842:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  842 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:842:64: Fehler: expected unqualified-id before Â»=Â« token
  842 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:847:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  847 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:847:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  847 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:847:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  847 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:847:64: Fehler: expected unqualified-id before Â»=Â« token
  847 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:852:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  852 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:852:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  852 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:852:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  852 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:852:64: Fehler: expected unqualified-id before Â»=Â« token
  852 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:857:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  857 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:857:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  857 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:857:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  857 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:857:64: Fehler: expected unqualified-id before Â»=Â« token
  857 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:862:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  862 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:862:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  862 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:862:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  862 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:862:64: Fehler: expected unqualified-id before Â»=Â« token
  862 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:872:19: Fehler: Â»enum_type_nameÂ« wurde nicht innerhalb von Â»magic_enumÂ« deklariert
  872 | using magic_enum::enum_type_name;
      |                   ^~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:876:63: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  876 | [[nodiscard]] constexpr auto enum_count() noexcept -> detail::enable_if_enum_flags_t<E, std::size_t> {
      |                                                               ^~~~~~~~~~~~~~~~~~~~~~
      |                                                               enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:876:85: Fehler: expected initializer before Â»<Â« token
  876 | [[nodiscard]] constexpr auto enum_count() noexcept -> detail::enable_if_enum_flags_t<E, std::size_t> {
      |                                                                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:885:80: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  885 | [[nodiscard]] constexpr auto enum_value(std::size_t index) noexcept -> detail::enable_if_enum_flags_t<E, std::decay_t<E>> {
      |                                                                                ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                                enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:885:102: Fehler: expected initializer before Â»<Â« token
  885 | [[nodiscard]] constexpr auto enum_value(std::size_t index) noexcept -> detail::enable_if_enum_flags_t<E, std::decay_t<E>> {
      |                                                                                                      ^
SHARED/magic_enum-master/include/magic_enum.hpp:899:64: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  899 | [[nodiscard]] constexpr auto enum_values() noexcept -> detail::enable_if_enum_flags_t<E, detail::values_t<E, true>> {
      |                                                                ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:899:86: Fehler: expected initializer before Â»<Â« token
  899 | [[nodiscard]] constexpr auto enum_values() noexcept -> detail::enable_if_enum_flags_t<E, detail::values_t<E, true>> {
      |                                                                                      ^
SHARED/magic_enum-master/include/magic_enum.hpp:908:50: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  908 | [[nodiscard]] auto enum_name(E value) -> detail::enable_if_enum_flags_t<E, string> {
      |                                                  ^~~~~~~~~~~~~~~~~~~~~~
      |                                                  enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:908:72: Fehler: expected initializer before Â»<Â« token
  908 | [[nodiscard]] auto enum_name(E value) -> detail::enable_if_enum_flags_t<E, string> {
      |                                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:934:63: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  934 | [[nodiscard]] constexpr auto enum_names() noexcept -> detail::enable_if_enum_flags_t<E, detail::names_t<E, true>> {
      |                                                               ^~~~~~~~~~~~~~~~~~~~~~
      |                                                               enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:934:85: Fehler: expected initializer before Â»<Â« token
  934 | [[nodiscard]] constexpr auto enum_names() noexcept -> detail::enable_if_enum_flags_t<E, detail::names_t<E, true>> {
      |                                                                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:942:65: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  942 | [[nodiscard]] constexpr auto enum_entries() noexcept -> detail::enable_if_enum_flags_t<E, detail::entries_t<E, true>> {
      |                                                                 ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                 enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:942:87: Fehler: expected initializer before Â»<Â« token
  942 | [[nodiscard]] constexpr auto enum_entries() noexcept -> detail::enable_if_enum_flags_t<E, detail::entries_t<E, true>> {
      |                                                                                       ^
SHARED/magic_enum-master/include/magic_enum.hpp:951:88: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  951 | [[nodiscard]] constexpr auto enum_cast(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                                                        ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                                        enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:951:110: Fehler: expected initializer before Â»<Â« token
  951 | [[nodiscard]] constexpr auto enum_cast(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                                                                              ^
SHARED/magic_enum-master/include/magic_enum.hpp:981:40: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
  981 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:981:40: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
SHARED/magic_enum-master/include/magic_enum.hpp:981:75: Fehler: expected primary-expression before Â»pÂ«
  981 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                                           ^
SHARED/magic_enum-master/include/magic_enum.hpp:981:76: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
  981 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                                            ^
SHARED/magic_enum-master/include/magic_enum.hpp:981:77: Fehler: expected Â»;Â« before Â»noexceptÂ«
  981 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                                             ^~~~~~~~~
      |                                                                             ;
SHARED/magic_enum-master/include/magic_enum.hpp:1014:40: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
 1014 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1014:40: Fehler: Redeklaration von Â»template<class E> constexpr const auto magic_enum::flags::enum_castÂ«
SHARED/magic_enum-master/include/magic_enum.hpp:981:30: Anmerkung: vorherige Deklaration von Â»template<class E, class BinaryPredicate> constexpr<TypprÃ¤fixfehler> magic_enum::flags::enum_cast<E, BinaryPredicate>Â«
  981 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                              ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1014:40: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
 1014 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1014:58: Fehler: expected Â»;Â« before Â»noexceptÂ«
 1014 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                          ^~~~~~~~~
      |                                                          ;
SHARED/magic_enum-master/include/magic_enum.hpp:1021:19: Fehler: Â»enum_integerÂ« wurde nicht innerhalb von Â»magic_enumÂ« deklariert
 1021 | using magic_enum::enum_integer;
      |                   ^~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1026:70: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
 1026 | [[nodiscard]] constexpr auto enum_index(E value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::size_t>> {
      |                                                                      ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                      enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:1026:92: Fehler: expected initializer before Â»<Â« token
 1026 | [[nodiscard]] constexpr auto enum_index(E value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::size_t>> {
      |                                                                                            ^
SHARED/magic_enum-master/include/magic_enum.hpp:1043:73: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
 1043 | [[nodiscard]] constexpr auto enum_contains(E value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                         ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                         enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:1043:95: Fehler: expected initializer before Â»<Â« token
 1043 | [[nodiscard]] constexpr auto enum_contains(E value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                                               ^
SHARED/magic_enum-master/include/magic_enum.hpp:1052:92: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
 1052 | [[nodiscard]] constexpr auto enum_contains(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                                            ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                                            enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:1052:114: Fehler: expected initializer before Â»<Â« token
 1052 | [[nodiscard]] constexpr auto enum_contains(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                                                                  ^
SHARED/magic_enum-master/include/magic_enum.hpp:1060:44: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
 1060 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1060:44: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
SHARED/magic_enum-master/include/magic_enum.hpp:1060:79: Fehler: expected primary-expression before Â»pÂ«
 1060 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                               ^
SHARED/magic_enum-master/include/magic_enum.hpp:1060:80: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
 1060 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:1060:81: Fehler: expected Â»;Â« before Â»noexceptÂ«
 1060 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 ;
SHARED/magic_enum-master/include/magic_enum.hpp:1069:44: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
 1069 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1069:44: Fehler: Redeklaration von Â»template<class E> constexpr const auto magic_enum::flags::enum_containsÂ«
SHARED/magic_enum-master/include/magic_enum.hpp:1060:30: Anmerkung: vorherige Deklaration von Â»template<class E, class BinaryPredicate> constexpr<TypprÃ¤fixfehler> magic_enum::flags::enum_contains<E, BinaryPredicate>Â«
 1060 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, bool> {
      |                              ^~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1069:44: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
 1069 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1069:62: Fehler: expected Â»;Â« before Â»noexceptÂ«
 1069 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                              ^~~~~~~~~
      |                                                              ;
SHARED/magic_enum-master/include/magic_enum.hpp:1079:63: Fehler: Â»magic_enum::detail::enable_if_enum_flags_tÂ« wurde nicht deklariert
 1079 | template <typename Char, typename Traits, typename E, detail::enable_if_enum_flags_t<E, int> = 0>
      |                                                               ^~~~~~~~~~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1079:85: Fehler: expected Â»>Â« before Â»<Â« token
 1079 | template <typename Char, typename Traits, typename E, detail::enable_if_enum_flags_t<E, int> = 0>
      |                                                                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»std::basic_ostream<_Ch, _Tr>& magic_enum::flags::ostream_operators::operator<<(std::basic_ostream<_Ch, _Tr>&, E)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:1084:7: Warnung: Â»init-statement in AuswahlanweisungenÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
 1084 |   if (const auto name = magic_enum::flags::enum_name<D>(value); !name.empty()) {
      |       ^~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1084:44: Fehler: Â»enum_nameÂ« ist kein Element von Â»magic_enum::flagsÂ«; meinten Sie Â»enum_castÂ«?
 1084 |   if (const auto name = magic_enum::flags::enum_name<D>(value); !name.empty()) {
      |                                            ^~~~~~~~~
      |                                            enum_cast
SHARED/magic_enum-master/include/magic_enum.hpp:1084:55: Fehler: expected primary-expression before Â»>Â« token
 1084 |   if (const auto name = magic_enum::flags::enum_name<D>(value); !name.empty()) {
      |                                                       ^
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:1094:63: Fehler: Â»magic_enum::detail::enable_if_enum_flags_tÂ« wurde nicht deklariert
 1094 | template <typename Char, typename Traits, typename E, detail::enable_if_enum_flags_t<E, int> = 0>
      |                                                               ^~~~~~~~~~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1094:85: Fehler: expected Â»>Â« before Â»<Â« token
 1094 | template <typename Char, typename Traits, typename E, detail::enable_if_enum_flags_t<E, int> = 0>
      |                                                                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:1095:84: Fehler: Â»optionalÂ« wurde nicht deklariert
 1095 | std::basic_ostream<Char, Traits>& operator<<(std::basic_ostream<Char, Traits>& os, optional<E> value) {
      |                                                                                    ^~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1095:92: Fehler: expected Â»,Â« or Â»...Â« before Â»<Â« token
 1095 | std::basic_ostream<Char, Traits>& operator<<(std::basic_ostream<Char, Traits>& os, optional<E> value) {
      |                                                                                            ^
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»std::basic_ostream<_Ch, _Tr>& magic_enum::flags::ostream_operators::operator<<(std::basic_ostream<_Ch, _Tr>&, int)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:1096:10: Fehler: Â»valueÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht deklariert; meinten Sie Â»magic_enum::detail::valueÂ«?
 1096 |   return value.has_value() ? (os << value.value()) : os;
      |          ^~~~~
      |          magic_enum::detail::value
SHARED/magic_enum-master/include/magic_enum.hpp:395:13: Anmerkung: Â»magic_enum::detail::valueÂ« ist hier deklariert
  395 | constexpr E value(std::size_t i) noexcept {
      |             ^~~~~
ConfigParser.cpp: In Elementfunktion Â»std::string ConfigParser::toJson()Â«:
ConfigParser.cpp:14:43: Fehler: Â»enum_valuesÂ« ist kein Element von Â»magic_enumÂ«
   14 |     constexpr auto& entries = magic_enum::enum_values<ConfigParser::CFG_ENTRY>();
      |                                           ^~~~~~~~~~~
ConfigParser.cpp:14:78: Fehler: expected primary-expression before Â»>Â« token
   14 |     constexpr auto& entries = magic_enum::enum_values<ConfigParser::CFG_ENTRY>();
      |                                                                              ^
ConfigParser.cpp:14:80: Fehler: expected primary-expression before Â»)Â« token
   14 |     constexpr auto& entries = magic_enum::enum_values<ConfigParser::CFG_ENTRY>();
      |                                                                                ^
ConfigParser.cpp:19:14: Fehler: Â»string_viewÂ« ist kein Element von Â»stdÂ«
   19 |         std::string_view cfg_name = magic_enum::enum_name(entries.at(i));
      |              ^~~~~~~~~~~
ConfigParser.cpp:19:14: Anmerkung: Â»std::string_viewÂ« ist erst ab C++17 verfÃ¼gbar
ConfigParser.cpp:21:25: Fehler: Â»cfg_nameÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
   21 |         if (std::string(cfg_name).empty()) {
      |                         ^~~~~~~~
ConfigParser.cpp:25:25: Fehler: Â»cfg_nameÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
   25 |         if (std::string(cfg_name).rfind(USER_DATA_CONFIG_ENTRY_PREFIX,0)==0) {
      |                         ^~~~~~~~
ConfigParser.cpp: In Elementfunktion Â»bool ConfigParser::loadFromJson(json11::Json::object, bool)Â«:
ConfigParser.cpp:47:43: Fehler: Â»enum_valuesÂ« ist kein Element von Â»magic_enumÂ«
   47 |     constexpr auto& entries = magic_enum::enum_values<ConfigParser::CFG_ENTRY>();
      |                                           ^~~~~~~~~~~
ConfigParser.cpp:47:78: Fehler: expected primary-expression before Â»>Â« token
   47 |     constexpr auto& entries = magic_enum::enum_values<ConfigParser::CFG_ENTRY>();
      |                                                                              ^
ConfigParser.cpp:47:80: Fehler: expected primary-expression before Â»)Â« token
   47 |     constexpr auto& entries = magic_enum::enum_values<ConfigParser::CFG_ENTRY>();
      |                                                                                ^
ConfigParser.cpp:56:22: Fehler: Â»string_viewÂ« ist kein Element von Â»stdÂ«
   56 |                 std::string_view cfg_name = magic_enum::enum_name(entries.at(i));
      |                      ^~~~~~~~~~~
ConfigParser.cpp:56:22: Anmerkung: Â»std::string_viewÂ« ist erst ab C++17 verfÃ¼gbar
ConfigParser.cpp:57:33: Fehler: Â»cfg_nameÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
   57 |                 if (std::string(cfg_name).empty()) {
      |                                 ^~~~~~~~
ConfigParser.cpp:61:50: Fehler: Â»cfg_nameÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
   61 |                 if(settings_obj.find(std::string(cfg_name)) != settings_obj.end() && settings_obj[std::string(cfg_name)].is_string() && !settings_obj[std::string(cfg_name)].is_null()) {
      |                                                  ^~~~~~~~
ConfigParser.cpp:74:18: Fehler: Â»string_viewÂ« ist kein Element von Â»stdÂ«
   74 |             std::string_view cfg_name = magic_enum::enum_name(entries.at(i));
      |                  ^~~~~~~~~~~
ConfigParser.cpp:74:18: Anmerkung: Â»std::string_viewÂ« ist erst ab C++17 verfÃ¼gbar
ConfigParser.cpp:75:29: Fehler: Â»cfg_nameÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
   75 |             if (std::string(cfg_name).empty()) {
      |                             ^~~~~~~~
ConfigParser.cpp:79:46: Fehler: Â»cfg_nameÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
   79 |             if(settings_obj.find(std::string(cfg_name)) != settings_obj.end() && settings_obj[std::string(cfg_name)].is_string()) {
      |                                              ^~~~~~~~
ConfigParser.cpp: In Elementfunktion Â»bool ConfigParser::loadConfigFile(std::string)Â«:
ConfigParser.cpp:133:40: Fehler: Â»enum_valuesÂ« ist kein Element von Â»magic_enumÂ«
  133 |  constexpr auto& entries = magic_enum::enum_values<ConfigParser::CFG_ENTRY>();
      |                                        ^~~~~~~~~~~
ConfigParser.cpp:133:75: Fehler: expected primary-expression before Â»>Â« token
  133 |  constexpr auto& entries = magic_enum::enum_values<ConfigParser::CFG_ENTRY>();
      |                                                                           ^
ConfigParser.cpp:133:77: Fehler: expected primary-expression before Â»)Â« token
  133 |  constexpr auto& entries = magic_enum::enum_values<ConfigParser::CFG_ENTRY>();
      |                                                                             ^
ConfigParser.cpp:137:8: Fehler: Â»string_viewÂ« ist kein Element von Â»stdÂ«
  137 |   std::string_view cfg_name = magic_enum::enum_name(entries.at(i));
      |        ^~~~~~~~~~~
ConfigParser.cpp:137:8: Anmerkung: Â»std::string_viewÂ« ist erst ab C++17 verfÃ¼gbar
ConfigParser.cpp:138:19: Fehler: Â»cfg_nameÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  138 |   if (std::string(cfg_name).empty()) {
      |                   ^~~~~~~~
ConfigParser.cpp:142:25: Fehler: Â»cfg_nameÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  142 |         if (std::string(cfg_name).rfind(USER_DATA_CONFIG_ENTRY_PREFIX,0)==0) {
      |                         ^~~~~~~~
ConfigParser.cpp: In Elementfunktion Â»bool ConfigParser::writeConfigFile(std::string)Â«:
ConfigParser.cpp:166:40: Fehler: Â»enum_valuesÂ« ist kein Element von Â»magic_enumÂ«
  166 |  constexpr auto& entries = magic_enum::enum_values<ConfigParser::CFG_ENTRY>();
      |                                        ^~~~~~~~~~~
ConfigParser.cpp:166:75: Fehler: expected primary-expression before Â»>Â« token
  166 |  constexpr auto& entries = magic_enum::enum_values<ConfigParser::CFG_ENTRY>();
      |                                                                           ^
ConfigParser.cpp:166:77: Fehler: expected primary-expression before Â»)Â« token
  166 |  constexpr auto& entries = magic_enum::enum_values<ConfigParser::CFG_ENTRY>();
      |                                                                             ^
ConfigParser.cpp:170:8: Fehler: Â»string_viewÂ« ist kein Element von Â»stdÂ«
  170 |   std::string_view cfg_name = magic_enum::enum_name(entries.at(i));
      |        ^~~~~~~~~~~
ConfigParser.cpp:170:8: Anmerkung: Â»std::string_viewÂ« ist erst ab C++17 verfÃ¼gbar
ConfigParser.cpp:171:19: Fehler: Â»cfg_nameÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  171 |   if (std::string(cfg_name).empty()) {
      |                   ^~~~~~~~
ConfigParser.cpp:174:25: Fehler: Â»cfg_nameÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  174 |         if (std::string(cfg_name).rfind(USER_DATA_CONFIG_ENTRY_PREFIX,0)==0) {
      |                         ^~~~~~~~
ConfigParser.cpp:177:25: Fehler: Â»cfg_nameÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  177 |   myfile << std::string(cfg_name) << "=" << config_store[entries.at(i)] << "\n";
      |                         ^~~~~~~~
ConfigParser.cpp:183:14: Fehler: Â»string_viewÂ« ist kein Element von Â»stdÂ«
  183 |         std::string_view cfg_name = magic_enum::enum_name(entries.at(i));
      |              ^~~~~~~~~~~
ConfigParser.cpp:183:14: Anmerkung: Â»std::string_viewÂ« ist erst ab C++17 verfÃ¼gbar
ConfigParser.cpp:184:25: Fehler: Â»cfg_nameÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  184 |         if (std::string(cfg_name).empty()) {
      |                         ^~~~~~~~
ConfigParser.cpp:187:27: Fehler: Â»cfg_nameÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  187 |         if (!(std::string(cfg_name).rfind(USER_DATA_CONFIG_ENTRY_PREFIX,0)==0)) {
      |                           ^~~~~~~~
ConfigParser.cpp:190:31: Fehler: Â»cfg_nameÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  190 |         myfile << std::string(cfg_name) << "=" << config_store[entries.at(i)] << "\n";
      |                               ^~~~~~~~
Makefile:212: recipe for target 'Debug/ConfigParser.o' failed
make[1]: *** [Debug/ConfigParser.o] Error 1
In Datei, eingebunden von ConfigParser.h:13,
                 von HardwareInterface.h:15,
                 von ChessBoard.h:28,
                 von ChessBoard.cpp:1:
SHARED/magic_enum-master/include/magic_enum.hpp:99:23: Fehler: Â»optionalÂ« in Namensraum Â»stdÂ« bezeichnet keinen Templatetyp
   99 | using optional = std::optional<T>;
      |                       ^~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:99:18: Anmerkung: Â»std::optionalÂ« ist erst ab C++17 verfÃ¼gbar
   99 | using optional = std::optional<T>;
      |                  ^~~
SHARED/magic_enum-master/include/magic_enum.hpp:106:26: Fehler: Â»string_viewÂ« in Namensbereich Â»stdÂ« bezeichnet keinen Typ
  106 | using string_view = std::string_view;
      |                          ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:106:21: Anmerkung: Â»std::string_viewÂ« ist erst ab C++17 verfÃ¼gbar
  106 | using string_view = std::string_view;
      |                     ^~~
In Datei, eingebunden von ConfigParser.h:13,
                 von HardwareInterface.h:15,
                 von ChessBoard.h:28,
                 von ChessBoard.cpp:1:
SHARED/magic_enum-master/include/magic_enum.hpp:123:22: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  123 |   static_assert(std::is_enum_v<E>, "magic_enum::customize::enum_range requires enum type.");
      |                      ^~~~~~~~~
      |                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:123:33: Fehler: expected primary-expression before Â»>Â« token
  123 |   static_assert(std::is_enum_v<E>, "magic_enum::customize::enum_range requires enum type.");
      |                                 ^
SHARED/magic_enum-master/include/magic_enum.hpp:123:34: Fehler: expected primary-expression before Â»,Â« token
  123 |   static_assert(std::is_enum_v<E>, "magic_enum::customize::enum_range requires enum type.");
      |                                  ^
SHARED/magic_enum-master/include/magic_enum.hpp:124:3: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  124 |   inline static constexpr int min = MAGIC_ENUM_RANGE_MIN;
      |   ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:125:3: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  125 |   inline static constexpr int max = MAGIC_ENUM_RANGE_MAX;
      |   ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:139:11: Fehler: Â»string_viewÂ« bezeichnet keinen Typ
  139 | constexpr string_view enum_name(E) noexcept {
      |           ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:159:47: Fehler: expected Â»)Â« before Â»strÂ«
  159 |   constexpr explicit static_string(string_view str) noexcept : static_string{str, std::make_index_sequence<N>{}} {
      |                                   ~           ^~~~
      |                                               )
SHARED/magic_enum-master/include/magic_enum.hpp:159:114: Fehler: expected unqualified-id before Â»{Â« token
  159 |   constexpr explicit static_string(string_view str) noexcept : static_string{str, std::make_index_sequence<N>{}} {
      |                                                                                                                  ^
SHARED/magic_enum-master/include/magic_enum.hpp:167:22: Fehler: expected type-specifier before Â»string_viewÂ«
  167 |   constexpr operator string_view() const noexcept { return {data(), size()}; }
      |                      ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:171:38: Fehler: expected Â»)Â« before Â»strÂ«
  171 |   constexpr static_string(string_view str, std::index_sequence<I...>) noexcept : chars{{str[I]..., '\0'}} {}
      |                          ~           ^~~~
      |                                      )
SHARED/magic_enum-master/include/magic_enum.hpp:171:107: Fehler: expected unqualified-id before Â»{Â« token
  171 |   constexpr static_string(string_view str, std::index_sequence<I...>) noexcept : chars{{str[I]..., '\0'}} {}
      |                                                                                                           ^
SHARED/magic_enum-master/include/magic_enum.hpp:178:13: Fehler: nur Deklarationen von Konstruktoren und Umwandlungsoperatoren kÃ¶nnen Â»explicitÂ« sein
  178 |   constexpr explicit static_string(string_view) noexcept {}
      |             ^~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:178:36: Fehler: Feld Â»string_viewÂ« hat unvollstÃ¤ndigen Typen Â»const magic_enum::detail::static_string<0>Â«
  178 |   constexpr explicit static_string(string_view) noexcept {}
      |                                    ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:177:8: Anmerkung: Definition von Â»struct magic_enum::detail::static_string<0>Â« ist erst nach der schlieÃŸenden Klammer vollendet
  177 | struct static_string<0> {
      |        ^~~~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:178:3: Fehler: nicht-statisches Datenelement Â»string_viewÂ« als Â»constexprÂ« deklariert
  178 |   constexpr explicit static_string(string_view) noexcept {}
      |   ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:178:47: Fehler: Â»;Â« am Ende von Elementdeklaration erwartet
  178 |   constexpr explicit static_string(string_view) noexcept {}
      |                                               ^
      |                                                ;
SHARED/magic_enum-master/include/magic_enum.hpp:178:49: Fehler: expected unqualified-id before Â»noexceptÂ«
  178 |   constexpr explicit static_string(string_view) noexcept {}
      |                                                 ^~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:184:22: Fehler: expected type-specifier before Â»string_viewÂ«
  184 |   constexpr operator string_view() const noexcept { return {}; }
      |                      ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:193:11: Fehler: Â»string_viewÂ« bezeichnet keinen Typ
  193 | constexpr string_view pretty_name(string_view name) noexcept {
      |           ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:213:28: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  213 | constexpr std::size_t find(string_view str, char c) noexcept {
      |                            ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:213:45: Fehler: expected primary-expression before Â»charÂ«
  213 | constexpr std::size_t find(string_view str, char c) noexcept {
      |                                             ^~~~
SHARED/magic_enum-master/include/magic_enum.hpp:213:51: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
  213 | constexpr std::size_t find(string_view str, char c) noexcept {
      |                                                   ^
SHARED/magic_enum-master/include/magic_enum.hpp:235:26: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                          ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:235:43: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                                           ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:235:75: Fehler: expected primary-expression before Â»&&Â« token
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                                                                           ^~
SHARED/magic_enum-master/include/magic_enum.hpp:235:78: Fehler: Â»pÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                                                                              ^
SHARED/magic_enum-master/include/magic_enum.hpp:235:79: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                                                                               ^
SHARED/magic_enum-master/include/magic_enum.hpp:235:80: Fehler: expected Â»;Â« before Â»noexceptÂ«
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                                                                                ^~~~~~~~~
      |                                                                                ;
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr bool magic_enum::detail::cmp_less(L, R)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:264:22: Fehler: Â»is_integral_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_integralÂ«?
  264 |   static_assert(std::is_integral_v<L> && std::is_integral_v<R>, "magic_enum::detail::cmp_less requires integral type.");
      |                      ^~~~~~~~~~~~~
      |                      is_integral
SHARED/magic_enum-master/include/magic_enum.hpp:264:37: Fehler: expected primary-expression before Â»>Â« token
  264 |   static_assert(std::is_integral_v<L> && std::is_integral_v<R>, "magic_enum::detail::cmp_less requires integral type.");
      |                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:264:45: Fehler: expected Â»,Â« before Â»::Â« token
  264 |   static_assert(std::is_integral_v<L> && std::is_integral_v<R>, "magic_enum::detail::cmp_less requires integral type.");
      |                                             ^~
      |                                             ,
SHARED/magic_enum-master/include/magic_enum.hpp:264:45: Fehler: expected string-literal before Â»::Â« token
  264 |   static_assert(std::is_integral_v<L> && std::is_integral_v<R>, "magic_enum::detail::cmp_less requires integral type.");
      |                                             ^~
SHARED/magic_enum-master/include/magic_enum.hpp:264:45: Fehler: expected Â»)Â« before Â»::Â« token
  264 |   static_assert(std::is_integral_v<L> && std::is_integral_v<R>, "magic_enum::detail::cmp_less requires integral type.");
      |                ~                            ^~
      |                                             )
SHARED/magic_enum-master/include/magic_enum.hpp:266:6: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |      ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:266:22: Fehler: Â»is_signed_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_signedÂ«?
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                      ^~~~~~~~~~~
      |                      is_signed
SHARED/magic_enum-master/include/magic_enum.hpp:266:35: Fehler: expected primary-expression before Â»>Â« token
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                                   ^
SHARED/magic_enum-master/include/magic_enum.hpp:266:37: Fehler: expected primary-expression before Â»==Â« token
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                                     ^~
SHARED/magic_enum-master/include/magic_enum.hpp:266:45: Fehler: Â»is_signed_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_signedÂ«?
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                                             ^~~~~~~~~~~
      |                                             is_signed
SHARED/magic_enum-master/include/magic_enum.hpp:266:58: Fehler: expected primary-expression before Â»>Â« token
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                                                          ^
SHARED/magic_enum-master/include/magic_enum.hpp:266:59: Fehler: expected primary-expression before Â»)Â« token
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                                                           ^
SHARED/magic_enum-master/include/magic_enum.hpp:269:13: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  269 |   } else if constexpr (std::is_signed_v<R>) {
      |             ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:269:29: Fehler: Â»is_signed_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_signedÂ«?
  269 |   } else if constexpr (std::is_signed_v<R>) {
      |                             ^~~~~~~~~~~
      |                             is_signed
SHARED/magic_enum-master/include/magic_enum.hpp:269:42: Fehler: expected primary-expression before Â»>Â« token
  269 |   } else if constexpr (std::is_signed_v<R>) {
      |                                          ^
SHARED/magic_enum-master/include/magic_enum.hpp:269:43: Fehler: expected primary-expression before Â»)Â« token
  269 |   } else if constexpr (std::is_signed_v<R>) {
      |                                           ^
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr I magic_enum::detail::log2(I)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:280:22: Fehler: Â»is_integral_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_integralÂ«?
  280 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::log2 requires integral type.");
      |                      ^~~~~~~~~~~~~
      |                      is_integral
SHARED/magic_enum-master/include/magic_enum.hpp:280:37: Fehler: expected primary-expression before Â»>Â« token
  280 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::log2 requires integral type.");
      |                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:280:38: Fehler: expected primary-expression before Â»,Â« token
  280 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::log2 requires integral type.");
      |                                      ^
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr bool magic_enum::detail::is_pow2(I)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:290:22: Fehler: Â»is_integral_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_integralÂ«?
  290 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::is_pow2 requires integral type.");
      |                      ^~~~~~~~~~~~~
      |                      is_integral
SHARED/magic_enum-master/include/magic_enum.hpp:290:37: Fehler: expected primary-expression before Â»>Â« token
  290 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::is_pow2 requires integral type.");
      |                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:290:38: Fehler: expected primary-expression before Â»,Â« token
  290 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::is_pow2 requires integral type.");
      |                                      ^
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:296:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  296 | inline constexpr bool is_enum_v = std::is_enum_v<T> && std::is_same_v<T, std::decay_t<T>>;
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:296:40: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  296 | inline constexpr bool is_enum_v = std::is_enum_v<T> && std::is_same_v<T, std::decay_t<T>>;
      |                                        ^~~~~~~~~
      |                                        is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:296:51: Fehler: expected primary-expression before Â»>Â« token
  296 | inline constexpr bool is_enum_v = std::is_enum_v<T> && std::is_same_v<T, std::decay_t<T>>;
      |                                                   ^
SHARED/magic_enum-master/include/magic_enum.hpp:296:56: Fehler: Marke Â»stdÂ« auÃŸerhalb einer Funktion referenziert
  296 | inline constexpr bool is_enum_v = std::is_enum_v<T> && std::is_same_v<T, std::decay_t<T>>;
      |                                                        ^~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr auto magic_enum::detail::n()Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:305:13: Fehler: Â»string_viewÂ« bezeichnet keinen Typ
  305 |   constexpr string_view name{__PRETTY_FUNCTION__ + 49, sizeof(__PRETTY_FUNCTION__) - 51};
      |             ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:309:24: Fehler: Â»nameÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht deklariert; meinten Sie Â»renameÂ«?
  309 |   return static_string<name.size()>{name};
      |                        ^~~~
      |                        rename
SHARED/magic_enum-master/include/magic_enum.hpp:309:35: Fehler: Templateargument 1 ist ungÃ¼ltig
  309 |   return static_string<name.size()>{name};
      |                                   ^
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:316:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  316 | inline constexpr auto type_name_v = n<E>();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr auto magic_enum::detail::n()Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:321:43: Fehler: Â»enum_nameÂ« ist kein Element von Â»magic_enum::customizeÂ«; meinten Sie Â»enum_rangeÂ«?
  321 |   constexpr auto custom_name = customize::enum_name<E>(V);
      |                                           ^~~~~~~~~
      |                                           enum_range
SHARED/magic_enum-master/include/magic_enum.hpp:321:54: Fehler: expected primary-expression before Â»>Â« token
  321 |   constexpr auto custom_name = customize::enum_name<E>(V);
      |                                                      ^
SHARED/magic_enum-master/include/magic_enum.hpp:323:6: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  323 |   if constexpr (custom_name.empty()) {
      |      ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:341:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  341 | inline constexpr auto enum_name_v = n<E, V>();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:343:23: Fehler: Â»autoÂ«-Parameter darf in diesem Kontext nicht verwendet werden
  343 | template <typename E, auto V>
      |                       ^~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr int magic_enum::detail::reflected_min()Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:354:6: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  354 |   if constexpr (IsFlags) {
      |      ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:361:8: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  361 |     if constexpr (cmp_less(lhs, rhs)) {
      |        ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr int magic_enum::detail::reflected_max()Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:373:6: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  373 |   if constexpr (IsFlags) {
      |      ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:380:8: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  380 |     if constexpr (cmp_less(lhs, rhs)) {
      |        ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:389:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  389 | inline constexpr auto reflected_min_v = reflected_min<E, IsFlags>();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:392:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  392 | inline constexpr auto reflected_max_v = reflected_max<E, IsFlags>();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr E magic_enum::detail::value(std::size_t)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:398:6: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  398 |   if constexpr (IsFlags) {
      |      ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr auto magic_enum::detail::values(std::index_sequence<I ...>)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:409:62: Fehler: Â»constexprÂ«-Lambda ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  409 |   constexpr std::size_t count = [](decltype((valid)) valid_) constexpr noexcept -> std::size_t {
      |                                                              ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:419:22: Fehler: der Wert von Â»countÂ« ist in konstantem Ausdruck nicht verwendbar
  419 |   std::array<E, count> values{};
      |                      ^
SHARED/magic_enum-master/include/magic_enum.hpp:409:25: Anmerkung: Â»countÂ« in seiner eigenen Initialisierung verwendet
  409 |   constexpr std::size_t count = [](decltype((valid)) valid_) constexpr noexcept -> std::size_t {
      |                         ^~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:419:22: Anmerkung: in Templateargument fÃ¼r Typ Â»unsigned intÂ«
  419 |   std::array<E, count> values{};
      |                      ^
SHARED/magic_enum-master/include/magic_enum.hpp:422:13: Fehler: ungÃ¼ltige Typen Â»int[std::size_t {aka unsigned int}]Â« fÃ¼r Feldindex
  422 |       values[v++] = value<E, Min, IsFlags>(i);
      |             ^
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:440:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  440 | inline constexpr auto values_v = values<E, IsFlags>();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:446:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  446 | inline constexpr auto count_v = values_v<E, IsFlags>.size();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:449:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  449 | inline constexpr auto min_v = static_cast<U>(values_v<E, IsFlags>.front());
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:452:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  452 | inline constexpr auto max_v = static_cast<U>(values_v<E, IsFlags>.back());
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:467:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  467 | inline constexpr auto range_size_v = range_size<E, IsFlags>();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:473:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  473 | inline constexpr auto invalid_index_v = (std::numeric_limits<index_t<E, IsFlags>>::max)();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:485:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  485 | inline constexpr auto indexes_v = indexes<E, IsFlags>(std::make_index_sequence<range_size_v<E, IsFlags>>{});
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr auto magic_enum::detail::names(std::index_sequence<I ...>)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:491:21: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  491 |   return std::array<string_view, sizeof...(I)>{{enum_name_v<E, values_v<E, IsFlags>[I]>...}};
      |                     ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:491:46: Fehler: Templateargument 1 ist ungÃ¼ltig
  491 |   return std::array<string_view, sizeof...(I)>{{enum_name_v<E, values_v<E, IsFlags>[I]>...}};
      |                                              ^
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:495:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  495 | inline constexpr auto names_v = names<E, IsFlags>(std::make_index_sequence<count_v<E, IsFlags>>{});
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr auto magic_enum::detail::entries(std::index_sequence<I ...>)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:504:34: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  504 |   return std::array<std::pair<E, string_view>, sizeof...(I)>{{{values_v<E, IsFlags>[I], enum_name_v<E, values_v<E, IsFlags>[I]>}...}};
      |                                  ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:504:45: Fehler: Templateargument 2 ist ungÃ¼ltig
  504 |   return std::array<std::pair<E, string_view>, sizeof...(I)>{{{values_v<E, IsFlags>[I], enum_name_v<E, values_v<E, IsFlags>[I]>}...}};
      |                                             ^
SHARED/magic_enum-master/include/magic_enum.hpp:504:60: Fehler: Templateargument 1 ist ungÃ¼ltig
  504 |   return std::array<std::pair<E, string_view>, sizeof...(I)>{{{values_v<E, IsFlags>[I], enum_name_v<E, values_v<E, IsFlags>[I]>}...}};
      |                                                            ^
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:508:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  508 | inline constexpr auto entries_v = entries<E, IsFlags>(std::make_index_sequence<count_v<E, IsFlags>>{});
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:521:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  521 | inline constexpr bool is_sparse_v = is_sparse<E, IsFlags>();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr std::size_t magic_enum::detail::undex(U)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:527:7: Warnung: Â»init-statement in AuswahlanweisungenÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  527 |   if (const auto i = static_cast<std::size_t>(value - min_v<E>); value >= min_v<E> && value <= max_v<E>) {
      |       ^~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:528:8: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  528 |     if constexpr (is_sparse_v<E>) {
      |        ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:529:11: Warnung: Â»init-statement in AuswahlanweisungenÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  529 |       if (const auto idx = indexes_v<E>[i]; idx != invalid_index_v<E>) {
      |           ^~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:579:55: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  579 | using enable_if_enum_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, false, T, R>::type;
      |                                                       ^~~~~~~~~
      |                                                       is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:579:55: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  579 | using enable_if_enum_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, false, T, R>::type;
      |                                                       ^~~~~~~~~
      |                                                       is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:579:79: Fehler: falsche Anzahl der Templateargumente (1, sollte 4 sein)
  579 | using enable_if_enum_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, false, T, R>::type;
      |                                                                               ^~
SHARED/magic_enum-master/include/magic_enum.hpp:560:8: Anmerkung: fÃ¼r Â»template<bool <anonym>, bool <anonym>, class T, class R> struct magic_enum::detail::enable_if_enumÂ« bereitgestellt
  560 | struct enable_if_enum {};
      |        ^~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:579:35: Fehler: Spezifikation mit geschachteltem Namen erwartet
  579 | using enable_if_enum_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, false, T, R>::type;
      |                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:582:61: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  582 | using enable_if_enum_flags_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, true, T, R>::type;
      |                                                             ^~~~~~~~~
      |                                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:582:61: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  582 | using enable_if_enum_flags_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, true, T, R>::type;
      |                                                             ^~~~~~~~~
      |                                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:582:85: Fehler: falsche Anzahl der Templateargumente (1, sollte 4 sein)
  582 | using enable_if_enum_flags_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, true, T, R>::type;
      |                                                                                     ^~
SHARED/magic_enum-master/include/magic_enum.hpp:560:8: Anmerkung: fÃ¼r Â»template<bool <anonym>, bool <anonym>, class T, class R> struct magic_enum::detail::enable_if_enumÂ« bereitgestellt
  560 | struct enable_if_enum {};
      |        ^~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:582:41: Fehler: Spezifikation mit geschachteltem Namen erwartet
  582 | using enable_if_enum_flags_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, true, T, R>::type;
      |                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:584:63: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  584 | template <typename T, typename Enable = std::enable_if_t<std::is_enum_v<std::decay_t<T>>>>
      |                                                               ^~~~~~~~~
      |                                                               is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:584:63: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  584 | template <typename T, typename Enable = std::enable_if_t<std::is_enum_v<std::decay_t<T>>>>
      |                                                               ^~~~~~~~~
      |                                                               is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:584:87: Fehler: Templateargument 1 ist ungÃ¼ltig
  584 | template <typename T, typename Enable = std::enable_if_t<std::is_enum_v<std::decay_t<T>>>>
      |                                                                                       ^~
SHARED/magic_enum-master/include/magic_enum.hpp:584:89: Fehler: expected Â»>Â« before Â»>>Â« token
  584 | template <typename T, typename Enable = std::enable_if_t<std::is_enum_v<std::decay_t<T>>>>
      |                                                                                         ^~
SHARED/magic_enum-master/include/magic_enum.hpp:587:35: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  587 | template <typename T, bool = std::is_enum_v<T>>
      |                                   ^~~~~~~~~
      |                                   is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:587:46: Fehler: expected primary-expression before Â»>>Â« token
  587 | template <typename T, bool = std::is_enum_v<T>>
      |                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:587:46: Fehler: expected Â»>Â« before Â»>>Â« token
SHARED/magic_enum-master/include/magic_enum.hpp:591:52: Fehler: expected template-name before Â»<Â« token
  591 | struct is_scoped_enum<T, true> : std::bool_constant<!std::is_convertible_v<T, std::underlying_type_t<T>>> {};
      |                                                    ^
SHARED/magic_enum-master/include/magic_enum.hpp:591:52: Fehler: expected Â»{Â« before Â»<Â« token
SHARED/magic_enum-master/include/magic_enum.hpp:593:35: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  593 | template <typename T, bool = std::is_enum_v<T>>
      |                                   ^~~~~~~~~
      |                                   is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:593:46: Fehler: expected primary-expression before Â»>>Â« token
  593 | template <typename T, bool = std::is_enum_v<T>>
      |                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:593:46: Fehler: expected Â»>Â« before Â»>>Â« token
SHARED/magic_enum-master/include/magic_enum.hpp:597:54: Fehler: expected template-name before Â»<Â« token
  597 | struct is_unscoped_enum<T, true> : std::bool_constant<std::is_convertible_v<T, std::underlying_type_t<T>>> {};
      |                                                      ^
SHARED/magic_enum-master/include/magic_enum.hpp:597:54: Fehler: expected Â»{Â« before Â»<Â« token
SHARED/magic_enum-master/include/magic_enum.hpp:599:35: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  599 | template <typename T, bool = std::is_enum_v<std::decay_t<T>>>
      |                                   ^~~~~~~~~
      |                                   is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:599:59: Fehler: expected primary-expression before Â»>Â« token
  599 | template <typename T, bool = std::is_enum_v<std::decay_t<T>>>
      |                                                           ^~
SHARED/magic_enum-master/include/magic_enum.hpp:599:61: Fehler: expected unqualified-id before Â»>Â« token
  599 | template <typename T, bool = std::is_enum_v<std::decay_t<T>>>
      |                                                             ^
SHARED/magic_enum-master/include/magic_enum.hpp:603:8: Fehler: Â»underlying_typeÂ« ist kein Klassentemplate
  603 | struct underlying_type<T, true> : std::underlying_type<std::decay_t<T>> {};
      |        ^~~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:608:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  608 | inline constexpr bool is_magic_enum_supported = detail::supported<void>::value;
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:611:36: Fehler: Templateargument 2 ist ungÃ¼ltig
  611 | using Enum = detail::enum_concept<T>;
      |                                    ^
SHARED/magic_enum-master/include/magic_enum.hpp:616:53: Fehler: Templateargument 2 ist ungÃ¼ltig
  616 | struct is_unscoped_enum : detail::is_unscoped_enum<T> {};
      |                                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:619:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  619 | inline constexpr bool is_unscoped_enum_v = is_unscoped_enum<T>::value;
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:624:49: Fehler: Templateargument 2 ist ungÃ¼ltig
  624 | struct is_scoped_enum : detail::is_scoped_enum<T> {};
      |                                                 ^
SHARED/magic_enum-master/include/magic_enum.hpp:627:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  627 | inline constexpr bool is_scoped_enum_v = is_scoped_enum<T>::value;
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:105: Fehler: Templateargument 1 ist ungÃ¼ltig
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                                         ^~
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:105: Fehler: Templateargument 1 ist ungÃ¼ltig
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                                         ^~
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:105: Fehler: Templateargument 1 ist ungÃ¼ltig
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                                         ^~
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:105: Fehler: Templateargument 1 ist ungÃ¼ltig
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                                         ^~
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:105: Fehler: Templateargument 1 ist ungÃ¼ltig
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                                         ^~
SHARED/magic_enum-master/include/magic_enum.hpp:639:59: Fehler: ungÃ¼ltige Verwendung des Template-Namens Â»std::enable_if_tÂ« ohne eine Argumentliste
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                           ^~~
In Datei, eingebunden von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/bits/move.h:57,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/bits/stl_pair.h:59,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/bits/stl_algobase.h:64,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/bits/char_traits.h:39,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/string:40,
                 von ChessBoard.h:5,
                 von ChessBoard.cpp:1:
/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/type_traits:2554:11: Anmerkung: Â»template<bool _Cond, class _Tp> using enable_if_t = typename std::enable_if::typeÂ« ist hier deklariert
 2554 |     using enable_if_t = typename enable_if<_Cond, _Tp>::type;
      |           ^~~~~~~~~~~
In Datei, eingebunden von ConfigParser.h:13,
                 von HardwareInterface.h:15,
                 von ChessBoard.h:28,
                 von ChessBoard.cpp:1:
SHARED/magic_enum-master/include/magic_enum.hpp:639:75: Fehler: expected initializer before Â»<Â« token
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                           ^
SHARED/magic_enum-master/include/magic_enum.hpp:649:63: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  649 | [[nodiscard]] constexpr auto enum_count() noexcept -> detail::enable_if_enum_t<E, std::size_t> {
      |                                                               ^~~~~~~~~~~~~~~~
      |                                                               enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:649:79: Fehler: expected initializer before Â»<Â« token
  649 | [[nodiscard]] constexpr auto enum_count() noexcept -> detail::enable_if_enum_t<E, std::size_t> {
      |                                                                               ^
SHARED/magic_enum-master/include/magic_enum.hpp:658:80: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  658 | [[nodiscard]] constexpr auto enum_value(std::size_t index) noexcept -> detail::enable_if_enum_t<E, std::decay_t<E>> {
      |                                                                                ^~~~~~~~~~~~~~~~
      |                                                                                enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:658:96: Fehler: expected initializer before Â»<Â« token
  658 | [[nodiscard]] constexpr auto enum_value(std::size_t index) noexcept -> detail::enable_if_enum_t<E, std::decay_t<E>> {
      |                                                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:670:64: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  670 | [[nodiscard]] constexpr auto enum_values() noexcept -> detail::enable_if_enum_t<E, detail::values_t<E>> {
      |                                                                ^~~~~~~~~~~~~~~~
      |                                                                enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:670:80: Fehler: expected initializer before Â»<Â« token
  670 | [[nodiscard]] constexpr auto enum_values() noexcept -> detail::enable_if_enum_t<E, detail::values_t<E>> {
      |                                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:678:11: Fehler: Â»autoÂ«-Parameter darf in diesem Kontext nicht verwendet werden
  678 | template <auto V>
      |           ^~~~
SHARED/magic_enum-master/include/magic_enum.hpp:679:76: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  679 | [[nodiscard]] constexpr auto enum_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<decltype(V)>>, string_view> {
      |                                                                            ^~~~~~~~~
      |                                                                            is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:679:76: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  679 | [[nodiscard]] constexpr auto enum_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<decltype(V)>>, string_view> {
      |                                                                            ^~~~~~~~~
      |                                                                            is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:679:99: Fehler: Templateargument 1 ist ungÃ¼ltig
  679 | [[nodiscard]] constexpr auto enum_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<decltype(V)>>, string_view> {
      |                                                                                                   ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:679:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  679 | [[nodiscard]] constexpr auto enum_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<decltype(V)>>, string_view> {
      |                                                                                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:690:69: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  690 | [[nodiscard]] constexpr auto enum_name(E value) noexcept -> detail::enable_if_enum_t<E, string_view> {
      |                                                                     ^~~~~~~~~~~~~~~~
      |                                                                     enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:690:85: Fehler: expected initializer before Â»<Â« token
  690 | [[nodiscard]] constexpr auto enum_name(E value) noexcept -> detail::enable_if_enum_t<E, string_view> {
      |                                                                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:702:63: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  702 | [[nodiscard]] constexpr auto enum_names() noexcept -> detail::enable_if_enum_t<E, detail::names_t<E>> {
      |                                                               ^~~~~~~~~~~~~~~~
      |                                                               enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:702:79: Fehler: expected initializer before Â»<Â« token
  702 | [[nodiscard]] constexpr auto enum_names() noexcept -> detail::enable_if_enum_t<E, detail::names_t<E>> {
      |                                                                               ^
SHARED/magic_enum-master/include/magic_enum.hpp:710:65: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  710 | [[nodiscard]] constexpr auto enum_entries() noexcept -> detail::enable_if_enum_t<E, detail::entries_t<E>> {
      |                                                                 ^~~~~~~~~~~~~~~~
      |                                                                 enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:710:81: Fehler: expected initializer before Â»<Â« token
  710 | [[nodiscard]] constexpr auto enum_entries() noexcept -> detail::enable_if_enum_t<E, detail::entries_t<E>> {
      |                                                                                 ^
SHARED/magic_enum-master/include/magic_enum.hpp:719:88: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  719 | [[nodiscard]] constexpr auto enum_cast(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                                                        ^~~~~~~~~~~~~~~~
      |                                                                                        enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:719:104: Fehler: expected initializer before Â»<Â« token
  719 | [[nodiscard]] constexpr auto enum_cast(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:732:40: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:732:40: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
SHARED/magic_enum-master/include/magic_enum.hpp:732:75: Fehler: expected primary-expression before Â»pÂ«
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                                           ^
SHARED/magic_enum-master/include/magic_enum.hpp:732:76: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                                            ^
SHARED/magic_enum-master/include/magic_enum.hpp:732:77: Fehler: expected Â»;Â« before Â»noexceptÂ«
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                                             ^~~~~~~~~
      |                                                                             ;
SHARED/magic_enum-master/include/magic_enum.hpp:748:40: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
  748 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:748:40: Fehler: Redeklaration von Â»template<class E> constexpr const auto magic_enum::enum_castÂ«
SHARED/magic_enum-master/include/magic_enum.hpp:732:30: Anmerkung: vorherige Deklaration von Â»template<class E, class BinaryPredicate> constexpr<TypprÃ¤fixfehler> magic_enum::enum_cast<E, BinaryPredicate>Â«
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                              ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:748:40: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  748 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:748:58: Fehler: expected Â»;Â« before Â»noexceptÂ«
  748 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                          ^~~~~~~~~
      |                                                          ;
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:756:64: Fehler: ungÃ¼ltige Verwendung des Template-Namens Â»std::enable_if_tÂ« ohne eine Argumentliste
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                ^~~
In Datei, eingebunden von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/bits/move.h:57,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/bits/stl_pair.h:59,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/bits/stl_algobase.h:64,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/bits/char_traits.h:39,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/string:40,
                 von ChessBoard.h:5,
                 von ChessBoard.cpp:1:
/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/type_traits:2554:11: Anmerkung: Â»template<bool _Cond, class _Tp> using enable_if_t = typename std::enable_if::typeÂ« ist hier deklariert
 2554 |     using enable_if_t = typename enable_if<_Cond, _Tp>::type;
      |           ^~~~~~~~~~~
In Datei, eingebunden von ConfigParser.h:13,
                 von HardwareInterface.h:15,
                 von ChessBoard.h:28,
                 von ChessBoard.cpp:1:
SHARED/magic_enum-master/include/magic_enum.hpp:756:80: Fehler: expected initializer before Â»<Â« token
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:763:70: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  763 | [[nodiscard]] constexpr auto enum_index(E value) noexcept -> detail::enable_if_enum_t<E, optional<std::size_t>> {
      |                                                                      ^~~~~~~~~~~~~~~~
      |                                                                      enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:763:86: Fehler: expected initializer before Â»<Â« token
  763 | [[nodiscard]] constexpr auto enum_index(E value) noexcept -> detail::enable_if_enum_t<E, optional<std::size_t>> {
      |                                                                                      ^
SHARED/magic_enum-master/include/magic_enum.hpp:775:73: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  775 | [[nodiscard]] constexpr auto enum_contains(E value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                                                         ^~~~~~~~~~~~~~~~
      |                                                                         enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:775:89: Fehler: expected initializer before Â»<Â« token
  775 | [[nodiscard]] constexpr auto enum_contains(E value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                                                                         ^
SHARED/magic_enum-master/include/magic_enum.hpp:783:92: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  783 | [[nodiscard]] constexpr auto enum_contains(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                                                                            ^~~~~~~~~~~~~~~~
      |                                                                                            enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:783:108: Fehler: expected initializer before Â»<Â« token
  783 | [[nodiscard]] constexpr auto enum_contains(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                                                                                            ^
SHARED/magic_enum-master/include/magic_enum.hpp:791:44: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
  791 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:791:44: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
SHARED/magic_enum-master/include/magic_enum.hpp:791:79: Fehler: expected primary-expression before Â»pÂ«
  791 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, bool> {
      |                                                                               ^
SHARED/magic_enum-master/include/magic_enum.hpp:791:80: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
  791 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, bool> {
      |                                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:791:81: Fehler: expected Â»;Â« before Â»noexceptÂ«
  791 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, bool> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 ;
SHARED/magic_enum-master/include/magic_enum.hpp:800:44: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
  800 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:800:44: Fehler: Redeklaration von Â»template<class E> constexpr const auto magic_enum::enum_containsÂ«
SHARED/magic_enum-master/include/magic_enum.hpp:791:30: Anmerkung: vorherige Deklaration von Â»template<class E, class BinaryPredicate> constexpr<TypprÃ¤fixfehler> magic_enum::enum_contains<E, BinaryPredicate>Â«
  791 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, bool> {
      |                              ^~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:800:44: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  800 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:800:62: Fehler: expected Â»;Â« before Â»noexceptÂ«
  800 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                                              ^~~~~~~~~
      |                                                              ;
SHARED/magic_enum-master/include/magic_enum.hpp:808:77: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  808 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                             ^~~~~~~~~
      |                                                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:808:77: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  808 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                             ^~~~~~~~~
      |                                                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:808:88: Fehler: Templateargument 1 ist ungÃ¼ltig
  808 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:808:96: Fehler: expected unqualified-id before Â»=Â« token
  808 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:823:77: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  823 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                             ^~~~~~~~~
      |                                                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:823:77: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  823 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                             ^~~~~~~~~
      |                                                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:823:88: Fehler: Templateargument 1 ist ungÃ¼ltig
  823 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:823:96: Fehler: expected unqualified-id before Â»=Â« token
  823 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:832:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  832 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:832:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  832 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:832:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  832 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:832:64: Fehler: expected unqualified-id before Â»=Â« token
  832 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:837:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  837 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:837:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  837 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:837:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  837 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:837:64: Fehler: expected unqualified-id before Â»=Â« token
  837 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:842:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  842 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:842:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  842 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:842:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  842 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:842:64: Fehler: expected unqualified-id before Â»=Â« token
  842 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:847:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  847 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:847:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  847 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:847:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  847 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:847:64: Fehler: expected unqualified-id before Â»=Â« token
  847 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:852:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  852 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:852:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  852 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:852:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  852 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:852:64: Fehler: expected unqualified-id before Â»=Â« token
  852 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:857:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  857 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:857:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  857 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:857:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  857 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:857:64: Fehler: expected unqualified-id before Â»=Â« token
  857 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:862:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  862 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:862:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  862 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:862:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  862 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:862:64: Fehler: expected unqualified-id before Â»=Â« token
  862 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:872:19: Fehler: Â»enum_type_nameÂ« wurde nicht innerhalb von Â»magic_enumÂ« deklariert
  872 | using magic_enum::enum_type_name;
      |                   ^~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:876:63: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  876 | [[nodiscard]] constexpr auto enum_count() noexcept -> detail::enable_if_enum_flags_t<E, std::size_t> {
      |                                                               ^~~~~~~~~~~~~~~~~~~~~~
      |                                                               enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:876:85: Fehler: expected initializer before Â»<Â« token
  876 | [[nodiscard]] constexpr auto enum_count() noexcept -> detail::enable_if_enum_flags_t<E, std::size_t> {
      |                                                                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:885:80: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  885 | [[nodiscard]] constexpr auto enum_value(std::size_t index) noexcept -> detail::enable_if_enum_flags_t<E, std::decay_t<E>> {
      |                                                                                ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                                enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:885:102: Fehler: expected initializer before Â»<Â« token
  885 | [[nodiscard]] constexpr auto enum_value(std::size_t index) noexcept -> detail::enable_if_enum_flags_t<E, std::decay_t<E>> {
      |                                                                                                      ^
SHARED/magic_enum-master/include/magic_enum.hpp:899:64: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  899 | [[nodiscard]] constexpr auto enum_values() noexcept -> detail::enable_if_enum_flags_t<E, detail::values_t<E, true>> {
      |                                                                ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:899:86: Fehler: expected initializer before Â»<Â« token
  899 | [[nodiscard]] constexpr auto enum_values() noexcept -> detail::enable_if_enum_flags_t<E, detail::values_t<E, true>> {
      |                                                                                      ^
SHARED/magic_enum-master/include/magic_enum.hpp:908:50: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  908 | [[nodiscard]] auto enum_name(E value) -> detail::enable_if_enum_flags_t<E, string> {
      |                                                  ^~~~~~~~~~~~~~~~~~~~~~
      |                                                  enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:908:72: Fehler: expected initializer before Â»<Â« token
  908 | [[nodiscard]] auto enum_name(E value) -> detail::enable_if_enum_flags_t<E, string> {
      |                                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:934:63: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  934 | [[nodiscard]] constexpr auto enum_names() noexcept -> detail::enable_if_enum_flags_t<E, detail::names_t<E, true>> {
      |                                                               ^~~~~~~~~~~~~~~~~~~~~~
      |                                                               enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:934:85: Fehler: expected initializer before Â»<Â« token
  934 | [[nodiscard]] constexpr auto enum_names() noexcept -> detail::enable_if_enum_flags_t<E, detail::names_t<E, true>> {
      |                                                                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:942:65: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  942 | [[nodiscard]] constexpr auto enum_entries() noexcept -> detail::enable_if_enum_flags_t<E, detail::entries_t<E, true>> {
      |                                                                 ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                 enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:942:87: Fehler: expected initializer before Â»<Â« token
  942 | [[nodiscard]] constexpr auto enum_entries() noexcept -> detail::enable_if_enum_flags_t<E, detail::entries_t<E, true>> {
      |                                                                                       ^
SHARED/magic_enum-master/include/magic_enum.hpp:951:88: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  951 | [[nodiscard]] constexpr auto enum_cast(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                                                        ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                                        enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:951:110: Fehler: expected initializer before Â»<Â« token
  951 | [[nodiscard]] constexpr auto enum_cast(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                                                                              ^
SHARED/magic_enum-master/include/magic_enum.hpp:981:40: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
  981 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:981:40: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
SHARED/magic_enum-master/include/magic_enum.hpp:981:75: Fehler: expected primary-expression before Â»pÂ«
  981 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                                           ^
SHARED/magic_enum-master/include/magic_enum.hpp:981:76: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
  981 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                                            ^
SHARED/magic_enum-master/include/magic_enum.hpp:981:77: Fehler: expected Â»;Â« before Â»noexceptÂ«
  981 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                                             ^~~~~~~~~
      |                                                                             ;
SHARED/magic_enum-master/include/magic_enum.hpp:1014:40: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
 1014 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1014:40: Fehler: Redeklaration von Â»template<class E> constexpr const auto magic_enum::flags::enum_castÂ«
SHARED/magic_enum-master/include/magic_enum.hpp:981:30: Anmerkung: vorherige Deklaration von Â»template<class E, class BinaryPredicate> constexpr<TypprÃ¤fixfehler> magic_enum::flags::enum_cast<E, BinaryPredicate>Â«
  981 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                              ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1014:40: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
 1014 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1014:58: Fehler: expected Â»;Â« before Â»noexceptÂ«
 1014 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                          ^~~~~~~~~
      |                                                          ;
SHARED/magic_enum-master/include/magic_enum.hpp:1021:19: Fehler: Â»enum_integerÂ« wurde nicht innerhalb von Â»magic_enumÂ« deklariert
 1021 | using magic_enum::enum_integer;
      |                   ^~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1026:70: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
 1026 | [[nodiscard]] constexpr auto enum_index(E value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::size_t>> {
      |                                                                      ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                      enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:1026:92: Fehler: expected initializer before Â»<Â« token
 1026 | [[nodiscard]] constexpr auto enum_index(E value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::size_t>> {
      |                                                                                            ^
SHARED/magic_enum-master/include/magic_enum.hpp:1043:73: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
 1043 | [[nodiscard]] constexpr auto enum_contains(E value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                         ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                         enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:1043:95: Fehler: expected initializer before Â»<Â« token
 1043 | [[nodiscard]] constexpr auto enum_contains(E value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                                               ^
SHARED/magic_enum-master/include/magic_enum.hpp:1052:92: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
 1052 | [[nodiscard]] constexpr auto enum_contains(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                                            ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                                            enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:1052:114: Fehler: expected initializer before Â»<Â« token
 1052 | [[nodiscard]] constexpr auto enum_contains(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                                                                  ^
SHARED/magic_enum-master/include/magic_enum.hpp:1060:44: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
 1060 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1060:44: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
SHARED/magic_enum-master/include/magic_enum.hpp:1060:79: Fehler: expected primary-expression before Â»pÂ«
 1060 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                               ^
SHARED/magic_enum-master/include/magic_enum.hpp:1060:80: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
 1060 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:1060:81: Fehler: expected Â»;Â« before Â»noexceptÂ«
 1060 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 ;
SHARED/magic_enum-master/include/magic_enum.hpp:1069:44: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
 1069 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1069:44: Fehler: Redeklaration von Â»template<class E> constexpr const auto magic_enum::flags::enum_containsÂ«
SHARED/magic_enum-master/include/magic_enum.hpp:1060:30: Anmerkung: vorherige Deklaration von Â»template<class E, class BinaryPredicate> constexpr<TypprÃ¤fixfehler> magic_enum::flags::enum_contains<E, BinaryPredicate>Â«
 1060 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, bool> {
      |                              ^~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1069:44: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
 1069 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1069:62: Fehler: expected Â»;Â« before Â»noexceptÂ«
 1069 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                              ^~~~~~~~~
      |                                                              ;
SHARED/magic_enum-master/include/magic_enum.hpp:1079:63: Fehler: Â»magic_enum::detail::enable_if_enum_flags_tÂ« wurde nicht deklariert
 1079 | template <typename Char, typename Traits, typename E, detail::enable_if_enum_flags_t<E, int> = 0>
      |                                                               ^~~~~~~~~~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1079:85: Fehler: expected Â»>Â« before Â»<Â« token
 1079 | template <typename Char, typename Traits, typename E, detail::enable_if_enum_flags_t<E, int> = 0>
      |                                                                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»std::basic_ostream<_CharT, _Traits>& magic_enum::flags::ostream_operators::operator<<(std::basic_ostream<_CharT, _Traits>&, E)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:1084:7: Warnung: Â»init-statement in AuswahlanweisungenÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
 1084 |   if (const auto name = magic_enum::flags::enum_name<D>(value); !name.empty()) {
      |       ^~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1084:44: Fehler: Â»enum_nameÂ« ist kein Element von Â»magic_enum::flagsÂ«; meinten Sie Â»enum_castÂ«?
 1084 |   if (const auto name = magic_enum::flags::enum_name<D>(value); !name.empty()) {
      |                                            ^~~~~~~~~
      |                                            enum_cast
SHARED/magic_enum-master/include/magic_enum.hpp:1084:55: Fehler: expected primary-expression before Â»>Â« token
 1084 |   if (const auto name = magic_enum::flags::enum_name<D>(value); !name.empty()) {
      |                                                       ^
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:1094:63: Fehler: Â»magic_enum::detail::enable_if_enum_flags_tÂ« wurde nicht deklariert
 1094 | template <typename Char, typename Traits, typename E, detail::enable_if_enum_flags_t<E, int> = 0>
      |                                                               ^~~~~~~~~~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1094:85: Fehler: expected Â»>Â« before Â»<Â« token
 1094 | template <typename Char, typename Traits, typename E, detail::enable_if_enum_flags_t<E, int> = 0>
      |                                                                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:1095:84: Fehler: Â»optionalÂ« wurde nicht deklariert
 1095 | std::basic_ostream<Char, Traits>& operator<<(std::basic_ostream<Char, Traits>& os, optional<E> value) {
      |                                                                                    ^~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1095:92: Fehler: expected Â»,Â« or Â»...Â« before Â»<Â« token
 1095 | std::basic_ostream<Char, Traits>& operator<<(std::basic_ostream<Char, Traits>& os, optional<E> value) {
      |                                                                                            ^
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»std::basic_ostream<_CharT, _Traits>& magic_enum::flags::ostream_operators::operator<<(std::basic_ostream<_CharT, _Traits>&, int)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:1096:10: Fehler: Â»valueÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht deklariert; meinten Sie Â»magic_enum::detail::valueÂ«?
 1096 |   return value.has_value() ? (os << value.value()) : os;
      |          ^~~~~
      |          magic_enum::detail::value
SHARED/magic_enum-master/include/magic_enum.hpp:395:13: Anmerkung: Â»magic_enum::detail::valueÂ« ist hier deklariert
  395 | constexpr E value(std::size_t i) noexcept {
      |             ^~~~~
ChessBoard.cpp: In Elementfunktion Â»bool ChessBoard::MoveWaypointsAlong(std::queue<ChessBoard::MV_POSITION>&)Â«:
ChessBoard.cpp:136:1: Warnung: keine return-Anweisung in nicht void zurÃ¼ckgebender Funktion [-Wreturn-type]
  136 | }
      | ^
ChessBoard.cpp: In Elementfunktion Â»void ChessBoard::getParkPositionCoordinates(ChessField::CHESS_FILEDS, int&, int&, IOController::COIL, bool)Â«:
ChessBoard.cpp:1230:28: Fehler: Â»enum_integerÂ« ist kein Element von Â»magic_enumÂ«
 1230 |    pp_entry = (magic_enum::enum_integer(_index) - magic_enum::enum_integer(ChessField::CHESS_FILEDS::CHESS_FIELD_PARK_POSTION_BLACK_1)) % 16;
      |                            ^~~~~~~~~~~~
ChessBoard.cpp:1230:63: Fehler: Â»enum_integerÂ« ist kein Element von Â»magic_enumÂ«
 1230 |    pp_entry = (magic_enum::enum_integer(_index) - magic_enum::enum_integer(ChessField::CHESS_FILEDS::CHESS_FIELD_PARK_POSTION_BLACK_1)) % 16;
      |                                                               ^~~~~~~~~~~~
ChessBoard.cpp:1234:27: Fehler: Â»enum_integerÂ« ist kein Element von Â»magic_enumÂ«
 1234 |   pp_entry = (magic_enum::enum_integer(_index) - magic_enum::enum_integer(ChessField::CHESS_FILEDS::CHESS_FIELD_PARK_POSTION_WHITE_1)) % 16;
      |                           ^~~~~~~~~~~~
ChessBoard.cpp:1234:62: Fehler: Â»enum_integerÂ« ist kein Element von Â»magic_enumÂ«
 1234 |   pp_entry = (magic_enum::enum_integer(_index) - magic_enum::enum_integer(ChessField::CHESS_FILEDS::CHESS_FIELD_PARK_POSTION_WHITE_1)) % 16;
      |                                                              ^~~~~~~~~~~~
ChessBoard.cpp: In Elementfunktion Â»ChessBoard::BOARD_ERROR ChessBoard::scanBoard(bool)Â«:
ChessBoard.cpp:1333:34: Fehler: Â»enum_integerÂ« ist kein Element von Â»magic_enumÂ«
 1333 |  for (int i = 0; i < magic_enum::enum_integer(ChessField::CHESS_FILEDS::CHESS_FIELD_PARK_POSTION_WHITE_1); i++)
      |                                  ^~~~~~~~~~~~
ChessBoard.cpp:1350:26: Fehler: Â»enum_integerÂ« ist kein Element von Â»magic_enumÂ«
 1350 |  for(int i = magic_enum::enum_integer(ChessField::CHESS_FILEDS::CHESS_FIELD_PARK_POSTION_BLACK_1) ; i < magic_enum::enum_integer(ChessField::CHESS_FILEDS::CHESS_FIELD_PARK_POSTION_BLACK_16) ; i++)
      |                          ^~~~~~~~~~~~
ChessBoard.cpp:1350:117: Fehler: Â»enum_integerÂ« ist kein Element von Â»magic_enumÂ«
 1350 |  for(int i = magic_enum::enum_integer(ChessField::CHESS_FILEDS::CHESS_FIELD_PARK_POSTION_BLACK_1) ; i < magic_enum::enum_integer(ChessField::CHESS_FILEDS::CHESS_FIELD_PARK_POSTION_BLACK_16) ; i++)
      |                                                                                                                     ^~~~~~~~~~~~
ChessBoard.cpp: In Funktion Â»std::__cxx11::list<ChessPiece::FIGURE> checkBoardForFullFigureSet(ChessPiece::FIGURE (&)[12][8])Â«:
ChessBoard.cpp:1398:1: Warnung: keine return-Anweisung in nicht void zurÃ¼ckgebender Funktion [-Wreturn-type]
 1398 | }
      | ^
ChessBoard.cpp: In Elementfunktion Â»ChessBoard::BOARD_ERROR ChessBoard::get_coil_offset(IOController::COIL, int&, int&)Â«:
ChessBoard.cpp:1532:1: Warnung: keine return-Anweisung in nicht void zurÃ¼ckgebender Funktion [-Wreturn-type]
 1532 | }
      | ^
Makefile:212: recipe for target 'Debug/ChessBoard.o' failed
make[1]: *** [Debug/ChessBoard.o] Error 1
In Datei, eingebunden von BackendConnector.h:23,
                 von BackendConnector.cpp:1:
SHARED/magic_enum-master/include/magic_enum.hpp:99:23: Fehler: Â»optionalÂ« in Namensraum Â»stdÂ« bezeichnet keinen Templatetyp
   99 | using optional = std::optional<T>;
      |                       ^~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:99:18: Anmerkung: Â»std::optionalÂ« ist erst ab C++17 verfÃ¼gbar
   99 | using optional = std::optional<T>;
      |                  ^~~
SHARED/magic_enum-master/include/magic_enum.hpp:106:26: Fehler: Â»string_viewÂ« in Namensbereich Â»stdÂ« bezeichnet keinen Typ
  106 | using string_view = std::string_view;
      |                          ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:106:21: Anmerkung: Â»std::string_viewÂ« ist erst ab C++17 verfÃ¼gbar
  106 | using string_view = std::string_view;
      |                     ^~~
In Datei, eingebunden von BackendConnector.h:23,
                 von BackendConnector.cpp:1:
SHARED/magic_enum-master/include/magic_enum.hpp:123:22: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  123 |   static_assert(std::is_enum_v<E>, "magic_enum::customize::enum_range requires enum type.");
      |                      ^~~~~~~~~
      |                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:123:33: Fehler: expected primary-expression before Â»>Â« token
  123 |   static_assert(std::is_enum_v<E>, "magic_enum::customize::enum_range requires enum type.");
      |                                 ^
SHARED/magic_enum-master/include/magic_enum.hpp:123:34: Fehler: expected primary-expression before Â»,Â« token
  123 |   static_assert(std::is_enum_v<E>, "magic_enum::customize::enum_range requires enum type.");
      |                                  ^
SHARED/magic_enum-master/include/magic_enum.hpp:124:3: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  124 |   inline static constexpr int min = MAGIC_ENUM_RANGE_MIN;
      |   ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:125:3: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  125 |   inline static constexpr int max = MAGIC_ENUM_RANGE_MAX;
      |   ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:139:11: Fehler: Â»string_viewÂ« bezeichnet keinen Typ
  139 | constexpr string_view enum_name(E) noexcept {
      |           ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:159:47: Fehler: expected Â»)Â« before Â»strÂ«
  159 |   constexpr explicit static_string(string_view str) noexcept : static_string{str, std::make_index_sequence<N>{}} {
      |                                   ~           ^~~~
      |                                               )
SHARED/magic_enum-master/include/magic_enum.hpp:159:114: Fehler: expected unqualified-id before Â»{Â« token
  159 |   constexpr explicit static_string(string_view str) noexcept : static_string{str, std::make_index_sequence<N>{}} {
      |                                                                                                                  ^
SHARED/magic_enum-master/include/magic_enum.hpp:167:22: Fehler: expected type-specifier before Â»string_viewÂ«
  167 |   constexpr operator string_view() const noexcept { return {data(), size()}; }
      |                      ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:171:38: Fehler: expected Â»)Â« before Â»strÂ«
  171 |   constexpr static_string(string_view str, std::index_sequence<I...>) noexcept : chars{{str[I]..., '\0'}} {}
      |                          ~           ^~~~
      |                                      )
SHARED/magic_enum-master/include/magic_enum.hpp:171:107: Fehler: expected unqualified-id before Â»{Â« token
  171 |   constexpr static_string(string_view str, std::index_sequence<I...>) noexcept : chars{{str[I]..., '\0'}} {}
      |                                                                                                           ^
SHARED/magic_enum-master/include/magic_enum.hpp:178:13: Fehler: nur Deklarationen von Konstruktoren und Umwandlungsoperatoren kÃ¶nnen Â»explicitÂ« sein
  178 |   constexpr explicit static_string(string_view) noexcept {}
      |             ^~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:178:36: Fehler: Feld Â»string_viewÂ« hat unvollstÃ¤ndigen Typen Â»const magic_enum::detail::static_string<0>Â«
  178 |   constexpr explicit static_string(string_view) noexcept {}
      |                                    ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:177:8: Anmerkung: Definition von Â»struct magic_enum::detail::static_string<0>Â« ist erst nach der schlieÃŸenden Klammer vollendet
  177 | struct static_string<0> {
      |        ^~~~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:178:3: Fehler: nicht-statisches Datenelement Â»string_viewÂ« als Â»constexprÂ« deklariert
  178 |   constexpr explicit static_string(string_view) noexcept {}
      |   ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:178:47: Fehler: Â»;Â« am Ende von Elementdeklaration erwartet
  178 |   constexpr explicit static_string(string_view) noexcept {}
      |                                               ^
      |                                                ;
SHARED/magic_enum-master/include/magic_enum.hpp:178:49: Fehler: expected unqualified-id before Â»noexceptÂ«
  178 |   constexpr explicit static_string(string_view) noexcept {}
      |                                                 ^~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:184:22: Fehler: expected type-specifier before Â»string_viewÂ«
  184 |   constexpr operator string_view() const noexcept { return {}; }
      |                      ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:193:11: Fehler: Â»string_viewÂ« bezeichnet keinen Typ
  193 | constexpr string_view pretty_name(string_view name) noexcept {
      |           ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:213:28: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  213 | constexpr std::size_t find(string_view str, char c) noexcept {
      |                            ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:213:45: Fehler: expected primary-expression before Â»charÂ«
  213 | constexpr std::size_t find(string_view str, char c) noexcept {
      |                                             ^~~~
SHARED/magic_enum-master/include/magic_enum.hpp:213:51: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
  213 | constexpr std::size_t find(string_view str, char c) noexcept {
      |                                                   ^
SHARED/magic_enum-master/include/magic_enum.hpp:235:26: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                          ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:235:43: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                                           ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:235:75: Fehler: expected primary-expression before Â»&&Â« token
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                                                                           ^~
SHARED/magic_enum-master/include/magic_enum.hpp:235:78: Fehler: Â»pÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                                                                              ^
SHARED/magic_enum-master/include/magic_enum.hpp:235:79: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                                                                               ^
SHARED/magic_enum-master/include/magic_enum.hpp:235:80: Fehler: expected Â»;Â« before Â»noexceptÂ«
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                                                                                ^~~~~~~~~
      |                                                                                ;
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr bool magic_enum::detail::cmp_less(L, R)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:264:22: Fehler: Â»is_integral_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_integralÂ«?
  264 |   static_assert(std::is_integral_v<L> && std::is_integral_v<R>, "magic_enum::detail::cmp_less requires integral type.");
      |                      ^~~~~~~~~~~~~
      |                      is_integral
SHARED/magic_enum-master/include/magic_enum.hpp:264:37: Fehler: expected primary-expression before Â»>Â« token
  264 |   static_assert(std::is_integral_v<L> && std::is_integral_v<R>, "magic_enum::detail::cmp_less requires integral type.");
      |                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:264:45: Fehler: expected Â»,Â« before Â»::Â« token
  264 |   static_assert(std::is_integral_v<L> && std::is_integral_v<R>, "magic_enum::detail::cmp_less requires integral type.");
      |                                             ^~
      |                                             ,
SHARED/magic_enum-master/include/magic_enum.hpp:264:45: Fehler: expected string-literal before Â»::Â« token
  264 |   static_assert(std::is_integral_v<L> && std::is_integral_v<R>, "magic_enum::detail::cmp_less requires integral type.");
      |                                             ^~
SHARED/magic_enum-master/include/magic_enum.hpp:264:45: Fehler: expected Â»)Â« before Â»::Â« token
  264 |   static_assert(std::is_integral_v<L> && std::is_integral_v<R>, "magic_enum::detail::cmp_less requires integral type.");
      |                ~                            ^~
      |                                             )
SHARED/magic_enum-master/include/magic_enum.hpp:266:6: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |      ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:266:22: Fehler: Â»is_signed_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_signedÂ«?
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                      ^~~~~~~~~~~
      |                      is_signed
SHARED/magic_enum-master/include/magic_enum.hpp:266:35: Fehler: expected primary-expression before Â»>Â« token
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                                   ^
SHARED/magic_enum-master/include/magic_enum.hpp:266:37: Fehler: expected primary-expression before Â»==Â« token
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                                     ^~
SHARED/magic_enum-master/include/magic_enum.hpp:266:45: Fehler: Â»is_signed_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_signedÂ«?
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                                             ^~~~~~~~~~~
      |                                             is_signed
SHARED/magic_enum-master/include/magic_enum.hpp:266:58: Fehler: expected primary-expression before Â»>Â« token
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                                                          ^
SHARED/magic_enum-master/include/magic_enum.hpp:266:59: Fehler: expected primary-expression before Â»)Â« token
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                                                           ^
SHARED/magic_enum-master/include/magic_enum.hpp:269:13: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  269 |   } else if constexpr (std::is_signed_v<R>) {
      |             ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:269:29: Fehler: Â»is_signed_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_signedÂ«?
  269 |   } else if constexpr (std::is_signed_v<R>) {
      |                             ^~~~~~~~~~~
      |                             is_signed
SHARED/magic_enum-master/include/magic_enum.hpp:269:42: Fehler: expected primary-expression before Â»>Â« token
  269 |   } else if constexpr (std::is_signed_v<R>) {
      |                                          ^
SHARED/magic_enum-master/include/magic_enum.hpp:269:43: Fehler: expected primary-expression before Â»)Â« token
  269 |   } else if constexpr (std::is_signed_v<R>) {
      |                                           ^
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr I magic_enum::detail::log2(I)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:280:22: Fehler: Â»is_integral_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_integralÂ«?
  280 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::log2 requires integral type.");
      |                      ^~~~~~~~~~~~~
      |                      is_integral
SHARED/magic_enum-master/include/magic_enum.hpp:280:37: Fehler: expected primary-expression before Â»>Â« token
  280 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::log2 requires integral type.");
      |                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:280:38: Fehler: expected primary-expression before Â»,Â« token
  280 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::log2 requires integral type.");
      |                                      ^
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr bool magic_enum::detail::is_pow2(I)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:290:22: Fehler: Â»is_integral_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_integralÂ«?
  290 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::is_pow2 requires integral type.");
      |                      ^~~~~~~~~~~~~
      |                      is_integral
SHARED/magic_enum-master/include/magic_enum.hpp:290:37: Fehler: expected primary-expression before Â»>Â« token
  290 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::is_pow2 requires integral type.");
      |                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:290:38: Fehler: expected primary-expression before Â»,Â« token
  290 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::is_pow2 requires integral type.");
      |                                      ^
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:296:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  296 | inline constexpr bool is_enum_v = std::is_enum_v<T> && std::is_same_v<T, std::decay_t<T>>;
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:296:40: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  296 | inline constexpr bool is_enum_v = std::is_enum_v<T> && std::is_same_v<T, std::decay_t<T>>;
      |                                        ^~~~~~~~~
      |                                        is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:296:51: Fehler: expected primary-expression before Â»>Â« token
  296 | inline constexpr bool is_enum_v = std::is_enum_v<T> && std::is_same_v<T, std::decay_t<T>>;
      |                                                   ^
SHARED/magic_enum-master/include/magic_enum.hpp:296:56: Fehler: Marke Â»stdÂ« auÃŸerhalb einer Funktion referenziert
  296 | inline constexpr bool is_enum_v = std::is_enum_v<T> && std::is_same_v<T, std::decay_t<T>>;
      |                                                        ^~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr auto magic_enum::detail::n()Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:305:13: Fehler: Â»string_viewÂ« bezeichnet keinen Typ
  305 |   constexpr string_view name{__PRETTY_FUNCTION__ + 49, sizeof(__PRETTY_FUNCTION__) - 51};
      |             ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:309:24: Fehler: Â»nameÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  309 |   return static_string<name.size()>{name};
      |                        ^~~~
SHARED/magic_enum-master/include/magic_enum.hpp:309:35: Fehler: Templateargument 1 ist ungÃ¼ltig
  309 |   return static_string<name.size()>{name};
      |                                   ^
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:316:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  316 | inline constexpr auto type_name_v = n<E>();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr auto magic_enum::detail::n()Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:321:43: Fehler: Â»enum_nameÂ« ist kein Element von Â»magic_enum::customizeÂ«; meinten Sie Â»enum_rangeÂ«?
  321 |   constexpr auto custom_name = customize::enum_name<E>(V);
      |                                           ^~~~~~~~~
      |                                           enum_range
SHARED/magic_enum-master/include/magic_enum.hpp:321:54: Fehler: expected primary-expression before Â»>Â« token
  321 |   constexpr auto custom_name = customize::enum_name<E>(V);
      |                                                      ^
SHARED/magic_enum-master/include/magic_enum.hpp:323:6: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  323 |   if constexpr (custom_name.empty()) {
      |      ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:341:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  341 | inline constexpr auto enum_name_v = n<E, V>();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:343:23: Fehler: Â»autoÂ«-Parameter darf in diesem Kontext nicht verwendet werden
  343 | template <typename E, auto V>
      |                       ^~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr int magic_enum::detail::reflected_min()Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:354:6: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  354 |   if constexpr (IsFlags) {
      |      ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:361:8: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  361 |     if constexpr (cmp_less(lhs, rhs)) {
      |        ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr int magic_enum::detail::reflected_max()Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:373:6: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  373 |   if constexpr (IsFlags) {
      |      ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:380:8: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  380 |     if constexpr (cmp_less(lhs, rhs)) {
      |        ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:389:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  389 | inline constexpr auto reflected_min_v = reflected_min<E, IsFlags>();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:392:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  392 | inline constexpr auto reflected_max_v = reflected_max<E, IsFlags>();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr E magic_enum::detail::value(std::size_t)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:398:6: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  398 |   if constexpr (IsFlags) {
      |      ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr auto magic_enum::detail::values(std::index_sequence<I ...>)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:409:62: Fehler: Â»constexprÂ«-Lambda ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  409 |   constexpr std::size_t count = [](decltype((valid)) valid_) constexpr noexcept -> std::size_t {
      |                                                              ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:419:22: Fehler: der Wert von Â»countÂ« ist in konstantem Ausdruck nicht verwendbar
  419 |   std::array<E, count> values{};
      |                      ^
SHARED/magic_enum-master/include/magic_enum.hpp:409:25: Anmerkung: Â»countÂ« in seiner eigenen Initialisierung verwendet
  409 |   constexpr std::size_t count = [](decltype((valid)) valid_) constexpr noexcept -> std::size_t {
      |                         ^~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:419:22: Anmerkung: in Templateargument fÃ¼r Typ Â»unsigned intÂ«
  419 |   std::array<E, count> values{};
      |                      ^
SHARED/magic_enum-master/include/magic_enum.hpp:422:13: Fehler: ungÃ¼ltige Typen Â»int[std::size_t {aka unsigned int}]Â« fÃ¼r Feldindex
  422 |       values[v++] = value<E, Min, IsFlags>(i);
      |             ^
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:440:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  440 | inline constexpr auto values_v = values<E, IsFlags>();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:446:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  446 | inline constexpr auto count_v = values_v<E, IsFlags>.size();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:449:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  449 | inline constexpr auto min_v = static_cast<U>(values_v<E, IsFlags>.front());
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:452:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  452 | inline constexpr auto max_v = static_cast<U>(values_v<E, IsFlags>.back());
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:467:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  467 | inline constexpr auto range_size_v = range_size<E, IsFlags>();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:473:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  473 | inline constexpr auto invalid_index_v = (std::numeric_limits<index_t<E, IsFlags>>::max)();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:485:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  485 | inline constexpr auto indexes_v = indexes<E, IsFlags>(std::make_index_sequence<range_size_v<E, IsFlags>>{});
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr auto magic_enum::detail::names(std::index_sequence<I ...>)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:491:21: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  491 |   return std::array<string_view, sizeof...(I)>{{enum_name_v<E, values_v<E, IsFlags>[I]>...}};
      |                     ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:491:46: Fehler: Templateargument 1 ist ungÃ¼ltig
  491 |   return std::array<string_view, sizeof...(I)>{{enum_name_v<E, values_v<E, IsFlags>[I]>...}};
      |                                              ^
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:495:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  495 | inline constexpr auto names_v = names<E, IsFlags>(std::make_index_sequence<count_v<E, IsFlags>>{});
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr auto magic_enum::detail::entries(std::index_sequence<I ...>)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:504:34: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  504 |   return std::array<std::pair<E, string_view>, sizeof...(I)>{{{values_v<E, IsFlags>[I], enum_name_v<E, values_v<E, IsFlags>[I]>}...}};
      |                                  ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:504:45: Fehler: Templateargument 2 ist ungÃ¼ltig
  504 |   return std::array<std::pair<E, string_view>, sizeof...(I)>{{{values_v<E, IsFlags>[I], enum_name_v<E, values_v<E, IsFlags>[I]>}...}};
      |                                             ^
SHARED/magic_enum-master/include/magic_enum.hpp:504:60: Fehler: Templateargument 1 ist ungÃ¼ltig
  504 |   return std::array<std::pair<E, string_view>, sizeof...(I)>{{{values_v<E, IsFlags>[I], enum_name_v<E, values_v<E, IsFlags>[I]>}...}};
      |                                                            ^
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:508:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  508 | inline constexpr auto entries_v = entries<E, IsFlags>(std::make_index_sequence<count_v<E, IsFlags>>{});
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:521:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  521 | inline constexpr bool is_sparse_v = is_sparse<E, IsFlags>();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr std::size_t magic_enum::detail::undex(U)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:527:7: Warnung: Â»init-statement in AuswahlanweisungenÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  527 |   if (const auto i = static_cast<std::size_t>(value - min_v<E>); value >= min_v<E> && value <= max_v<E>) {
      |       ^~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:528:8: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  528 |     if constexpr (is_sparse_v<E>) {
      |        ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:529:11: Warnung: Â»init-statement in AuswahlanweisungenÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  529 |       if (const auto idx = indexes_v<E>[i]; idx != invalid_index_v<E>) {
      |           ^~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:579:55: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  579 | using enable_if_enum_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, false, T, R>::type;
      |                                                       ^~~~~~~~~
      |                                                       is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:579:55: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  579 | using enable_if_enum_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, false, T, R>::type;
      |                                                       ^~~~~~~~~
      |                                                       is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:579:79: Fehler: falsche Anzahl der Templateargumente (1, sollte 4 sein)
  579 | using enable_if_enum_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, false, T, R>::type;
      |                                                                               ^~
SHARED/magic_enum-master/include/magic_enum.hpp:560:8: Anmerkung: fÃ¼r Â»template<bool <anonymous>, bool <anonymous>, class T, class R> struct magic_enum::detail::enable_if_enumÂ« bereitgestellt
  560 | struct enable_if_enum {};
      |        ^~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:579:35: Fehler: Spezifikation mit geschachteltem Namen erwartet
  579 | using enable_if_enum_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, false, T, R>::type;
      |                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:582:61: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  582 | using enable_if_enum_flags_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, true, T, R>::type;
      |                                                             ^~~~~~~~~
      |                                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:582:61: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  582 | using enable_if_enum_flags_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, true, T, R>::type;
      |                                                             ^~~~~~~~~
      |                                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:582:85: Fehler: falsche Anzahl der Templateargumente (1, sollte 4 sein)
  582 | using enable_if_enum_flags_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, true, T, R>::type;
      |                                                                                     ^~
SHARED/magic_enum-master/include/magic_enum.hpp:560:8: Anmerkung: fÃ¼r Â»template<bool <anonymous>, bool <anonymous>, class T, class R> struct magic_enum::detail::enable_if_enumÂ« bereitgestellt
  560 | struct enable_if_enum {};
      |        ^~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:582:41: Fehler: Spezifikation mit geschachteltem Namen erwartet
  582 | using enable_if_enum_flags_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, true, T, R>::type;
      |                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:584:63: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  584 | template <typename T, typename Enable = std::enable_if_t<std::is_enum_v<std::decay_t<T>>>>
      |                                                               ^~~~~~~~~
      |                                                               is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:584:63: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  584 | template <typename T, typename Enable = std::enable_if_t<std::is_enum_v<std::decay_t<T>>>>
      |                                                               ^~~~~~~~~
      |                                                               is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:584:87: Fehler: Templateargument 1 ist ungÃ¼ltig
  584 | template <typename T, typename Enable = std::enable_if_t<std::is_enum_v<std::decay_t<T>>>>
      |                                                                                       ^~
SHARED/magic_enum-master/include/magic_enum.hpp:584:89: Fehler: expected Â»>Â« before Â»>>Â« token
  584 | template <typename T, typename Enable = std::enable_if_t<std::is_enum_v<std::decay_t<T>>>>
      |                                                                                         ^~
SHARED/magic_enum-master/include/magic_enum.hpp:587:35: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  587 | template <typename T, bool = std::is_enum_v<T>>
      |                                   ^~~~~~~~~
      |                                   is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:587:46: Fehler: expected primary-expression before Â»>>Â« token
  587 | template <typename T, bool = std::is_enum_v<T>>
      |                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:587:46: Fehler: expected Â»>Â« before Â»>>Â« token
SHARED/magic_enum-master/include/magic_enum.hpp:591:52: Fehler: expected template-name before Â»<Â« token
  591 | struct is_scoped_enum<T, true> : std::bool_constant<!std::is_convertible_v<T, std::underlying_type_t<T>>> {};
      |                                                    ^
SHARED/magic_enum-master/include/magic_enum.hpp:591:52: Fehler: expected Â»{Â« before Â»<Â« token
SHARED/magic_enum-master/include/magic_enum.hpp:593:35: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  593 | template <typename T, bool = std::is_enum_v<T>>
      |                                   ^~~~~~~~~
      |                                   is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:593:46: Fehler: expected primary-expression before Â»>>Â« token
  593 | template <typename T, bool = std::is_enum_v<T>>
      |                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:593:46: Fehler: expected Â»>Â« before Â»>>Â« token
SHARED/magic_enum-master/include/magic_enum.hpp:597:54: Fehler: expected template-name before Â»<Â« token
  597 | struct is_unscoped_enum<T, true> : std::bool_constant<std::is_convertible_v<T, std::underlying_type_t<T>>> {};
      |                                                      ^
SHARED/magic_enum-master/include/magic_enum.hpp:597:54: Fehler: expected Â»{Â« before Â»<Â« token
SHARED/magic_enum-master/include/magic_enum.hpp:599:35: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  599 | template <typename T, bool = std::is_enum_v<std::decay_t<T>>>
      |                                   ^~~~~~~~~
      |                                   is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:599:59: Fehler: expected primary-expression before Â»>Â« token
  599 | template <typename T, bool = std::is_enum_v<std::decay_t<T>>>
      |                                                           ^~
SHARED/magic_enum-master/include/magic_enum.hpp:599:61: Fehler: expected unqualified-id before Â»>Â« token
  599 | template <typename T, bool = std::is_enum_v<std::decay_t<T>>>
      |                                                             ^
SHARED/magic_enum-master/include/magic_enum.hpp:603:8: Fehler: Â»underlying_typeÂ« ist kein Klassentemplate
  603 | struct underlying_type<T, true> : std::underlying_type<std::decay_t<T>> {};
      |        ^~~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:608:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  608 | inline constexpr bool is_magic_enum_supported = detail::supported<void>::value;
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:611:36: Fehler: Templateargument 2 ist ungÃ¼ltig
  611 | using Enum = detail::enum_concept<T>;
      |                                    ^
SHARED/magic_enum-master/include/magic_enum.hpp:616:53: Fehler: Templateargument 2 ist ungÃ¼ltig
  616 | struct is_unscoped_enum : detail::is_unscoped_enum<T> {};
      |                                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:619:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  619 | inline constexpr bool is_unscoped_enum_v = is_unscoped_enum<T>::value;
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:624:49: Fehler: Templateargument 2 ist ungÃ¼ltig
  624 | struct is_scoped_enum : detail::is_scoped_enum<T> {};
      |                                                 ^
SHARED/magic_enum-master/include/magic_enum.hpp:627:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  627 | inline constexpr bool is_scoped_enum_v = is_scoped_enum<T>::value;
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:105: Fehler: Templateargument 1 ist ungÃ¼ltig
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                                         ^~
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:105: Fehler: Templateargument 1 ist ungÃ¼ltig
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                                         ^~
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:105: Fehler: Templateargument 1 ist ungÃ¼ltig
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                                         ^~
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:105: Fehler: Templateargument 1 ist ungÃ¼ltig
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                                         ^~
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:105: Fehler: Templateargument 1 ist ungÃ¼ltig
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                                         ^~
SHARED/magic_enum-master/include/magic_enum.hpp:639:59: Fehler: ungÃ¼ltige Verwendung des Template-Namens Â»std::enable_if_tÂ« ohne eine Argumentliste
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                           ^~~
In Datei, eingebunden von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/bits/move.h:57,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/bits/stl_pair.h:59,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/bits/stl_algobase.h:64,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/bits/char_traits.h:39,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/string:40,
                 von BackendConnector.h:5,
                 von BackendConnector.cpp:1:
/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/type_traits:2554:11: Anmerkung: Â»template<bool _Cond, class _Tp> using enable_if_t = typename std::enable_if::typeÂ« ist hier deklariert
 2554 |     using enable_if_t = typename enable_if<_Cond, _Tp>::type;
      |           ^~~~~~~~~~~
In Datei, eingebunden von BackendConnector.h:23,
                 von BackendConnector.cpp:1:
SHARED/magic_enum-master/include/magic_enum.hpp:639:75: Fehler: expected initializer before Â»<Â« token
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                           ^
SHARED/magic_enum-master/include/magic_enum.hpp:649:63: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  649 | [[nodiscard]] constexpr auto enum_count() noexcept -> detail::enable_if_enum_t<E, std::size_t> {
      |                                                               ^~~~~~~~~~~~~~~~
      |                                                               enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:649:79: Fehler: expected initializer before Â»<Â« token
  649 | [[nodiscard]] constexpr auto enum_count() noexcept -> detail::enable_if_enum_t<E, std::size_t> {
      |                                                                               ^
SHARED/magic_enum-master/include/magic_enum.hpp:658:80: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  658 | [[nodiscard]] constexpr auto enum_value(std::size_t index) noexcept -> detail::enable_if_enum_t<E, std::decay_t<E>> {
      |                                                                                ^~~~~~~~~~~~~~~~
      |                                                                                enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:658:96: Fehler: expected initializer before Â»<Â« token
  658 | [[nodiscard]] constexpr auto enum_value(std::size_t index) noexcept -> detail::enable_if_enum_t<E, std::decay_t<E>> {
      |                                                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:670:64: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  670 | [[nodiscard]] constexpr auto enum_values() noexcept -> detail::enable_if_enum_t<E, detail::values_t<E>> {
      |                                                                ^~~~~~~~~~~~~~~~
      |                                                                enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:670:80: Fehler: expected initializer before Â»<Â« token
  670 | [[nodiscard]] constexpr auto enum_values() noexcept -> detail::enable_if_enum_t<E, detail::values_t<E>> {
      |                                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:678:11: Fehler: Â»autoÂ«-Parameter darf in diesem Kontext nicht verwendet werden
  678 | template <auto V>
      |           ^~~~
SHARED/magic_enum-master/include/magic_enum.hpp:679:76: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  679 | [[nodiscard]] constexpr auto enum_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<decltype(V)>>, string_view> {
      |                                                                            ^~~~~~~~~
      |                                                                            is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:679:76: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  679 | [[nodiscard]] constexpr auto enum_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<decltype(V)>>, string_view> {
      |                                                                            ^~~~~~~~~
      |                                                                            is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:679:99: Fehler: Templateargument 1 ist ungÃ¼ltig
  679 | [[nodiscard]] constexpr auto enum_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<decltype(V)>>, string_view> {
      |                                                                                                   ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:679:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  679 | [[nodiscard]] constexpr auto enum_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<decltype(V)>>, string_view> {
      |                                                                                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:690:69: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  690 | [[nodiscard]] constexpr auto enum_name(E value) noexcept -> detail::enable_if_enum_t<E, string_view> {
      |                                                                     ^~~~~~~~~~~~~~~~
      |                                                                     enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:690:85: Fehler: expected initializer before Â»<Â« token
  690 | [[nodiscard]] constexpr auto enum_name(E value) noexcept -> detail::enable_if_enum_t<E, string_view> {
      |                                                                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:702:63: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  702 | [[nodiscard]] constexpr auto enum_names() noexcept -> detail::enable_if_enum_t<E, detail::names_t<E>> {
      |                                                               ^~~~~~~~~~~~~~~~
      |                                                               enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:702:79: Fehler: expected initializer before Â»<Â« token
  702 | [[nodiscard]] constexpr auto enum_names() noexcept -> detail::enable_if_enum_t<E, detail::names_t<E>> {
      |                                                                               ^
SHARED/magic_enum-master/include/magic_enum.hpp:710:65: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  710 | [[nodiscard]] constexpr auto enum_entries() noexcept -> detail::enable_if_enum_t<E, detail::entries_t<E>> {
      |                                                                 ^~~~~~~~~~~~~~~~
      |                                                                 enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:710:81: Fehler: expected initializer before Â»<Â« token
  710 | [[nodiscard]] constexpr auto enum_entries() noexcept -> detail::enable_if_enum_t<E, detail::entries_t<E>> {
      |                                                                                 ^
SHARED/magic_enum-master/include/magic_enum.hpp:719:88: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  719 | [[nodiscard]] constexpr auto enum_cast(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                                                        ^~~~~~~~~~~~~~~~
      |                                                                                        enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:719:104: Fehler: expected initializer before Â»<Â« token
  719 | [[nodiscard]] constexpr auto enum_cast(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:732:40: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:732:40: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
SHARED/magic_enum-master/include/magic_enum.hpp:732:75: Fehler: expected primary-expression before Â»pÂ«
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                                           ^
SHARED/magic_enum-master/include/magic_enum.hpp:732:76: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                                            ^
SHARED/magic_enum-master/include/magic_enum.hpp:732:77: Fehler: expected Â»;Â« before Â»noexceptÂ«
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                                             ^~~~~~~~~
      |                                                                             ;
SHARED/magic_enum-master/include/magic_enum.hpp:748:40: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
  748 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:748:40: Fehler: Redeklaration von Â»template<class E> constexpr const auto magic_enum::enum_castÂ«
SHARED/magic_enum-master/include/magic_enum.hpp:732:30: Anmerkung: vorherige Deklaration von Â»template<class E, class BinaryPredicate> constexpr<typeprefixerror> magic_enum::enum_cast<E, BinaryPredicate>Â«
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                              ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:748:40: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  748 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:748:58: Fehler: expected Â»;Â« before Â»noexceptÂ«
  748 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                          ^~~~~~~~~
      |                                                          ;
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:756:64: Fehler: ungÃ¼ltige Verwendung des Template-Namens Â»std::enable_if_tÂ« ohne eine Argumentliste
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                ^~~
In Datei, eingebunden von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/bits/move.h:57,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/bits/stl_pair.h:59,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/bits/stl_algobase.h:64,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/bits/char_traits.h:39,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/string:40,
                 von BackendConnector.h:5,
                 von BackendConnector.cpp:1:
/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/type_traits:2554:11: Anmerkung: Â»template<bool _Cond, class _Tp> using enable_if_t = typename std::enable_if::typeÂ« ist hier deklariert
 2554 |     using enable_if_t = typename enable_if<_Cond, _Tp>::type;
      |           ^~~~~~~~~~~
In Datei, eingebunden von BackendConnector.h:23,
                 von BackendConnector.cpp:1:
SHARED/magic_enum-master/include/magic_enum.hpp:756:80: Fehler: expected initializer before Â»<Â« token
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:763:70: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  763 | [[nodiscard]] constexpr auto enum_index(E value) noexcept -> detail::enable_if_enum_t<E, optional<std::size_t>> {
      |                                                                      ^~~~~~~~~~~~~~~~
      |                                                                      enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:763:86: Fehler: expected initializer before Â»<Â« token
  763 | [[nodiscard]] constexpr auto enum_index(E value) noexcept -> detail::enable_if_enum_t<E, optional<std::size_t>> {
      |                                                                                      ^
SHARED/magic_enum-master/include/magic_enum.hpp:775:73: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  775 | [[nodiscard]] constexpr auto enum_contains(E value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                                                         ^~~~~~~~~~~~~~~~
      |                                                                         enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:775:89: Fehler: expected initializer before Â»<Â« token
  775 | [[nodiscard]] constexpr auto enum_contains(E value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                                                                         ^
SHARED/magic_enum-master/include/magic_enum.hpp:783:92: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  783 | [[nodiscard]] constexpr auto enum_contains(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                                                                            ^~~~~~~~~~~~~~~~
      |                                                                                            enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:783:108: Fehler: expected initializer before Â»<Â« token
  783 | [[nodiscard]] constexpr auto enum_contains(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                                                                                            ^
SHARED/magic_enum-master/include/magic_enum.hpp:791:44: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
  791 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:791:44: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
SHARED/magic_enum-master/include/magic_enum.hpp:791:79: Fehler: expected primary-expression before Â»pÂ«
  791 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, bool> {
      |                                                                               ^
SHARED/magic_enum-master/include/magic_enum.hpp:791:80: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
  791 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, bool> {
      |                                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:791:81: Fehler: expected Â»;Â« before Â»noexceptÂ«
  791 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, bool> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 ;
SHARED/magic_enum-master/include/magic_enum.hpp:800:44: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
  800 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:800:44: Fehler: Redeklaration von Â»template<class E> constexpr const auto magic_enum::enum_containsÂ«
SHARED/magic_enum-master/include/magic_enum.hpp:791:30: Anmerkung: vorherige Deklaration von Â»template<class E, class BinaryPredicate> constexpr<typeprefixerror> magic_enum::enum_contains<E, BinaryPredicate>Â«
  791 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, bool> {
      |                              ^~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:800:44: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  800 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:800:62: Fehler: expected Â»;Â« before Â»noexceptÂ«
  800 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                                              ^~~~~~~~~
      |                                                              ;
SHARED/magic_enum-master/include/magic_enum.hpp:808:77: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  808 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                             ^~~~~~~~~
      |                                                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:808:77: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  808 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                             ^~~~~~~~~
      |                                                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:808:88: Fehler: Templateargument 1 ist ungÃ¼ltig
  808 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:808:96: Fehler: expected unqualified-id before Â»=Â« token
  808 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:823:77: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  823 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                             ^~~~~~~~~
      |                                                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:823:77: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  823 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                             ^~~~~~~~~
      |                                                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:823:88: Fehler: Templateargument 1 ist ungÃ¼ltig
  823 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:823:96: Fehler: expected unqualified-id before Â»=Â« token
  823 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:832:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  832 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:832:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  832 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:832:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  832 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:832:64: Fehler: expected unqualified-id before Â»=Â« token
  832 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:837:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  837 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:837:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  837 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:837:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  837 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:837:64: Fehler: expected unqualified-id before Â»=Â« token
  837 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:842:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  842 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:842:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  842 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:842:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  842 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:842:64: Fehler: expected unqualified-id before Â»=Â« token
  842 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:847:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  847 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:847:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  847 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:847:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  847 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:847:64: Fehler: expected unqualified-id before Â»=Â« token
  847 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:852:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  852 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:852:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  852 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:852:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  852 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:852:64: Fehler: expected unqualified-id before Â»=Â« token
  852 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:857:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  857 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:857:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  857 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:857:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  857 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:857:64: Fehler: expected unqualified-id before Â»=Â« token
  857 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:862:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  862 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:862:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  862 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:862:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  862 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:862:64: Fehler: expected unqualified-id before Â»=Â« token
  862 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:872:19: Fehler: Â»enum_type_nameÂ« wurde nicht innerhalb von Â»magic_enumÂ« deklariert
  872 | using magic_enum::enum_type_name;
      |                   ^~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:876:63: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  876 | [[nodiscard]] constexpr auto enum_count() noexcept -> detail::enable_if_enum_flags_t<E, std::size_t> {
      |                                                               ^~~~~~~~~~~~~~~~~~~~~~
      |                                                               enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:876:85: Fehler: expected initializer before Â»<Â« token
  876 | [[nodiscard]] constexpr auto enum_count() noexcept -> detail::enable_if_enum_flags_t<E, std::size_t> {
      |                                                                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:885:80: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  885 | [[nodiscard]] constexpr auto enum_value(std::size_t index) noexcept -> detail::enable_if_enum_flags_t<E, std::decay_t<E>> {
      |                                                                                ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                                enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:885:102: Fehler: expected initializer before Â»<Â« token
  885 | [[nodiscard]] constexpr auto enum_value(std::size_t index) noexcept -> detail::enable_if_enum_flags_t<E, std::decay_t<E>> {
      |                                                                                                      ^
SHARED/magic_enum-master/include/magic_enum.hpp:899:64: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  899 | [[nodiscard]] constexpr auto enum_values() noexcept -> detail::enable_if_enum_flags_t<E, detail::values_t<E, true>> {
      |                                                                ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:899:86: Fehler: expected initializer before Â»<Â« token
  899 | [[nodiscard]] constexpr auto enum_values() noexcept -> detail::enable_if_enum_flags_t<E, detail::values_t<E, true>> {
      |                                                                                      ^
SHARED/magic_enum-master/include/magic_enum.hpp:908:50: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  908 | [[nodiscard]] auto enum_name(E value) -> detail::enable_if_enum_flags_t<E, string> {
      |                                                  ^~~~~~~~~~~~~~~~~~~~~~
      |                                                  enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:908:72: Fehler: expected initializer before Â»<Â« token
  908 | [[nodiscard]] auto enum_name(E value) -> detail::enable_if_enum_flags_t<E, string> {
      |                                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:934:63: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  934 | [[nodiscard]] constexpr auto enum_names() noexcept -> detail::enable_if_enum_flags_t<E, detail::names_t<E, true>> {
      |                                                               ^~~~~~~~~~~~~~~~~~~~~~
      |                                                               enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:934:85: Fehler: expected initializer before Â»<Â« token
  934 | [[nodiscard]] constexpr auto enum_names() noexcept -> detail::enable_if_enum_flags_t<E, detail::names_t<E, true>> {
      |                                                                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:942:65: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  942 | [[nodiscard]] constexpr auto enum_entries() noexcept -> detail::enable_if_enum_flags_t<E, detail::entries_t<E, true>> {
      |                                                                 ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                 enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:942:87: Fehler: expected initializer before Â»<Â« token
  942 | [[nodiscard]] constexpr auto enum_entries() noexcept -> detail::enable_if_enum_flags_t<E, detail::entries_t<E, true>> {
      |                                                                                       ^
SHARED/magic_enum-master/include/magic_enum.hpp:951:88: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  951 | [[nodiscard]] constexpr auto enum_cast(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                                                        ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                                        enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:951:110: Fehler: expected initializer before Â»<Â« token
  951 | [[nodiscard]] constexpr auto enum_cast(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                                                                              ^
SHARED/magic_enum-master/include/magic_enum.hpp:981:40: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
  981 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:981:40: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
SHARED/magic_enum-master/include/magic_enum.hpp:981:75: Fehler: expected primary-expression before Â»pÂ«
  981 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                                           ^
SHARED/magic_enum-master/include/magic_enum.hpp:981:76: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
  981 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                                            ^
SHARED/magic_enum-master/include/magic_enum.hpp:981:77: Fehler: expected Â»;Â« before Â»noexceptÂ«
  981 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                                             ^~~~~~~~~
      |                                                                             ;
SHARED/magic_enum-master/include/magic_enum.hpp:1014:40: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
 1014 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1014:40: Fehler: Redeklaration von Â»template<class E> constexpr const auto magic_enum::flags::enum_castÂ«
SHARED/magic_enum-master/include/magic_enum.hpp:981:30: Anmerkung: vorherige Deklaration von Â»template<class E, class BinaryPredicate> constexpr<typeprefixerror> magic_enum::flags::enum_cast<E, BinaryPredicate>Â«
  981 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                              ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1014:40: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
 1014 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1014:58: Fehler: expected Â»;Â« before Â»noexceptÂ«
 1014 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                          ^~~~~~~~~
      |                                                          ;
SHARED/magic_enum-master/include/magic_enum.hpp:1021:19: Fehler: Â»enum_integerÂ« wurde nicht innerhalb von Â»magic_enumÂ« deklariert
 1021 | using magic_enum::enum_integer;
      |                   ^~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1026:70: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
 1026 | [[nodiscard]] constexpr auto enum_index(E value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::size_t>> {
      |                                                                      ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                      enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:1026:92: Fehler: expected initializer before Â»<Â« token
 1026 | [[nodiscard]] constexpr auto enum_index(E value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::size_t>> {
      |                                                                                            ^
SHARED/magic_enum-master/include/magic_enum.hpp:1043:73: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
 1043 | [[nodiscard]] constexpr auto enum_contains(E value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                         ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                         enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:1043:95: Fehler: expected initializer before Â»<Â« token
 1043 | [[nodiscard]] constexpr auto enum_contains(E value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                                               ^
SHARED/magic_enum-master/include/magic_enum.hpp:1052:92: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
 1052 | [[nodiscard]] constexpr auto enum_contains(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                                            ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                                            enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:1052:114: Fehler: expected initializer before Â»<Â« token
 1052 | [[nodiscard]] constexpr auto enum_contains(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                                                                  ^
SHARED/magic_enum-master/include/magic_enum.hpp:1060:44: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
 1060 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1060:44: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
SHARED/magic_enum-master/include/magic_enum.hpp:1060:79: Fehler: expected primary-expression before Â»pÂ«
 1060 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                               ^
SHARED/magic_enum-master/include/magic_enum.hpp:1060:80: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
 1060 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:1060:81: Fehler: expected Â»;Â« before Â»noexceptÂ«
 1060 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 ;
SHARED/magic_enum-master/include/magic_enum.hpp:1069:44: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
 1069 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1069:44: Fehler: Redeklaration von Â»template<class E> constexpr const auto magic_enum::flags::enum_containsÂ«
SHARED/magic_enum-master/include/magic_enum.hpp:1060:30: Anmerkung: vorherige Deklaration von Â»template<class E, class BinaryPredicate> constexpr<typeprefixerror> magic_enum::flags::enum_contains<E, BinaryPredicate>Â«
 1060 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, bool> {
      |                              ^~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1069:44: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
 1069 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1069:62: Fehler: expected Â»;Â« before Â»noexceptÂ«
 1069 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                              ^~~~~~~~~
      |                                                              ;
SHARED/magic_enum-master/include/magic_enum.hpp:1079:63: Fehler: Â»magic_enum::detail::enable_if_enum_flags_tÂ« wurde nicht deklariert
 1079 | template <typename Char, typename Traits, typename E, detail::enable_if_enum_flags_t<E, int> = 0>
      |                                                               ^~~~~~~~~~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1079:85: Fehler: expected Â»>Â« before Â»<Â« token
 1079 | template <typename Char, typename Traits, typename E, detail::enable_if_enum_flags_t<E, int> = 0>
      |                                                                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»std::basic_ostream<_CharT, _Traits>& magic_enum::flags::ostream_operators::operator<<(std::basic_ostream<_CharT, _Traits>&, E)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:1084:7: Warnung: Â»init-statement in AuswahlanweisungenÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
 1084 |   if (const auto name = magic_enum::flags::enum_name<D>(value); !name.empty()) {
      |       ^~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1084:44: Fehler: Â»enum_nameÂ« ist kein Element von Â»magic_enum::flagsÂ«; meinten Sie Â»enum_castÂ«?
 1084 |   if (const auto name = magic_enum::flags::enum_name<D>(value); !name.empty()) {
      |                                            ^~~~~~~~~
      |                                            enum_cast
SHARED/magic_enum-master/include/magic_enum.hpp:1084:55: Fehler: expected primary-expression before Â»>Â« token
 1084 |   if (const auto name = magic_enum::flags::enum_name<D>(value); !name.empty()) {
      |                                                       ^
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:1094:63: Fehler: Â»magic_enum::detail::enable_if_enum_flags_tÂ« wurde nicht deklariert
 1094 | template <typename Char, typename Traits, typename E, detail::enable_if_enum_flags_t<E, int> = 0>
      |                                                               ^~~~~~~~~~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1094:85: Fehler: expected Â»>Â« before Â»<Â« token
 1094 | template <typename Char, typename Traits, typename E, detail::enable_if_enum_flags_t<E, int> = 0>
      |                                                                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:1095:84: Fehler: Â»optionalÂ« wurde nicht deklariert
 1095 | std::basic_ostream<Char, Traits>& operator<<(std::basic_ostream<Char, Traits>& os, optional<E> value) {
      |                                                                                    ^~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1095:92: Fehler: expected Â»,Â« or Â»...Â« before Â»<Â« token
 1095 | std::basic_ostream<Char, Traits>& operator<<(std::basic_ostream<Char, Traits>& os, optional<E> value) {
      |                                                                                            ^
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»std::basic_ostream<_CharT, _Traits>& magic_enum::flags::ostream_operators::operator<<(std::basic_ostream<_CharT, _Traits>&, int)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:1096:10: Fehler: Â»valueÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht deklariert; meinten Sie Â»magic_enum::detail::valueÂ«?
 1096 |   return value.has_value() ? (os << value.value()) : os;
      |          ^~~~~
      |          magic_enum::detail::value
SHARED/magic_enum-master/include/magic_enum.hpp:395:13: Anmerkung: Â»magic_enum::detail::valueÂ« ist hier deklariert
  395 | constexpr E value(std::size_t i) noexcept {
      |             ^~~~~
BackendConnector.cpp: In Elementfunktion Â»BackendConnector::PLAYER_STATUS BackendConnector::get_player_state()Â«:
BackendConnector.cpp:125:28: Fehler: falsche Anzahl der Templateargumente (1, sollte 2 sein)
  125 |     auto val = magic_enum::enum_cast<PLAYER_STATE>(mm_detailed["player_state"].int_value());
      |                            ^~~~~~~~~~~~~~~~~~~~~~~
In Datei, eingebunden von BackendConnector.h:23,
                 von BackendConnector.cpp:1:
SHARED/magic_enum-master/include/magic_enum.hpp:732:30: Anmerkung: fÃ¼r Â»template<class E, class BinaryPredicate> constexpr<typeprefixerror> magic_enum::enum_cast<E, BinaryPredicate>Â« bereitgestellt
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                              ^~~~~~~~~
BackendConnector.cpp: In Elementfunktion Â»bool BackendConnector::set_player_setup_confirmation(BackendConnector::PLAYER_SETUP_STATE)Â«:
BackendConnector.cpp:244:32: Fehler: Â»enum_integerÂ« ist kein Element von Â»magic_enumÂ«
  244 |  int state_index = magic_enum::enum_integer(_state);
      |                                ^~~~~~~~~~~~
BackendConnector.cpp: In Elementfunktion Â»bool BackendConnector::set_player_state(BackendConnector::PLAYER_STATE)Â«:
BackendConnector.cpp:287:29: Fehler: Â»enum_integerÂ« ist kein Element von Â»magic_enumÂ«
  287 |  int ps_index = magic_enum::enum_integer(_ps);
      |                             ^~~~~~~~~~~~
Makefile:212: recipe for target 'Debug/BackendConnector.o' failed
make[1]: *** [Debug/BackendConnector.o] Error 1
In Datei, eingebunden von SHARED/guicommunicator/guicommunicator.h:22,
                 von controller.cpp:25:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:99:23: Fehler: Â»optionalÂ« in Namensraum Â»stdÂ« bezeichnet keinen Templatetyp
   99 | using optional = std::optional<T>;
      |                       ^~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:99:18: Anmerkung: Â»std::optionalÂ« ist erst ab C++17 verfÃ¼gbar
   99 | using optional = std::optional<T>;
      |                  ^~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:106:26: Fehler: Â»string_viewÂ« in Namensbereich Â»stdÂ« bezeichnet keinen Typ
  106 | using string_view = std::string_view;
      |                          ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:106:21: Anmerkung: Â»std::string_viewÂ« ist erst ab C++17 verfÃ¼gbar
  106 | using string_view = std::string_view;
      |                     ^~~
In Datei, eingebunden von SHARED/guicommunicator/guicommunicator.h:22,
                 von controller.cpp:25:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:123:22: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  123 |   static_assert(std::is_enum_v<E>, "magic_enum::customize::enum_range requires enum type.");
      |                      ^~~~~~~~~
      |                      is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:123:33: Fehler: expected primary-expression before Â»>Â« token
  123 |   static_assert(std::is_enum_v<E>, "magic_enum::customize::enum_range requires enum type.");
      |                                 ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:123:34: Fehler: expected primary-expression before Â»,Â« token
  123 |   static_assert(std::is_enum_v<E>, "magic_enum::customize::enum_range requires enum type.");
      |                                  ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:124:3: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  124 |   inline static constexpr int min = MAGIC_ENUM_RANGE_MIN;
      |   ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:125:3: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  125 |   inline static constexpr int max = MAGIC_ENUM_RANGE_MAX;
      |   ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:139:11: Fehler: Â»string_viewÂ« bezeichnet keinen Typ
  139 | constexpr string_view enum_name(E) noexcept {
      |           ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:159:47: Fehler: expected Â»)Â« before Â»strÂ«
  159 |   constexpr explicit static_string(string_view str) noexcept : static_string{str, std::make_index_sequence<N>{}} {
      |                                   ~           ^~~~
      |                                               )
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:159:114: Fehler: expected unqualified-id before Â»{Â« token
  159 |   constexpr explicit static_string(string_view str) noexcept : static_string{str, std::make_index_sequence<N>{}} {
      |                                                                                                                  ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:167:22: Fehler: expected type-specifier before Â»string_viewÂ«
  167 |   constexpr operator string_view() const noexcept { return {data(), size()}; }
      |                      ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:171:38: Fehler: expected Â»)Â« before Â»strÂ«
  171 |   constexpr static_string(string_view str, std::index_sequence<I...>) noexcept : chars{{str[I]..., '\0'}} {}
      |                          ~           ^~~~
      |                                      )
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:171:107: Fehler: expected unqualified-id before Â»{Â« token
  171 |   constexpr static_string(string_view str, std::index_sequence<I...>) noexcept : chars{{str[I]..., '\0'}} {}
      |                                                                                                           ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:178:13: Fehler: nur Deklarationen von Konstruktoren und Umwandlungsoperatoren kÃ¶nnen Â»explicitÂ« sein
  178 |   constexpr explicit static_string(string_view) noexcept {}
      |             ^~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:178:36: Fehler: Feld Â»string_viewÂ« hat unvollstÃ¤ndigen Typen Â»const magic_enum::detail::static_string<0>Â«
  178 |   constexpr explicit static_string(string_view) noexcept {}
      |                                    ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:177:8: Anmerkung: Definition von Â»struct magic_enum::detail::static_string<0>Â« ist erst nach der schlieÃŸenden Klammer vollendet
  177 | struct static_string<0> {
      |        ^~~~~~~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:178:3: Fehler: nicht-statisches Datenelement Â»string_viewÂ« als Â»constexprÂ« deklariert
  178 |   constexpr explicit static_string(string_view) noexcept {}
      |   ^~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:178:47: Fehler: Â»;Â« am Ende von Elementdeklaration erwartet
  178 |   constexpr explicit static_string(string_view) noexcept {}
      |                                               ^
      |                                                ;
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:178:49: Fehler: expected unqualified-id before Â»noexceptÂ«
  178 |   constexpr explicit static_string(string_view) noexcept {}
      |                                                 ^~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:184:22: Fehler: expected type-specifier before Â»string_viewÂ«
  184 |   constexpr operator string_view() const noexcept { return {}; }
      |                      ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:193:11: Fehler: Â»string_viewÂ« bezeichnet keinen Typ
  193 | constexpr string_view pretty_name(string_view name) noexcept {
      |           ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:213:28: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  213 | constexpr std::size_t find(string_view str, char c) noexcept {
      |                            ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:213:45: Fehler: expected primary-expression before Â»charÂ«
  213 | constexpr std::size_t find(string_view str, char c) noexcept {
      |                                             ^~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:213:51: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
  213 | constexpr std::size_t find(string_view str, char c) noexcept {
      |                                                   ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:235:26: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                          ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:235:43: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                                           ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:235:75: Fehler: expected primary-expression before Â»&&Â« token
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                                                                           ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:235:78: Fehler: Â»pÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                                                                              ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:235:79: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                                                                               ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:235:80: Fehler: expected Â»;Â« before Â»noexceptÂ«
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                                                                                ^~~~~~~~~
      |                                                                                ;
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr bool magic_enum::detail::cmp_less(L, R)Â«:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:264:22: Fehler: Â»is_integral_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_integralÂ«?
  264 |   static_assert(std::is_integral_v<L> && std::is_integral_v<R>, "magic_enum::detail::cmp_less requires integral type.");
      |                      ^~~~~~~~~~~~~
      |                      is_integral
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:264:37: Fehler: expected primary-expression before Â»>Â« token
  264 |   static_assert(std::is_integral_v<L> && std::is_integral_v<R>, "magic_enum::detail::cmp_less requires integral type.");
      |                                     ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:264:45: Fehler: expected Â»,Â« before Â»::Â« token
  264 |   static_assert(std::is_integral_v<L> && std::is_integral_v<R>, "magic_enum::detail::cmp_less requires integral type.");
      |                                             ^~
      |                                             ,
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:264:45: Fehler: expected string-literal before Â»::Â« token
  264 |   static_assert(std::is_integral_v<L> && std::is_integral_v<R>, "magic_enum::detail::cmp_less requires integral type.");
      |                                             ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:264:45: Fehler: expected Â»)Â« before Â»::Â« token
  264 |   static_assert(std::is_integral_v<L> && std::is_integral_v<R>, "magic_enum::detail::cmp_less requires integral type.");
      |                ~                            ^~
      |                                             )
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:266:6: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |      ^~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:266:22: Fehler: Â»is_signed_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_signedÂ«?
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                      ^~~~~~~~~~~
      |                      is_signed
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:266:35: Fehler: expected primary-expression before Â»>Â« token
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                                   ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:266:37: Fehler: expected primary-expression before Â»==Â« token
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                                     ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:266:45: Fehler: Â»is_signed_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_signedÂ«?
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                                             ^~~~~~~~~~~
      |                                             is_signed
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:266:58: Fehler: expected primary-expression before Â»>Â« token
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                                                          ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:266:59: Fehler: expected primary-expression before Â»)Â« token
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                                                           ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:269:13: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  269 |   } else if constexpr (std::is_signed_v<R>) {
      |             ^~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:269:29: Fehler: Â»is_signed_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_signedÂ«?
  269 |   } else if constexpr (std::is_signed_v<R>) {
      |                             ^~~~~~~~~~~
      |                             is_signed
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:269:42: Fehler: expected primary-expression before Â»>Â« token
  269 |   } else if constexpr (std::is_signed_v<R>) {
      |                                          ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:269:43: Fehler: expected primary-expression before Â»)Â« token
  269 |   } else if constexpr (std::is_signed_v<R>) {
      |                                           ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr I magic_enum::detail::log2(I)Â«:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:280:22: Fehler: Â»is_integral_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_integralÂ«?
  280 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::log2 requires integral type.");
      |                      ^~~~~~~~~~~~~
      |                      is_integral
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:280:37: Fehler: expected primary-expression before Â»>Â« token
  280 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::log2 requires integral type.");
      |                                     ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:280:38: Fehler: expected primary-expression before Â»,Â« token
  280 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::log2 requires integral type.");
      |                                      ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr bool magic_enum::detail::is_pow2(I)Â«:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:290:22: Fehler: Â»is_integral_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_integralÂ«?
  290 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::is_pow2 requires integral type.");
      |                      ^~~~~~~~~~~~~
      |                      is_integral
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:290:37: Fehler: expected primary-expression before Â»>Â« token
  290 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::is_pow2 requires integral type.");
      |                                     ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:290:38: Fehler: expected primary-expression before Â»,Â« token
  290 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::is_pow2 requires integral type.");
      |                                      ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:296:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  296 | inline constexpr bool is_enum_v = std::is_enum_v<T> && std::is_same_v<T, std::decay_t<T>>;
      | ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:296:40: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  296 | inline constexpr bool is_enum_v = std::is_enum_v<T> && std::is_same_v<T, std::decay_t<T>>;
      |                                        ^~~~~~~~~
      |                                        is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:296:51: Fehler: expected primary-expression before Â»>Â« token
  296 | inline constexpr bool is_enum_v = std::is_enum_v<T> && std::is_same_v<T, std::decay_t<T>>;
      |                                                   ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:296:56: Fehler: Marke Â»stdÂ« auÃŸerhalb einer Funktion referenziert
  296 | inline constexpr bool is_enum_v = std::is_enum_v<T> && std::is_same_v<T, std::decay_t<T>>;
      |                                                        ^~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr auto magic_enum::detail::n()Â«:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:305:13: Fehler: Â»string_viewÂ« bezeichnet keinen Typ
  305 |   constexpr string_view name{__PRETTY_FUNCTION__ + 49, sizeof(__PRETTY_FUNCTION__) - 51};
      |             ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:309:24: Fehler: Â»nameÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  309 |   return static_string<name.size()>{name};
      |                        ^~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:309:35: Fehler: Templateargument 1 ist ungÃ¼ltig
  309 |   return static_string<name.size()>{name};
      |                                   ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:316:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  316 | inline constexpr auto type_name_v = n<E>();
      | ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr auto magic_enum::detail::n()Â«:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:321:43: Fehler: Â»enum_nameÂ« ist kein Element von Â»magic_enum::customizeÂ«; meinten Sie Â»enum_rangeÂ«?
  321 |   constexpr auto custom_name = customize::enum_name<E>(V);
      |                                           ^~~~~~~~~
      |                                           enum_range
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:321:54: Fehler: expected primary-expression before Â»>Â« token
  321 |   constexpr auto custom_name = customize::enum_name<E>(V);
      |                                                      ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:323:6: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  323 |   if constexpr (custom_name.empty()) {
      |      ^~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:341:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  341 | inline constexpr auto enum_name_v = n<E, V>();
      | ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:343:23: Fehler: Â»autoÂ«-Parameter darf in diesem Kontext nicht verwendet werden
  343 | template <typename E, auto V>
      |                       ^~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr int magic_enum::detail::reflected_min()Â«:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:354:6: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  354 |   if constexpr (IsFlags) {
      |      ^~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:361:8: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  361 |     if constexpr (cmp_less(lhs, rhs)) {
      |        ^~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr int magic_enum::detail::reflected_max()Â«:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:373:6: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  373 |   if constexpr (IsFlags) {
      |      ^~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:380:8: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  380 |     if constexpr (cmp_less(lhs, rhs)) {
      |        ^~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:389:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  389 | inline constexpr auto reflected_min_v = reflected_min<E, IsFlags>();
      | ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:392:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  392 | inline constexpr auto reflected_max_v = reflected_max<E, IsFlags>();
      | ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr E magic_enum::detail::value(std::size_t)Â«:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:398:6: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  398 |   if constexpr (IsFlags) {
      |      ^~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr auto magic_enum::detail::values(std::index_sequence<I ...>)Â«:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:409:62: Fehler: Â»constexprÂ«-Lambda ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  409 |   constexpr std::size_t count = [](decltype((valid)) valid_) constexpr noexcept -> std::size_t {
      |                                                              ^~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:419:22: Fehler: der Wert von Â»countÂ« ist in konstantem Ausdruck nicht verwendbar
  419 |   std::array<E, count> values{};
      |                      ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:409:25: Anmerkung: Â»countÂ« in seiner eigenen Initialisierung verwendet
  409 |   constexpr std::size_t count = [](decltype((valid)) valid_) constexpr noexcept -> std::size_t {
      |                         ^~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:419:22: Anmerkung: in Templateargument fÃ¼r Typ Â»unsigned intÂ«
  419 |   std::array<E, count> values{};
      |                      ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:422:13: Fehler: ungÃ¼ltige Typen Â»int[std::size_t {aka unsigned int}]Â« fÃ¼r Feldindex
  422 |       values[v++] = value<E, Min, IsFlags>(i);
      |             ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:440:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  440 | inline constexpr auto values_v = values<E, IsFlags>();
      | ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:446:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  446 | inline constexpr auto count_v = values_v<E, IsFlags>.size();
      | ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:449:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  449 | inline constexpr auto min_v = static_cast<U>(values_v<E, IsFlags>.front());
      | ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:452:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  452 | inline constexpr auto max_v = static_cast<U>(values_v<E, IsFlags>.back());
      | ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:467:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  467 | inline constexpr auto range_size_v = range_size<E, IsFlags>();
      | ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:473:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  473 | inline constexpr auto invalid_index_v = (std::numeric_limits<index_t<E, IsFlags>>::max)();
      | ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:485:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  485 | inline constexpr auto indexes_v = indexes<E, IsFlags>(std::make_index_sequence<range_size_v<E, IsFlags>>{});
      | ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr auto magic_enum::detail::names(std::index_sequence<I ...>)Â«:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:491:21: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  491 |   return std::array<string_view, sizeof...(I)>{{enum_name_v<E, values_v<E, IsFlags>[I]>...}};
      |                     ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:491:46: Fehler: Templateargument 1 ist ungÃ¼ltig
  491 |   return std::array<string_view, sizeof...(I)>{{enum_name_v<E, values_v<E, IsFlags>[I]>...}};
      |                                              ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:495:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  495 | inline constexpr auto names_v = names<E, IsFlags>(std::make_index_sequence<count_v<E, IsFlags>>{});
      | ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr auto magic_enum::detail::entries(std::index_sequence<I ...>)Â«:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:504:34: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  504 |   return std::array<std::pair<E, string_view>, sizeof...(I)>{{{values_v<E, IsFlags>[I], enum_name_v<E, values_v<E, IsFlags>[I]>}...}};
      |                                  ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:504:45: Fehler: Templateargument 2 ist ungÃ¼ltig
  504 |   return std::array<std::pair<E, string_view>, sizeof...(I)>{{{values_v<E, IsFlags>[I], enum_name_v<E, values_v<E, IsFlags>[I]>}...}};
      |                                             ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:504:60: Fehler: Templateargument 1 ist ungÃ¼ltig
  504 |   return std::array<std::pair<E, string_view>, sizeof...(I)>{{{values_v<E, IsFlags>[I], enum_name_v<E, values_v<E, IsFlags>[I]>}...}};
      |                                                            ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:508:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  508 | inline constexpr auto entries_v = entries<E, IsFlags>(std::make_index_sequence<count_v<E, IsFlags>>{});
      | ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:521:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  521 | inline constexpr bool is_sparse_v = is_sparse<E, IsFlags>();
      | ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr std::size_t magic_enum::detail::undex(U)Â«:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:527:7: Warnung: Â»init-statement in AuswahlanweisungenÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  527 |   if (const auto i = static_cast<std::size_t>(value - min_v<E>); value >= min_v<E> && value <= max_v<E>) {
      |       ^~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:528:8: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  528 |     if constexpr (is_sparse_v<E>) {
      |        ^~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:529:11: Warnung: Â»init-statement in AuswahlanweisungenÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  529 |       if (const auto idx = indexes_v<E>[i]; idx != invalid_index_v<E>) {
      |           ^~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:579:55: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  579 | using enable_if_enum_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, false, T, R>::type;
      |                                                       ^~~~~~~~~
      |                                                       is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:579:55: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  579 | using enable_if_enum_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, false, T, R>::type;
      |                                                       ^~~~~~~~~
      |                                                       is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:579:79: Fehler: falsche Anzahl der Templateargumente (1, sollte 4 sein)
  579 | using enable_if_enum_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, false, T, R>::type;
      |                                                                               ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:560:8: Anmerkung: fÃ¼r Â»template<bool <anonym>, bool <anonym>, class T, class R> struct magic_enum::detail::enable_if_enumÂ« bereitgestellt
  560 | struct enable_if_enum {};
      |        ^~~~~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:579:35: Fehler: Spezifikation mit geschachteltem Namen erwartet
  579 | using enable_if_enum_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, false, T, R>::type;
      |                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:582:61: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  582 | using enable_if_enum_flags_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, true, T, R>::type;
      |                                                             ^~~~~~~~~
      |                                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:582:61: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  582 | using enable_if_enum_flags_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, true, T, R>::type;
      |                                                             ^~~~~~~~~
      |                                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:582:85: Fehler: falsche Anzahl der Templateargumente (1, sollte 4 sein)
  582 | using enable_if_enum_flags_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, true, T, R>::type;
      |                                                                                     ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:560:8: Anmerkung: fÃ¼r Â»template<bool <anonym>, bool <anonym>, class T, class R> struct magic_enum::detail::enable_if_enumÂ« bereitgestellt
  560 | struct enable_if_enum {};
      |        ^~~~~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:582:41: Fehler: Spezifikation mit geschachteltem Namen erwartet
  582 | using enable_if_enum_flags_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, true, T, R>::type;
      |                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:584:63: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  584 | template <typename T, typename Enable = std::enable_if_t<std::is_enum_v<std::decay_t<T>>>>
      |                                                               ^~~~~~~~~
      |                                                               is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:584:63: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  584 | template <typename T, typename Enable = std::enable_if_t<std::is_enum_v<std::decay_t<T>>>>
      |                                                               ^~~~~~~~~
      |                                                               is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:584:87: Fehler: Templateargument 1 ist ungÃ¼ltig
  584 | template <typename T, typename Enable = std::enable_if_t<std::is_enum_v<std::decay_t<T>>>>
      |                                                                                       ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:584:89: Fehler: expected Â»>Â« before Â»>>Â« token
  584 | template <typename T, typename Enable = std::enable_if_t<std::is_enum_v<std::decay_t<T>>>>
      |                                                                                         ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:587:35: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  587 | template <typename T, bool = std::is_enum_v<T>>
      |                                   ^~~~~~~~~
      |                                   is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:587:46: Fehler: expected primary-expression before Â»>>Â« token
  587 | template <typename T, bool = std::is_enum_v<T>>
      |                                              ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:587:46: Fehler: expected Â»>Â« before Â»>>Â« token
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:591:52: Fehler: expected template-name before Â»<Â« token
  591 | struct is_scoped_enum<T, true> : std::bool_constant<!std::is_convertible_v<T, std::underlying_type_t<T>>> {};
      |                                                    ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:591:52: Fehler: expected Â»{Â« before Â»<Â« token
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:593:35: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  593 | template <typename T, bool = std::is_enum_v<T>>
      |                                   ^~~~~~~~~
      |                                   is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:593:46: Fehler: expected primary-expression before Â»>>Â« token
  593 | template <typename T, bool = std::is_enum_v<T>>
      |                                              ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:593:46: Fehler: expected Â»>Â« before Â»>>Â« token
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:597:54: Fehler: expected template-name before Â»<Â« token
  597 | struct is_unscoped_enum<T, true> : std::bool_constant<std::is_convertible_v<T, std::underlying_type_t<T>>> {};
      |                                                      ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:597:54: Fehler: expected Â»{Â« before Â»<Â« token
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:599:35: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  599 | template <typename T, bool = std::is_enum_v<std::decay_t<T>>>
      |                                   ^~~~~~~~~
      |                                   is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:599:59: Fehler: expected primary-expression before Â»>Â« token
  599 | template <typename T, bool = std::is_enum_v<std::decay_t<T>>>
      |                                                           ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:599:61: Fehler: expected unqualified-id before Â»>Â« token
  599 | template <typename T, bool = std::is_enum_v<std::decay_t<T>>>
      |                                                             ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:603:8: Fehler: Â»underlying_typeÂ« ist kein Klassentemplate
  603 | struct underlying_type<T, true> : std::underlying_type<std::decay_t<T>> {};
      |        ^~~~~~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:608:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  608 | inline constexpr bool is_magic_enum_supported = detail::supported<void>::value;
      | ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:611:36: Fehler: Templateargument 2 ist ungÃ¼ltig
  611 | using Enum = detail::enum_concept<T>;
      |                                    ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:616:53: Fehler: Templateargument 2 ist ungÃ¼ltig
  616 | struct is_unscoped_enum : detail::is_unscoped_enum<T> {};
      |                                                     ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:619:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  619 | inline constexpr bool is_unscoped_enum_v = is_unscoped_enum<T>::value;
      | ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:624:49: Fehler: Templateargument 2 ist ungÃ¼ltig
  624 | struct is_scoped_enum : detail::is_scoped_enum<T> {};
      |                                                 ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:627:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  627 | inline constexpr bool is_scoped_enum_v = is_scoped_enum<T>::value;
      | ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:639:105: Fehler: Templateargument 1 ist ungÃ¼ltig
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                                         ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:639:105: Fehler: Templateargument 1 ist ungÃ¼ltig
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                                         ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:639:105: Fehler: Templateargument 1 ist ungÃ¼ltig
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                                         ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:639:105: Fehler: Templateargument 1 ist ungÃ¼ltig
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                                         ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:639:105: Fehler: Templateargument 1 ist ungÃ¼ltig
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                                         ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:639:59: Fehler: ungÃ¼ltige Verwendung des Template-Namens Â»std::enable_if_tÂ« ohne eine Argumentliste
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                           ^~~
In Datei, eingebunden von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/bits/move.h:57,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/bits/nested_exception.h:40,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/exception:148,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/ios:39,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/ostream:38,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/iostream:39,
                 von controller.cpp:1:
/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/type_traits:2554:11: Anmerkung: Â»template<bool _Cond, class _Tp> using enable_if_t = typename std::enable_if::typeÂ« ist hier deklariert
 2554 |     using enable_if_t = typename enable_if<_Cond, _Tp>::type;
      |           ^~~~~~~~~~~
In Datei, eingebunden von SHARED/guicommunicator/guicommunicator.h:22,
                 von controller.cpp:25:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:639:75: Fehler: expected initializer before Â»<Â« token
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                           ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:649:63: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  649 | [[nodiscard]] constexpr auto enum_count() noexcept -> detail::enable_if_enum_t<E, std::size_t> {
      |                                                               ^~~~~~~~~~~~~~~~
      |                                                               enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:649:79: Fehler: expected initializer before Â»<Â« token
  649 | [[nodiscard]] constexpr auto enum_count() noexcept -> detail::enable_if_enum_t<E, std::size_t> {
      |                                                                               ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:658:80: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  658 | [[nodiscard]] constexpr auto enum_value(std::size_t index) noexcept -> detail::enable_if_enum_t<E, std::decay_t<E>> {
      |                                                                                ^~~~~~~~~~~~~~~~
      |                                                                                enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:658:96: Fehler: expected initializer before Â»<Â« token
  658 | [[nodiscard]] constexpr auto enum_value(std::size_t index) noexcept -> detail::enable_if_enum_t<E, std::decay_t<E>> {
      |                                                                                                ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:670:64: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  670 | [[nodiscard]] constexpr auto enum_values() noexcept -> detail::enable_if_enum_t<E, detail::values_t<E>> {
      |                                                                ^~~~~~~~~~~~~~~~
      |                                                                enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:670:80: Fehler: expected initializer before Â»<Â« token
  670 | [[nodiscard]] constexpr auto enum_values() noexcept -> detail::enable_if_enum_t<E, detail::values_t<E>> {
      |                                                                                ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:678:11: Fehler: Â»autoÂ«-Parameter darf in diesem Kontext nicht verwendet werden
  678 | template <auto V>
      |           ^~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:679:76: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  679 | [[nodiscard]] constexpr auto enum_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<decltype(V)>>, string_view> {
      |                                                                            ^~~~~~~~~
      |                                                                            is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:679:76: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  679 | [[nodiscard]] constexpr auto enum_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<decltype(V)>>, string_view> {
      |                                                                            ^~~~~~~~~
      |                                                                            is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:679:99: Fehler: Templateargument 1 ist ungÃ¼ltig
  679 | [[nodiscard]] constexpr auto enum_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<decltype(V)>>, string_view> {
      |                                                                                                   ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:679:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  679 | [[nodiscard]] constexpr auto enum_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<decltype(V)>>, string_view> {
      |                                                                                                              ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:690:69: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  690 | [[nodiscard]] constexpr auto enum_name(E value) noexcept -> detail::enable_if_enum_t<E, string_view> {
      |                                                                     ^~~~~~~~~~~~~~~~
      |                                                                     enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:690:85: Fehler: expected initializer before Â»<Â« token
  690 | [[nodiscard]] constexpr auto enum_name(E value) noexcept -> detail::enable_if_enum_t<E, string_view> {
      |                                                                                     ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:702:63: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  702 | [[nodiscard]] constexpr auto enum_names() noexcept -> detail::enable_if_enum_t<E, detail::names_t<E>> {
      |                                                               ^~~~~~~~~~~~~~~~
      |                                                               enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:702:79: Fehler: expected initializer before Â»<Â« token
  702 | [[nodiscard]] constexpr auto enum_names() noexcept -> detail::enable_if_enum_t<E, detail::names_t<E>> {
      |                                                                               ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:710:65: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  710 | [[nodiscard]] constexpr auto enum_entries() noexcept -> detail::enable_if_enum_t<E, detail::entries_t<E>> {
      |                                                                 ^~~~~~~~~~~~~~~~
      |                                                                 enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:710:81: Fehler: expected initializer before Â»<Â« token
  710 | [[nodiscard]] constexpr auto enum_entries() noexcept -> detail::enable_if_enum_t<E, detail::entries_t<E>> {
      |                                                                                 ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:719:88: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  719 | [[nodiscard]] constexpr auto enum_cast(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                                                        ^~~~~~~~~~~~~~~~
      |                                                                                        enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:719:104: Fehler: expected initializer before Â»<Â« token
  719 | [[nodiscard]] constexpr auto enum_cast(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                                                                        ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:732:40: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:732:40: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:732:75: Fehler: expected primary-expression before Â»pÂ«
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                                           ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:732:76: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                                            ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:732:77: Fehler: expected Â»;Â« before Â»noexceptÂ«
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                                             ^~~~~~~~~
      |                                                                             ;
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:748:40: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
  748 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:748:40: Fehler: Redeklaration von Â»template<class E> constexpr const auto magic_enum::enum_castÂ«
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:732:30: Anmerkung: vorherige Deklaration von Â»template<class E, class BinaryPredicate> constexpr<TypprÃ¤fixfehler> magic_enum::enum_cast<E, BinaryPredicate>Â«
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                              ^~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:748:40: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  748 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:748:58: Fehler: expected Â»;Â« before Â»noexceptÂ«
  748 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                          ^~~~~~~~~
      |                                                          ;
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:756:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                                              ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:756:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                                              ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:756:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                                              ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:756:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                                              ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:756:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                                              ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:756:64: Fehler: ungÃ¼ltige Verwendung des Template-Namens Â»std::enable_if_tÂ« ohne eine Argumentliste
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                ^~~
In Datei, eingebunden von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/bits/move.h:57,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/bits/nested_exception.h:40,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/exception:148,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/ios:39,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/ostream:38,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/iostream:39,
                 von controller.cpp:1:
/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/type_traits:2554:11: Anmerkung: Â»template<bool _Cond, class _Tp> using enable_if_t = typename std::enable_if::typeÂ« ist hier deklariert
 2554 |     using enable_if_t = typename enable_if<_Cond, _Tp>::type;
      |           ^~~~~~~~~~~
In Datei, eingebunden von SHARED/guicommunicator/guicommunicator.h:22,
                 von controller.cpp:25:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:756:80: Fehler: expected initializer before Â»<Â« token
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:763:70: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  763 | [[nodiscard]] constexpr auto enum_index(E value) noexcept -> detail::enable_if_enum_t<E, optional<std::size_t>> {
      |                                                                      ^~~~~~~~~~~~~~~~
      |                                                                      enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:763:86: Fehler: expected initializer before Â»<Â« token
  763 | [[nodiscard]] constexpr auto enum_index(E value) noexcept -> detail::enable_if_enum_t<E, optional<std::size_t>> {
      |                                                                                      ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:775:73: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  775 | [[nodiscard]] constexpr auto enum_contains(E value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                                                         ^~~~~~~~~~~~~~~~
      |                                                                         enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:775:89: Fehler: expected initializer before Â»<Â« token
  775 | [[nodiscard]] constexpr auto enum_contains(E value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                                                                         ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:783:92: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  783 | [[nodiscard]] constexpr auto enum_contains(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                                                                            ^~~~~~~~~~~~~~~~
      |                                                                                            enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:783:108: Fehler: expected initializer before Â»<Â« token
  783 | [[nodiscard]] constexpr auto enum_contains(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                                                                                            ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:791:44: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
  791 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:791:44: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:791:79: Fehler: expected primary-expression before Â»pÂ«
  791 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, bool> {
      |                                                                               ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:791:80: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
  791 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, bool> {
      |                                                                                ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:791:81: Fehler: expected Â»;Â« before Â»noexceptÂ«
  791 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, bool> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 ;
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:800:44: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
  800 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:800:44: Fehler: Redeklaration von Â»template<class E> constexpr const auto magic_enum::enum_containsÂ«
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:791:30: Anmerkung: vorherige Deklaration von Â»template<class E, class BinaryPredicate> constexpr<TypprÃ¤fixfehler> magic_enum::enum_contains<E, BinaryPredicate>Â«
  791 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, bool> {
      |                              ^~~~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:800:44: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  800 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:800:62: Fehler: expected Â»;Â« before Â»noexceptÂ«
  800 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                                              ^~~~~~~~~
      |                                                              ;
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:808:77: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  808 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                             ^~~~~~~~~
      |                                                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:808:77: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  808 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                             ^~~~~~~~~
      |                                                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:808:88: Fehler: Templateargument 1 ist ungÃ¼ltig
  808 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                                        ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:808:96: Fehler: expected unqualified-id before Â»=Â« token
  808 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                                                ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:823:77: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  823 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                             ^~~~~~~~~
      |                                                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:823:77: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  823 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                             ^~~~~~~~~
      |                                                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:823:88: Fehler: Templateargument 1 ist ungÃ¼ltig
  823 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                                        ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:823:96: Fehler: expected unqualified-id before Â»=Â« token
  823 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                                                ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:832:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  832 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:832:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  832 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:832:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  832 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:832:64: Fehler: expected unqualified-id before Â»=Â« token
  832 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:837:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  837 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:837:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  837 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:837:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  837 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:837:64: Fehler: expected unqualified-id before Â»=Â« token
  837 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:842:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  842 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:842:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  842 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:842:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  842 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:842:64: Fehler: expected unqualified-id before Â»=Â« token
  842 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:847:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  847 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:847:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  847 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:847:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  847 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:847:64: Fehler: expected unqualified-id before Â»=Â« token
  847 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:852:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  852 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:852:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  852 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:852:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  852 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:852:64: Fehler: expected unqualified-id before Â»=Â« token
  852 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:857:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  857 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:857:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  857 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:857:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  857 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:857:64: Fehler: expected unqualified-id before Â»=Â« token
  857 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:862:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  862 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:862:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  862 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:862:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  862 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:862:64: Fehler: expected unqualified-id before Â»=Â« token
  862 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:872:19: Fehler: Â»enum_type_nameÂ« wurde nicht innerhalb von Â»magic_enumÂ« deklariert
  872 | using magic_enum::enum_type_name;
      |                   ^~~~~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:876:63: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  876 | [[nodiscard]] constexpr auto enum_count() noexcept -> detail::enable_if_enum_flags_t<E, std::size_t> {
      |                                                               ^~~~~~~~~~~~~~~~~~~~~~
      |                                                               enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:876:85: Fehler: expected initializer before Â»<Â« token
  876 | [[nodiscard]] constexpr auto enum_count() noexcept -> detail::enable_if_enum_flags_t<E, std::size_t> {
      |                                                                                     ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:885:80: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  885 | [[nodiscard]] constexpr auto enum_value(std::size_t index) noexcept -> detail::enable_if_enum_flags_t<E, std::decay_t<E>> {
      |                                                                                ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                                enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:885:102: Fehler: expected initializer before Â»<Â« token
  885 | [[nodiscard]] constexpr auto enum_value(std::size_t index) noexcept -> detail::enable_if_enum_flags_t<E, std::decay_t<E>> {
      |                                                                                                      ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:899:64: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  899 | [[nodiscard]] constexpr auto enum_values() noexcept -> detail::enable_if_enum_flags_t<E, detail::values_t<E, true>> {
      |                                                                ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:899:86: Fehler: expected initializer before Â»<Â« token
  899 | [[nodiscard]] constexpr auto enum_values() noexcept -> detail::enable_if_enum_flags_t<E, detail::values_t<E, true>> {
      |                                                                                      ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:908:50: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  908 | [[nodiscard]] auto enum_name(E value) -> detail::enable_if_enum_flags_t<E, string> {
      |                                                  ^~~~~~~~~~~~~~~~~~~~~~
      |                                                  enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:908:72: Fehler: expected initializer before Â»<Â« token
  908 | [[nodiscard]] auto enum_name(E value) -> detail::enable_if_enum_flags_t<E, string> {
      |                                                                        ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:934:63: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  934 | [[nodiscard]] constexpr auto enum_names() noexcept -> detail::enable_if_enum_flags_t<E, detail::names_t<E, true>> {
      |                                                               ^~~~~~~~~~~~~~~~~~~~~~
      |                                                               enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:934:85: Fehler: expected initializer before Â»<Â« token
  934 | [[nodiscard]] constexpr auto enum_names() noexcept -> detail::enable_if_enum_flags_t<E, detail::names_t<E, true>> {
      |                                                                                     ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:942:65: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  942 | [[nodiscard]] constexpr auto enum_entries() noexcept -> detail::enable_if_enum_flags_t<E, detail::entries_t<E, true>> {
      |                                                                 ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                 enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:942:87: Fehler: expected initializer before Â»<Â« token
  942 | [[nodiscard]] constexpr auto enum_entries() noexcept -> detail::enable_if_enum_flags_t<E, detail::entries_t<E, true>> {
      |                                                                                       ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:951:88: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  951 | [[nodiscard]] constexpr auto enum_cast(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                                                        ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                                        enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:951:110: Fehler: expected initializer before Â»<Â« token
  951 | [[nodiscard]] constexpr auto enum_cast(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                                                                              ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:981:40: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
  981 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:981:40: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:981:75: Fehler: expected primary-expression before Â»pÂ«
  981 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                                           ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:981:76: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
  981 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                                            ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:981:77: Fehler: expected Â»;Â« before Â»noexceptÂ«
  981 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                                             ^~~~~~~~~
      |                                                                             ;
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1014:40: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
 1014 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1014:40: Fehler: Redeklaration von Â»template<class E> constexpr const auto magic_enum::flags::enum_castÂ«
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:981:30: Anmerkung: vorherige Deklaration von Â»template<class E, class BinaryPredicate> constexpr<TypprÃ¤fixfehler> magic_enum::flags::enum_cast<E, BinaryPredicate>Â«
  981 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                              ^~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1014:40: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
 1014 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1014:58: Fehler: expected Â»;Â« before Â»noexceptÂ«
 1014 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                          ^~~~~~~~~
      |                                                          ;
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1021:19: Fehler: Â»enum_integerÂ« wurde nicht innerhalb von Â»magic_enumÂ« deklariert
 1021 | using magic_enum::enum_integer;
      |                   ^~~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1026:70: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
 1026 | [[nodiscard]] constexpr auto enum_index(E value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::size_t>> {
      |                                                                      ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                      enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1026:92: Fehler: expected initializer before Â»<Â« token
 1026 | [[nodiscard]] constexpr auto enum_index(E value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::size_t>> {
      |                                                                                            ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1043:73: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
 1043 | [[nodiscard]] constexpr auto enum_contains(E value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                         ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                         enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1043:95: Fehler: expected initializer before Â»<Â« token
 1043 | [[nodiscard]] constexpr auto enum_contains(E value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                                               ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1052:92: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
 1052 | [[nodiscard]] constexpr auto enum_contains(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                                            ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                                            enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1052:114: Fehler: expected initializer before Â»<Â« token
 1052 | [[nodiscard]] constexpr auto enum_contains(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                                                                  ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1060:44: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
 1060 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1060:44: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1060:79: Fehler: expected primary-expression before Â»pÂ«
 1060 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                               ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1060:80: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
 1060 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                                ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1060:81: Fehler: expected Â»;Â« before Â»noexceptÂ«
 1060 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 ;
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1069:44: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
 1069 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1069:44: Fehler: Redeklaration von Â»template<class E> constexpr const auto magic_enum::flags::enum_containsÂ«
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1060:30: Anmerkung: vorherige Deklaration von Â»template<class E, class BinaryPredicate> constexpr<TypprÃ¤fixfehler> magic_enum::flags::enum_contains<E, BinaryPredicate>Â«
 1060 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, bool> {
      |                              ^~~~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1069:44: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
 1069 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1069:62: Fehler: expected Â»;Â« before Â»noexceptÂ«
 1069 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                              ^~~~~~~~~
      |                                                              ;
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1079:63: Fehler: Â»magic_enum::detail::enable_if_enum_flags_tÂ« wurde nicht deklariert
 1079 | template <typename Char, typename Traits, typename E, detail::enable_if_enum_flags_t<E, int> = 0>
      |                                                               ^~~~~~~~~~~~~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1079:85: Fehler: expected Â»>Â« before Â»<Â« token
 1079 | template <typename Char, typename Traits, typename E, detail::enable_if_enum_flags_t<E, int> = 0>
      |                                                                                     ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: In Funktion Â»std::basic_ostream<_CharT, _Traits>& magic_enum::flags::ostream_operators::operator<<(std::basic_ostream<_CharT, _Traits>&, E)Â«:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1084:7: Warnung: Â»init-statement in AuswahlanweisungenÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
 1084 |   if (const auto name = magic_enum::flags::enum_name<D>(value); !name.empty()) {
      |       ^~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1084:44: Fehler: Â»enum_nameÂ« ist kein Element von Â»magic_enum::flagsÂ«; meinten Sie Â»enum_castÂ«?
 1084 |   if (const auto name = magic_enum::flags::enum_name<D>(value); !name.empty()) {
      |                                            ^~~~~~~~~
      |                                            enum_cast
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1084:55: Fehler: expected primary-expression before Â»>Â« token
 1084 |   if (const auto name = magic_enum::flags::enum_name<D>(value); !name.empty()) {
      |                                                       ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1094:63: Fehler: Â»magic_enum::detail::enable_if_enum_flags_tÂ« wurde nicht deklariert
 1094 | template <typename Char, typename Traits, typename E, detail::enable_if_enum_flags_t<E, int> = 0>
      |                                                               ^~~~~~~~~~~~~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1094:85: Fehler: expected Â»>Â« before Â»<Â« token
 1094 | template <typename Char, typename Traits, typename E, detail::enable_if_enum_flags_t<E, int> = 0>
      |                                                                                     ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1095:84: Fehler: Â»optionalÂ« wurde nicht deklariert
 1095 | std::basic_ostream<Char, Traits>& operator<<(std::basic_ostream<Char, Traits>& os, optional<E> value) {
      |                                                                                    ^~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1095:92: Fehler: expected Â»,Â« or Â»...Â« before Â»<Â« token
 1095 | std::basic_ostream<Char, Traits>& operator<<(std::basic_ostream<Char, Traits>& os, optional<E> value) {
      |                                                                                            ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: In Funktion Â»std::basic_ostream<_CharT, _Traits>& magic_enum::flags::ostream_operators::operator<<(std::basic_ostream<_CharT, _Traits>&, int)Â«:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1096:10: Fehler: Â»valueÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht deklariert; meinten Sie Â»magic_enum::detail::valueÂ«?
 1096 |   return value.has_value() ? (os << value.value()) : os;
      |          ^~~~~
      |          magic_enum::detail::value
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:395:13: Anmerkung: Â»magic_enum::detail::valueÂ« ist hier deklariert
  395 | constexpr E value(std::size_t i) noexcept {
      |             ^~~~~
controller.cpp: In Funktion Â»std::string readHWID(std::string)Â«:
controller.cpp:60:1: Warnung: keine return-Anweisung in nicht void zurÃ¼ckgebender Funktion [-Wreturn-type]
   60 | }
      | ^
Makefile:212: recipe for target 'Debug/controller.o' failed
make[1]: *** [Debug/controller.o] Error 1
In Datei, eingebunden von SHARED/guicommunicator/guicommunicator.h:22,
                 von SHARED/guicommunicator/guicommunicator.cpp:1:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:99:23: Fehler: Â»optionalÂ« in Namensraum Â»stdÂ« bezeichnet keinen Templatetyp
   99 | using optional = std::optional<T>;
      |                       ^~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:99:18: Anmerkung: Â»std::optionalÂ« ist erst ab C++17 verfÃ¼gbar
   99 | using optional = std::optional<T>;
      |                  ^~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:106:26: Fehler: Â»string_viewÂ« in Namensbereich Â»stdÂ« bezeichnet keinen Typ
  106 | using string_view = std::string_view;
      |                          ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:106:21: Anmerkung: Â»std::string_viewÂ« ist erst ab C++17 verfÃ¼gbar
  106 | using string_view = std::string_view;
      |                     ^~~
In Datei, eingebunden von SHARED/guicommunicator/guicommunicator.h:22,
                 von SHARED/guicommunicator/guicommunicator.cpp:1:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:123:22: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  123 |   static_assert(std::is_enum_v<E>, "magic_enum::customize::enum_range requires enum type.");
      |                      ^~~~~~~~~
      |                      is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:123:33: Fehler: expected primary-expression before Â»>Â« token
  123 |   static_assert(std::is_enum_v<E>, "magic_enum::customize::enum_range requires enum type.");
      |                                 ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:123:34: Fehler: expected primary-expression before Â»,Â« token
  123 |   static_assert(std::is_enum_v<E>, "magic_enum::customize::enum_range requires enum type.");
      |                                  ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:124:3: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  124 |   inline static constexpr int min = MAGIC_ENUM_RANGE_MIN;
      |   ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:125:3: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  125 |   inline static constexpr int max = MAGIC_ENUM_RANGE_MAX;
      |   ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:139:11: Fehler: Â»string_viewÂ« bezeichnet keinen Typ
  139 | constexpr string_view enum_name(E) noexcept {
      |           ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:159:47: Fehler: expected Â»)Â« before Â»strÂ«
  159 |   constexpr explicit static_string(string_view str) noexcept : static_string{str, std::make_index_sequence<N>{}} {
      |                                   ~           ^~~~
      |                                               )
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:159:114: Fehler: expected unqualified-id before Â»{Â« token
  159 |   constexpr explicit static_string(string_view str) noexcept : static_string{str, std::make_index_sequence<N>{}} {
      |                                                                                                                  ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:167:22: Fehler: expected type-specifier before Â»string_viewÂ«
  167 |   constexpr operator string_view() const noexcept { return {data(), size()}; }
      |                      ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:171:38: Fehler: expected Â»)Â« before Â»strÂ«
  171 |   constexpr static_string(string_view str, std::index_sequence<I...>) noexcept : chars{{str[I]..., '\0'}} {}
      |                          ~           ^~~~
      |                                      )
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:171:107: Fehler: expected unqualified-id before Â»{Â« token
  171 |   constexpr static_string(string_view str, std::index_sequence<I...>) noexcept : chars{{str[I]..., '\0'}} {}
      |                                                                                                           ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:178:13: Fehler: nur Deklarationen von Konstruktoren und Umwandlungsoperatoren kÃ¶nnen Â»explicitÂ« sein
  178 |   constexpr explicit static_string(string_view) noexcept {}
      |             ^~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:178:36: Fehler: Feld Â»string_viewÂ« hat unvollstÃ¤ndigen Typen Â»const magic_enum::detail::static_string<0>Â«
  178 |   constexpr explicit static_string(string_view) noexcept {}
      |                                    ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:177:8: Anmerkung: Definition von Â»struct magic_enum::detail::static_string<0>Â« ist erst nach der schlieÃŸenden Klammer vollendet
  177 | struct static_string<0> {
      |        ^~~~~~~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:178:3: Fehler: nicht-statisches Datenelement Â»string_viewÂ« als Â»constexprÂ« deklariert
  178 |   constexpr explicit static_string(string_view) noexcept {}
      |   ^~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:178:47: Fehler: Â»;Â« am Ende von Elementdeklaration erwartet
  178 |   constexpr explicit static_string(string_view) noexcept {}
      |                                               ^
      |                                                ;
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:178:49: Fehler: expected unqualified-id before Â»noexceptÂ«
  178 |   constexpr explicit static_string(string_view) noexcept {}
      |                                                 ^~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:184:22: Fehler: expected type-specifier before Â»string_viewÂ«
  184 |   constexpr operator string_view() const noexcept { return {}; }
      |                      ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:193:11: Fehler: Â»string_viewÂ« bezeichnet keinen Typ
  193 | constexpr string_view pretty_name(string_view name) noexcept {
      |           ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:213:28: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  213 | constexpr std::size_t find(string_view str, char c) noexcept {
      |                            ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:213:45: Fehler: expected primary-expression before Â»charÂ«
  213 | constexpr std::size_t find(string_view str, char c) noexcept {
      |                                             ^~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:213:51: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
  213 | constexpr std::size_t find(string_view str, char c) noexcept {
      |                                                   ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:235:26: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                          ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:235:43: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                                           ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:235:75: Fehler: expected primary-expression before Â»&&Â« token
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                                                                           ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:235:78: Fehler: Â»pÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                                                                              ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:235:79: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                                                                               ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:235:80: Fehler: expected Â»;Â« before Â»noexceptÂ«
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                                                                                ^~~~~~~~~
      |                                                                                ;
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr bool magic_enum::detail::cmp_less(L, R)Â«:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:264:22: Fehler: Â»is_integral_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_integralÂ«?
  264 |   static_assert(std::is_integral_v<L> && std::is_integral_v<R>, "magic_enum::detail::cmp_less requires integral type.");
      |                      ^~~~~~~~~~~~~
      |                      is_integral
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:264:37: Fehler: expected primary-expression before Â»>Â« token
  264 |   static_assert(std::is_integral_v<L> && std::is_integral_v<R>, "magic_enum::detail::cmp_less requires integral type.");
      |                                     ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:264:45: Fehler: expected Â»,Â« before Â»::Â« token
  264 |   static_assert(std::is_integral_v<L> && std::is_integral_v<R>, "magic_enum::detail::cmp_less requires integral type.");
      |                                             ^~
      |                                             ,
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:264:45: Fehler: expected string-literal before Â»::Â« token
  264 |   static_assert(std::is_integral_v<L> && std::is_integral_v<R>, "magic_enum::detail::cmp_less requires integral type.");
      |                                             ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:264:45: Fehler: expected Â»)Â« before Â»::Â« token
  264 |   static_assert(std::is_integral_v<L> && std::is_integral_v<R>, "magic_enum::detail::cmp_less requires integral type.");
      |                ~                            ^~
      |                                             )
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:266:6: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |      ^~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:266:22: Fehler: Â»is_signed_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_signedÂ«?
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                      ^~~~~~~~~~~
      |                      is_signed
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:266:35: Fehler: expected primary-expression before Â»>Â« token
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                                   ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:266:37: Fehler: expected primary-expression before Â»==Â« token
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                                     ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:266:45: Fehler: Â»is_signed_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_signedÂ«?
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                                             ^~~~~~~~~~~
      |                                             is_signed
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:266:58: Fehler: expected primary-expression before Â»>Â« token
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                                                          ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:266:59: Fehler: expected primary-expression before Â»)Â« token
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                                                           ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:269:13: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  269 |   } else if constexpr (std::is_signed_v<R>) {
      |             ^~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:269:29: Fehler: Â»is_signed_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_signedÂ«?
  269 |   } else if constexpr (std::is_signed_v<R>) {
      |                             ^~~~~~~~~~~
      |                             is_signed
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:269:42: Fehler: expected primary-expression before Â»>Â« token
  269 |   } else if constexpr (std::is_signed_v<R>) {
      |                                          ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:269:43: Fehler: expected primary-expression before Â»)Â« token
  269 |   } else if constexpr (std::is_signed_v<R>) {
      |                                           ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr I magic_enum::detail::log2(I)Â«:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:280:22: Fehler: Â»is_integral_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_integralÂ«?
  280 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::log2 requires integral type.");
      |                      ^~~~~~~~~~~~~
      |                      is_integral
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:280:37: Fehler: expected primary-expression before Â»>Â« token
  280 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::log2 requires integral type.");
      |                                     ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:280:38: Fehler: expected primary-expression before Â»,Â« token
  280 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::log2 requires integral type.");
      |                                      ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr bool magic_enum::detail::is_pow2(I)Â«:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:290:22: Fehler: Â»is_integral_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_integralÂ«?
  290 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::is_pow2 requires integral type.");
      |                      ^~~~~~~~~~~~~
      |                      is_integral
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:290:37: Fehler: expected primary-expression before Â»>Â« token
  290 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::is_pow2 requires integral type.");
      |                                     ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:290:38: Fehler: expected primary-expression before Â»,Â« token
  290 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::is_pow2 requires integral type.");
      |                                      ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:296:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  296 | inline constexpr bool is_enum_v = std::is_enum_v<T> && std::is_same_v<T, std::decay_t<T>>;
      | ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:296:40: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  296 | inline constexpr bool is_enum_v = std::is_enum_v<T> && std::is_same_v<T, std::decay_t<T>>;
      |                                        ^~~~~~~~~
      |                                        is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:296:51: Fehler: expected primary-expression before Â»>Â« token
  296 | inline constexpr bool is_enum_v = std::is_enum_v<T> && std::is_same_v<T, std::decay_t<T>>;
      |                                                   ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:296:56: Fehler: Marke Â»stdÂ« auÃŸerhalb einer Funktion referenziert
  296 | inline constexpr bool is_enum_v = std::is_enum_v<T> && std::is_same_v<T, std::decay_t<T>>;
      |                                                        ^~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr auto magic_enum::detail::n()Â«:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:305:13: Fehler: Â»string_viewÂ« bezeichnet keinen Typ
  305 |   constexpr string_view name{__PRETTY_FUNCTION__ + 49, sizeof(__PRETTY_FUNCTION__) - 51};
      |             ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:309:24: Fehler: Â»nameÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  309 |   return static_string<name.size()>{name};
      |                        ^~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:309:35: Fehler: Templateargument 1 ist ungÃ¼ltig
  309 |   return static_string<name.size()>{name};
      |                                   ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:316:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  316 | inline constexpr auto type_name_v = n<E>();
      | ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr auto magic_enum::detail::n()Â«:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:321:43: Fehler: Â»enum_nameÂ« ist kein Element von Â»magic_enum::customizeÂ«; meinten Sie Â»enum_rangeÂ«?
  321 |   constexpr auto custom_name = customize::enum_name<E>(V);
      |                                           ^~~~~~~~~
      |                                           enum_range
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:321:54: Fehler: expected primary-expression before Â»>Â« token
  321 |   constexpr auto custom_name = customize::enum_name<E>(V);
      |                                                      ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:323:6: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  323 |   if constexpr (custom_name.empty()) {
      |      ^~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:341:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  341 | inline constexpr auto enum_name_v = n<E, V>();
      | ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:343:23: Fehler: Â»autoÂ«-Parameter darf in diesem Kontext nicht verwendet werden
  343 | template <typename E, auto V>
      |                       ^~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr int magic_enum::detail::reflected_min()Â«:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:354:6: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  354 |   if constexpr (IsFlags) {
      |      ^~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:361:8: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  361 |     if constexpr (cmp_less(lhs, rhs)) {
      |        ^~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr int magic_enum::detail::reflected_max()Â«:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:373:6: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  373 |   if constexpr (IsFlags) {
      |      ^~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:380:8: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  380 |     if constexpr (cmp_less(lhs, rhs)) {
      |        ^~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:389:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  389 | inline constexpr auto reflected_min_v = reflected_min<E, IsFlags>();
      | ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:392:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  392 | inline constexpr auto reflected_max_v = reflected_max<E, IsFlags>();
      | ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr E magic_enum::detail::value(std::size_t)Â«:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:398:6: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  398 |   if constexpr (IsFlags) {
      |      ^~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr auto magic_enum::detail::values(std::index_sequence<I ...>)Â«:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:409:62: Fehler: Â»constexprÂ«-Lambda ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  409 |   constexpr std::size_t count = [](decltype((valid)) valid_) constexpr noexcept -> std::size_t {
      |                                                              ^~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:419:22: Fehler: der Wert von Â»countÂ« ist in konstantem Ausdruck nicht verwendbar
  419 |   std::array<E, count> values{};
      |                      ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:409:25: Anmerkung: Â»countÂ« in seiner eigenen Initialisierung verwendet
  409 |   constexpr std::size_t count = [](decltype((valid)) valid_) constexpr noexcept -> std::size_t {
      |                         ^~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:419:22: Anmerkung: in Templateargument fÃ¼r Typ Â»unsigned intÂ«
  419 |   std::array<E, count> values{};
      |                      ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:422:13: Fehler: ungÃ¼ltige Typen Â»int[std::size_t {aka unsigned int}]Â« fÃ¼r Feldindex
  422 |       values[v++] = value<E, Min, IsFlags>(i);
      |             ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:440:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  440 | inline constexpr auto values_v = values<E, IsFlags>();
      | ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:446:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  446 | inline constexpr auto count_v = values_v<E, IsFlags>.size();
      | ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:449:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  449 | inline constexpr auto min_v = static_cast<U>(values_v<E, IsFlags>.front());
      | ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:452:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  452 | inline constexpr auto max_v = static_cast<U>(values_v<E, IsFlags>.back());
      | ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:467:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  467 | inline constexpr auto range_size_v = range_size<E, IsFlags>();
      | ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:473:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  473 | inline constexpr auto invalid_index_v = (std::numeric_limits<index_t<E, IsFlags>>::max)();
      | ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:485:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  485 | inline constexpr auto indexes_v = indexes<E, IsFlags>(std::make_index_sequence<range_size_v<E, IsFlags>>{});
      | ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr auto magic_enum::detail::names(std::index_sequence<I ...>)Â«:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:491:21: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  491 |   return std::array<string_view, sizeof...(I)>{{enum_name_v<E, values_v<E, IsFlags>[I]>...}};
      |                     ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:491:46: Fehler: Templateargument 1 ist ungÃ¼ltig
  491 |   return std::array<string_view, sizeof...(I)>{{enum_name_v<E, values_v<E, IsFlags>[I]>...}};
      |                                              ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:495:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  495 | inline constexpr auto names_v = names<E, IsFlags>(std::make_index_sequence<count_v<E, IsFlags>>{});
      | ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr auto magic_enum::detail::entries(std::index_sequence<I ...>)Â«:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:504:34: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  504 |   return std::array<std::pair<E, string_view>, sizeof...(I)>{{{values_v<E, IsFlags>[I], enum_name_v<E, values_v<E, IsFlags>[I]>}...}};
      |                                  ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:504:45: Fehler: Templateargument 2 ist ungÃ¼ltig
  504 |   return std::array<std::pair<E, string_view>, sizeof...(I)>{{{values_v<E, IsFlags>[I], enum_name_v<E, values_v<E, IsFlags>[I]>}...}};
      |                                             ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:504:60: Fehler: Templateargument 1 ist ungÃ¼ltig
  504 |   return std::array<std::pair<E, string_view>, sizeof...(I)>{{{values_v<E, IsFlags>[I], enum_name_v<E, values_v<E, IsFlags>[I]>}...}};
      |                                                            ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:508:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  508 | inline constexpr auto entries_v = entries<E, IsFlags>(std::make_index_sequence<count_v<E, IsFlags>>{});
      | ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:521:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  521 | inline constexpr bool is_sparse_v = is_sparse<E, IsFlags>();
      | ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr std::size_t magic_enum::detail::undex(U)Â«:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:527:7: Warnung: Â»init-statement in AuswahlanweisungenÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  527 |   if (const auto i = static_cast<std::size_t>(value - min_v<E>); value >= min_v<E> && value <= max_v<E>) {
      |       ^~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:528:8: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  528 |     if constexpr (is_sparse_v<E>) {
      |        ^~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:529:11: Warnung: Â»init-statement in AuswahlanweisungenÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  529 |       if (const auto idx = indexes_v<E>[i]; idx != invalid_index_v<E>) {
      |           ^~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:579:55: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  579 | using enable_if_enum_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, false, T, R>::type;
      |                                                       ^~~~~~~~~
      |                                                       is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:579:55: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  579 | using enable_if_enum_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, false, T, R>::type;
      |                                                       ^~~~~~~~~
      |                                                       is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:579:79: Fehler: falsche Anzahl der Templateargumente (1, sollte 4 sein)
  579 | using enable_if_enum_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, false, T, R>::type;
      |                                                                               ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:560:8: Anmerkung: fÃ¼r Â»template<bool <anonym>, bool <anonym>, class T, class R> struct magic_enum::detail::enable_if_enumÂ« bereitgestellt
  560 | struct enable_if_enum {};
      |        ^~~~~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:579:35: Fehler: Spezifikation mit geschachteltem Namen erwartet
  579 | using enable_if_enum_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, false, T, R>::type;
      |                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:582:61: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  582 | using enable_if_enum_flags_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, true, T, R>::type;
      |                                                             ^~~~~~~~~
      |                                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:582:61: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  582 | using enable_if_enum_flags_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, true, T, R>::type;
      |                                                             ^~~~~~~~~
      |                                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:582:85: Fehler: falsche Anzahl der Templateargumente (1, sollte 4 sein)
  582 | using enable_if_enum_flags_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, true, T, R>::type;
      |                                                                                     ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:560:8: Anmerkung: fÃ¼r Â»template<bool <anonym>, bool <anonym>, class T, class R> struct magic_enum::detail::enable_if_enumÂ« bereitgestellt
  560 | struct enable_if_enum {};
      |        ^~~~~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:582:41: Fehler: Spezifikation mit geschachteltem Namen erwartet
  582 | using enable_if_enum_flags_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, true, T, R>::type;
      |                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:584:63: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  584 | template <typename T, typename Enable = std::enable_if_t<std::is_enum_v<std::decay_t<T>>>>
      |                                                               ^~~~~~~~~
      |                                                               is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:584:63: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  584 | template <typename T, typename Enable = std::enable_if_t<std::is_enum_v<std::decay_t<T>>>>
      |                                                               ^~~~~~~~~
      |                                                               is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:584:87: Fehler: Templateargument 1 ist ungÃ¼ltig
  584 | template <typename T, typename Enable = std::enable_if_t<std::is_enum_v<std::decay_t<T>>>>
      |                                                                                       ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:584:89: Fehler: expected Â»>Â« before Â»>>Â« token
  584 | template <typename T, typename Enable = std::enable_if_t<std::is_enum_v<std::decay_t<T>>>>
      |                                                                                         ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:587:35: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  587 | template <typename T, bool = std::is_enum_v<T>>
      |                                   ^~~~~~~~~
      |                                   is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:587:46: Fehler: expected primary-expression before Â»>>Â« token
  587 | template <typename T, bool = std::is_enum_v<T>>
      |                                              ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:587:46: Fehler: expected Â»>Â« before Â»>>Â« token
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:591:52: Fehler: expected template-name before Â»<Â« token
  591 | struct is_scoped_enum<T, true> : std::bool_constant<!std::is_convertible_v<T, std::underlying_type_t<T>>> {};
      |                                                    ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:591:52: Fehler: expected Â»{Â« before Â»<Â« token
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:593:35: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  593 | template <typename T, bool = std::is_enum_v<T>>
      |                                   ^~~~~~~~~
      |                                   is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:593:46: Fehler: expected primary-expression before Â»>>Â« token
  593 | template <typename T, bool = std::is_enum_v<T>>
      |                                              ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:593:46: Fehler: expected Â»>Â« before Â»>>Â« token
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:597:54: Fehler: expected template-name before Â»<Â« token
  597 | struct is_unscoped_enum<T, true> : std::bool_constant<std::is_convertible_v<T, std::underlying_type_t<T>>> {};
      |                                                      ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:597:54: Fehler: expected Â»{Â« before Â»<Â« token
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:599:35: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  599 | template <typename T, bool = std::is_enum_v<std::decay_t<T>>>
      |                                   ^~~~~~~~~
      |                                   is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:599:59: Fehler: expected primary-expression before Â»>Â« token
  599 | template <typename T, bool = std::is_enum_v<std::decay_t<T>>>
      |                                                           ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:599:61: Fehler: expected unqualified-id before Â»>Â« token
  599 | template <typename T, bool = std::is_enum_v<std::decay_t<T>>>
      |                                                             ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:603:8: Fehler: Â»underlying_typeÂ« ist kein Klassentemplate
  603 | struct underlying_type<T, true> : std::underlying_type<std::decay_t<T>> {};
      |        ^~~~~~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:608:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  608 | inline constexpr bool is_magic_enum_supported = detail::supported<void>::value;
      | ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:611:36: Fehler: Templateargument 2 ist ungÃ¼ltig
  611 | using Enum = detail::enum_concept<T>;
      |                                    ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:616:53: Fehler: Templateargument 2 ist ungÃ¼ltig
  616 | struct is_unscoped_enum : detail::is_unscoped_enum<T> {};
      |                                                     ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:619:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  619 | inline constexpr bool is_unscoped_enum_v = is_unscoped_enum<T>::value;
      | ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:624:49: Fehler: Templateargument 2 ist ungÃ¼ltig
  624 | struct is_scoped_enum : detail::is_scoped_enum<T> {};
      |                                                 ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:627:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  627 | inline constexpr bool is_scoped_enum_v = is_scoped_enum<T>::value;
      | ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:639:105: Fehler: Templateargument 1 ist ungÃ¼ltig
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                                         ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:639:105: Fehler: Templateargument 1 ist ungÃ¼ltig
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                                         ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:639:105: Fehler: Templateargument 1 ist ungÃ¼ltig
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                                         ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:639:105: Fehler: Templateargument 1 ist ungÃ¼ltig
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                                         ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:639:105: Fehler: Templateargument 1 ist ungÃ¼ltig
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                                         ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:639:59: Fehler: ungÃ¼ltige Verwendung des Template-Namens Â»std::enable_if_tÂ« ohne eine Argumentliste
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                           ^~~
In Datei, eingebunden von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/bits/move.h:57,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/bits/stl_pair.h:59,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/bits/stl_algobase.h:64,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/bits/char_traits.h:39,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/string:40,
                 von SHARED/guicommunicator/guicommunicator.h:8,
                 von SHARED/guicommunicator/guicommunicator.cpp:1:
/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/type_traits:2554:11: Anmerkung: Â»template<bool _Cond, class _Tp> using enable_if_t = typename std::enable_if::typeÂ« ist hier deklariert
 2554 |     using enable_if_t = typename enable_if<_Cond, _Tp>::type;
      |           ^~~~~~~~~~~
In Datei, eingebunden von SHARED/guicommunicator/guicommunicator.h:22,
                 von SHARED/guicommunicator/guicommunicator.cpp:1:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:639:75: Fehler: expected initializer before Â»<Â« token
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                           ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:649:63: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  649 | [[nodiscard]] constexpr auto enum_count() noexcept -> detail::enable_if_enum_t<E, std::size_t> {
      |                                                               ^~~~~~~~~~~~~~~~
      |                                                               enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:649:79: Fehler: expected initializer before Â»<Â« token
  649 | [[nodiscard]] constexpr auto enum_count() noexcept -> detail::enable_if_enum_t<E, std::size_t> {
      |                                                                               ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:658:80: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  658 | [[nodiscard]] constexpr auto enum_value(std::size_t index) noexcept -> detail::enable_if_enum_t<E, std::decay_t<E>> {
      |                                                                                ^~~~~~~~~~~~~~~~
      |                                                                                enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:658:96: Fehler: expected initializer before Â»<Â« token
  658 | [[nodiscard]] constexpr auto enum_value(std::size_t index) noexcept -> detail::enable_if_enum_t<E, std::decay_t<E>> {
      |                                                                                                ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:670:64: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  670 | [[nodiscard]] constexpr auto enum_values() noexcept -> detail::enable_if_enum_t<E, detail::values_t<E>> {
      |                                                                ^~~~~~~~~~~~~~~~
      |                                                                enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:670:80: Fehler: expected initializer before Â»<Â« token
  670 | [[nodiscard]] constexpr auto enum_values() noexcept -> detail::enable_if_enum_t<E, detail::values_t<E>> {
      |                                                                                ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:678:11: Fehler: Â»autoÂ«-Parameter darf in diesem Kontext nicht verwendet werden
  678 | template <auto V>
      |           ^~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:679:76: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  679 | [[nodiscard]] constexpr auto enum_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<decltype(V)>>, string_view> {
      |                                                                            ^~~~~~~~~
      |                                                                            is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:679:76: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  679 | [[nodiscard]] constexpr auto enum_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<decltype(V)>>, string_view> {
      |                                                                            ^~~~~~~~~
      |                                                                            is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:679:99: Fehler: Templateargument 1 ist ungÃ¼ltig
  679 | [[nodiscard]] constexpr auto enum_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<decltype(V)>>, string_view> {
      |                                                                                                   ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:679:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  679 | [[nodiscard]] constexpr auto enum_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<decltype(V)>>, string_view> {
      |                                                                                                              ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:690:69: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  690 | [[nodiscard]] constexpr auto enum_name(E value) noexcept -> detail::enable_if_enum_t<E, string_view> {
      |                                                                     ^~~~~~~~~~~~~~~~
      |                                                                     enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:690:85: Fehler: expected initializer before Â»<Â« token
  690 | [[nodiscard]] constexpr auto enum_name(E value) noexcept -> detail::enable_if_enum_t<E, string_view> {
      |                                                                                     ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:702:63: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  702 | [[nodiscard]] constexpr auto enum_names() noexcept -> detail::enable_if_enum_t<E, detail::names_t<E>> {
      |                                                               ^~~~~~~~~~~~~~~~
      |                                                               enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:702:79: Fehler: expected initializer before Â»<Â« token
  702 | [[nodiscard]] constexpr auto enum_names() noexcept -> detail::enable_if_enum_t<E, detail::names_t<E>> {
      |                                                                               ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:710:65: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  710 | [[nodiscard]] constexpr auto enum_entries() noexcept -> detail::enable_if_enum_t<E, detail::entries_t<E>> {
      |                                                                 ^~~~~~~~~~~~~~~~
      |                                                                 enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:710:81: Fehler: expected initializer before Â»<Â« token
  710 | [[nodiscard]] constexpr auto enum_entries() noexcept -> detail::enable_if_enum_t<E, detail::entries_t<E>> {
      |                                                                                 ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:719:88: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  719 | [[nodiscard]] constexpr auto enum_cast(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                                                        ^~~~~~~~~~~~~~~~
      |                                                                                        enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:719:104: Fehler: expected initializer before Â»<Â« token
  719 | [[nodiscard]] constexpr auto enum_cast(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                                                                        ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:732:40: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:732:40: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:732:75: Fehler: expected primary-expression before Â»pÂ«
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                                           ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:732:76: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                                            ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:732:77: Fehler: expected Â»;Â« before Â»noexceptÂ«
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                                             ^~~~~~~~~
      |                                                                             ;
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:748:40: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
  748 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:748:40: Fehler: Redeklaration von Â»template<class E> constexpr const auto magic_enum::enum_castÂ«
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:732:30: Anmerkung: vorherige Deklaration von Â»template<class E, class BinaryPredicate> constexpr<TypprÃ¤fixfehler> magic_enum::enum_cast<E, BinaryPredicate>Â«
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                              ^~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:748:40: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  748 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:748:58: Fehler: expected Â»;Â« before Â»noexceptÂ«
  748 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                          ^~~~~~~~~
      |                                                          ;
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:756:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                                              ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:756:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                                              ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:756:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                                              ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:756:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                                              ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:756:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                                              ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:756:64: Fehler: ungÃ¼ltige Verwendung des Template-Namens Â»std::enable_if_tÂ« ohne eine Argumentliste
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                ^~~
In Datei, eingebunden von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/bits/move.h:57,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/bits/stl_pair.h:59,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/bits/stl_algobase.h:64,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/bits/char_traits.h:39,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/string:40,
                 von SHARED/guicommunicator/guicommunicator.h:8,
                 von SHARED/guicommunicator/guicommunicator.cpp:1:
/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/type_traits:2554:11: Anmerkung: Â»template<bool _Cond, class _Tp> using enable_if_t = typename std::enable_if::typeÂ« ist hier deklariert
 2554 |     using enable_if_t = typename enable_if<_Cond, _Tp>::type;
      |           ^~~~~~~~~~~
In Datei, eingebunden von SHARED/guicommunicator/guicommunicator.h:22,
                 von SHARED/guicommunicator/guicommunicator.cpp:1:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:756:80: Fehler: expected initializer before Â»<Â« token
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:763:70: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  763 | [[nodiscard]] constexpr auto enum_index(E value) noexcept -> detail::enable_if_enum_t<E, optional<std::size_t>> {
      |                                                                      ^~~~~~~~~~~~~~~~
      |                                                                      enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:763:86: Fehler: expected initializer before Â»<Â« token
  763 | [[nodiscard]] constexpr auto enum_index(E value) noexcept -> detail::enable_if_enum_t<E, optional<std::size_t>> {
      |                                                                                      ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:775:73: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  775 | [[nodiscard]] constexpr auto enum_contains(E value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                                                         ^~~~~~~~~~~~~~~~
      |                                                                         enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:775:89: Fehler: expected initializer before Â»<Â« token
  775 | [[nodiscard]] constexpr auto enum_contains(E value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                                                                         ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:783:92: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  783 | [[nodiscard]] constexpr auto enum_contains(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                                                                            ^~~~~~~~~~~~~~~~
      |                                                                                            enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:783:108: Fehler: expected initializer before Â»<Â« token
  783 | [[nodiscard]] constexpr auto enum_contains(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                                                                                            ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:791:44: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
  791 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:791:44: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:791:79: Fehler: expected primary-expression before Â»pÂ«
  791 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, bool> {
      |                                                                               ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:791:80: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
  791 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, bool> {
      |                                                                                ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:791:81: Fehler: expected Â»;Â« before Â»noexceptÂ«
  791 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, bool> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 ;
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:800:44: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
  800 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:800:44: Fehler: Redeklaration von Â»template<class E> constexpr const auto magic_enum::enum_containsÂ«
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:791:30: Anmerkung: vorherige Deklaration von Â»template<class E, class BinaryPredicate> constexpr<TypprÃ¤fixfehler> magic_enum::enum_contains<E, BinaryPredicate>Â«
  791 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, bool> {
      |                              ^~~~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:800:44: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  800 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:800:62: Fehler: expected Â»;Â« before Â»noexceptÂ«
  800 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                                              ^~~~~~~~~
      |                                                              ;
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:808:77: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  808 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                             ^~~~~~~~~
      |                                                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:808:77: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  808 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                             ^~~~~~~~~
      |                                                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:808:88: Fehler: Templateargument 1 ist ungÃ¼ltig
  808 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                                        ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:808:96: Fehler: expected unqualified-id before Â»=Â« token
  808 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                                                ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:823:77: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  823 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                             ^~~~~~~~~
      |                                                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:823:77: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  823 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                             ^~~~~~~~~
      |                                                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:823:88: Fehler: Templateargument 1 ist ungÃ¼ltig
  823 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                                        ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:823:96: Fehler: expected unqualified-id before Â»=Â« token
  823 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                                                ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:832:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  832 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:832:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  832 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:832:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  832 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:832:64: Fehler: expected unqualified-id before Â»=Â« token
  832 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:837:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  837 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:837:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  837 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:837:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  837 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:837:64: Fehler: expected unqualified-id before Â»=Â« token
  837 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:842:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  842 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:842:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  842 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:842:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  842 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:842:64: Fehler: expected unqualified-id before Â»=Â« token
  842 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:847:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  847 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:847:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  847 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:847:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  847 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:847:64: Fehler: expected unqualified-id before Â»=Â« token
  847 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:852:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  852 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:852:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  852 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:852:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  852 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:852:64: Fehler: expected unqualified-id before Â»=Â« token
  852 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:857:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  857 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:857:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  857 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:857:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  857 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:857:64: Fehler: expected unqualified-id before Â»=Â« token
  857 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:862:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  862 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:862:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  862 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:862:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  862 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:862:64: Fehler: expected unqualified-id before Â»=Â« token
  862 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:872:19: Fehler: Â»enum_type_nameÂ« wurde nicht innerhalb von Â»magic_enumÂ« deklariert
  872 | using magic_enum::enum_type_name;
      |                   ^~~~~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:876:63: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  876 | [[nodiscard]] constexpr auto enum_count() noexcept -> detail::enable_if_enum_flags_t<E, std::size_t> {
      |                                                               ^~~~~~~~~~~~~~~~~~~~~~
      |                                                               enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:876:85: Fehler: expected initializer before Â»<Â« token
  876 | [[nodiscard]] constexpr auto enum_count() noexcept -> detail::enable_if_enum_flags_t<E, std::size_t> {
      |                                                                                     ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:885:80: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  885 | [[nodiscard]] constexpr auto enum_value(std::size_t index) noexcept -> detail::enable_if_enum_flags_t<E, std::decay_t<E>> {
      |                                                                                ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                                enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:885:102: Fehler: expected initializer before Â»<Â« token
  885 | [[nodiscard]] constexpr auto enum_value(std::size_t index) noexcept -> detail::enable_if_enum_flags_t<E, std::decay_t<E>> {
      |                                                                                                      ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:899:64: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  899 | [[nodiscard]] constexpr auto enum_values() noexcept -> detail::enable_if_enum_flags_t<E, detail::values_t<E, true>> {
      |                                                                ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:899:86: Fehler: expected initializer before Â»<Â« token
  899 | [[nodiscard]] constexpr auto enum_values() noexcept -> detail::enable_if_enum_flags_t<E, detail::values_t<E, true>> {
      |                                                                                      ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:908:50: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  908 | [[nodiscard]] auto enum_name(E value) -> detail::enable_if_enum_flags_t<E, string> {
      |                                                  ^~~~~~~~~~~~~~~~~~~~~~
      |                                                  enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:908:72: Fehler: expected initializer before Â»<Â« token
  908 | [[nodiscard]] auto enum_name(E value) -> detail::enable_if_enum_flags_t<E, string> {
      |                                                                        ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:934:63: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  934 | [[nodiscard]] constexpr auto enum_names() noexcept -> detail::enable_if_enum_flags_t<E, detail::names_t<E, true>> {
      |                                                               ^~~~~~~~~~~~~~~~~~~~~~
      |                                                               enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:934:85: Fehler: expected initializer before Â»<Â« token
  934 | [[nodiscard]] constexpr auto enum_names() noexcept -> detail::enable_if_enum_flags_t<E, detail::names_t<E, true>> {
      |                                                                                     ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:942:65: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  942 | [[nodiscard]] constexpr auto enum_entries() noexcept -> detail::enable_if_enum_flags_t<E, detail::entries_t<E, true>> {
      |                                                                 ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                 enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:942:87: Fehler: expected initializer before Â»<Â« token
  942 | [[nodiscard]] constexpr auto enum_entries() noexcept -> detail::enable_if_enum_flags_t<E, detail::entries_t<E, true>> {
      |                                                                                       ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:951:88: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  951 | [[nodiscard]] constexpr auto enum_cast(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                                                        ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                                        enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:951:110: Fehler: expected initializer before Â»<Â« token
  951 | [[nodiscard]] constexpr auto enum_cast(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                                                                              ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:981:40: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
  981 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:981:40: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:981:75: Fehler: expected primary-expression before Â»pÂ«
  981 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                                           ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:981:76: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
  981 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                                            ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:981:77: Fehler: expected Â»;Â« before Â»noexceptÂ«
  981 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                                             ^~~~~~~~~
      |                                                                             ;
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1014:40: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
 1014 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1014:40: Fehler: Redeklaration von Â»template<class E> constexpr const auto magic_enum::flags::enum_castÂ«
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:981:30: Anmerkung: vorherige Deklaration von Â»template<class E, class BinaryPredicate> constexpr<TypprÃ¤fixfehler> magic_enum::flags::enum_cast<E, BinaryPredicate>Â«
  981 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                              ^~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1014:40: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
 1014 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1014:58: Fehler: expected Â»;Â« before Â»noexceptÂ«
 1014 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                          ^~~~~~~~~
      |                                                          ;
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1021:19: Fehler: Â»enum_integerÂ« wurde nicht innerhalb von Â»magic_enumÂ« deklariert
 1021 | using magic_enum::enum_integer;
      |                   ^~~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1026:70: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
 1026 | [[nodiscard]] constexpr auto enum_index(E value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::size_t>> {
      |                                                                      ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                      enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1026:92: Fehler: expected initializer before Â»<Â« token
 1026 | [[nodiscard]] constexpr auto enum_index(E value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::size_t>> {
      |                                                                                            ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1043:73: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
 1043 | [[nodiscard]] constexpr auto enum_contains(E value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                         ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                         enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1043:95: Fehler: expected initializer before Â»<Â« token
 1043 | [[nodiscard]] constexpr auto enum_contains(E value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                                               ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1052:92: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
 1052 | [[nodiscard]] constexpr auto enum_contains(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                                            ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                                            enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1052:114: Fehler: expected initializer before Â»<Â« token
 1052 | [[nodiscard]] constexpr auto enum_contains(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                                                                  ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1060:44: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
 1060 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1060:44: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1060:79: Fehler: expected primary-expression before Â»pÂ«
 1060 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                               ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1060:80: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
 1060 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                                ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1060:81: Fehler: expected Â»;Â« before Â»noexceptÂ«
 1060 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 ;
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1069:44: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
 1069 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1069:44: Fehler: Redeklaration von Â»template<class E> constexpr const auto magic_enum::flags::enum_containsÂ«
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1060:30: Anmerkung: vorherige Deklaration von Â»template<class E, class BinaryPredicate> constexpr<TypprÃ¤fixfehler> magic_enum::flags::enum_contains<E, BinaryPredicate>Â«
 1060 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, bool> {
      |                              ^~~~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1069:44: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
 1069 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1069:62: Fehler: expected Â»;Â« before Â»noexceptÂ«
 1069 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                              ^~~~~~~~~
      |                                                              ;
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1079:63: Fehler: Â»magic_enum::detail::enable_if_enum_flags_tÂ« wurde nicht deklariert
 1079 | template <typename Char, typename Traits, typename E, detail::enable_if_enum_flags_t<E, int> = 0>
      |                                                               ^~~~~~~~~~~~~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1079:85: Fehler: expected Â»>Â« before Â»<Â« token
 1079 | template <typename Char, typename Traits, typename E, detail::enable_if_enum_flags_t<E, int> = 0>
      |                                                                                     ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: In Funktion Â»std::basic_ostream<_CharT, _Traits>& magic_enum::flags::ostream_operators::operator<<(std::basic_ostream<_CharT, _Traits>&, E)Â«:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1084:7: Warnung: Â»init-statement in AuswahlanweisungenÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
 1084 |   if (const auto name = magic_enum::flags::enum_name<D>(value); !name.empty()) {
      |       ^~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1084:44: Fehler: Â»enum_nameÂ« ist kein Element von Â»magic_enum::flagsÂ«; meinten Sie Â»enum_castÂ«?
 1084 |   if (const auto name = magic_enum::flags::enum_name<D>(value); !name.empty()) {
      |                                            ^~~~~~~~~
      |                                            enum_cast
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1084:55: Fehler: expected primary-expression before Â»>Â« token
 1084 |   if (const auto name = magic_enum::flags::enum_name<D>(value); !name.empty()) {
      |                                                       ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1094:63: Fehler: Â»magic_enum::detail::enable_if_enum_flags_tÂ« wurde nicht deklariert
 1094 | template <typename Char, typename Traits, typename E, detail::enable_if_enum_flags_t<E, int> = 0>
      |                                                               ^~~~~~~~~~~~~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1094:85: Fehler: expected Â»>Â« before Â»<Â« token
 1094 | template <typename Char, typename Traits, typename E, detail::enable_if_enum_flags_t<E, int> = 0>
      |                                                                                     ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1095:84: Fehler: Â»optionalÂ« wurde nicht deklariert
 1095 | std::basic_ostream<Char, Traits>& operator<<(std::basic_ostream<Char, Traits>& os, optional<E> value) {
      |                                                                                    ^~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1095:92: Fehler: expected Â»,Â« or Â»...Â« before Â»<Â« token
 1095 | std::basic_ostream<Char, Traits>& operator<<(std::basic_ostream<Char, Traits>& os, optional<E> value) {
      |                                                                                            ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: In Funktion Â»std::basic_ostream<_CharT, _Traits>& magic_enum::flags::ostream_operators::operator<<(std::basic_ostream<_CharT, _Traits>&, int)Â«:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1096:10: Fehler: Â»valueÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht deklariert; meinten Sie Â»magic_enum::detail::valueÂ«?
 1096 |   return value.has_value() ? (os << value.value()) : os;
      |          ^~~~~
      |          magic_enum::detail::value
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:395:13: Anmerkung: Â»magic_enum::detail::valueÂ« ist hier deklariert
  395 | constexpr E value(std::size_t i) noexcept {
      |             ^~~~~
SHARED/guicommunicator/guicommunicator.cpp: In Elementfunktion Â»void guicommunicator::debug_event(guicommunicator::GUI_EVENT, bool)Â«:
SHARED/guicommunicator/guicommunicator.cpp:41:19: Fehler: Â»enum_nameÂ« ist kein Element von Â»magic_enumÂ«; meinten Sie Â»enum_castÂ«?
   41 |  e += magic_enum::enum_name(_event.event);
      |                   ^~~~~~~~~
      |                   enum_cast
SHARED/guicommunicator/guicommunicator.cpp:44:19: Fehler: Â»enum_nameÂ« ist kein Element von Â»magic_enumÂ«; meinten Sie Â»enum_castÂ«?
   44 |  e += magic_enum::enum_name(_event.type);
      |                   ^~~~~~~~~
      |                   enum_cast
SHARED/guicommunicator/guicommunicator.cpp: In Elementfunktion Â»void guicommunicator::createEvent(guicommunicator::GUI_ELEMENT, guicommunicator::GUI_VALUE_TYPE, std::string)Â«:
SHARED/guicommunicator/guicommunicator.cpp:73:8: Fehler: Â»string_viewÂ« ist kein Element von Â»stdÂ«
   73 |   std::string_view cfg_name = magic_enum::enum_name(_type);
      |        ^~~~~~~~~~~
SHARED/guicommunicator/guicommunicator.cpp:73:8: Anmerkung: Â»std::string_viewÂ« ist erst ab C++17 verfÃ¼gbar
SHARED/guicommunicator/guicommunicator.cpp:74:18: Fehler: Â»cfg_nameÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
   74 |  if (std::string(cfg_name).rfind("_SCREEN", 0) == 0) {tmp_event.ispageswitchevent = true; }
      |                  ^~~~~~~~
SHARED/guicommunicator/guicommunicator.cpp: In Elementfunktion Â»std::string guicommunicator::guievent2Json(guicommunicator::GUI_EVENT)Â«:
SHARED/guicommunicator/guicommunicator.cpp:122:30: Fehler: Â»enum_integerÂ« ist kein Element von Â»magic_enumÂ«
  122 |  root["event"] = magic_enum::enum_integer(_ev.event);
      |                              ^~~~~~~~~~~~
SHARED/guicommunicator/guicommunicator.cpp:123:29: Fehler: Â»enum_integerÂ« ist kein Element von Â»magic_enumÂ«
  123 |  root["type"] = magic_enum::enum_integer(_ev.type);
      |                             ^~~~~~~~~~~~
SHARED/guicommunicator/guicommunicator.cpp: In Elementfunktion Â»guicommunicator::GUI_EVENT guicommunicator::json2Guievent(json11::Json::object)Â«:
SHARED/guicommunicator/guicommunicator.cpp:165:29: Fehler: falsche Anzahl der Templateargumente (1, sollte 2 sein)
  165 |   auto enres =  magic_enum::enum_cast<guicommunicator::GUI_ELEMENT>(_jsobj["event"].int_value());
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In Datei, eingebunden von SHARED/guicommunicator/guicommunicator.h:22,
                 von SHARED/guicommunicator/guicommunicator.cpp:1:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:732:30: Anmerkung: fÃ¼r Â»template<class E, class BinaryPredicate> constexpr<typeprefixerror> magic_enum::enum_cast<E, BinaryPredicate>Â« bereitgestellt
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                              ^~~~~~~~~
SHARED/guicommunicator/guicommunicator.cpp:181:29: Fehler: falsche Anzahl der Templateargumente (1, sollte 2 sein)
  181 |   auto enres =  magic_enum::enum_cast<guicommunicator::GUI_VALUE_TYPE>(_jsobj["type"].int_value());
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In Datei, eingebunden von SHARED/guicommunicator/guicommunicator.h:22,
                 von SHARED/guicommunicator/guicommunicator.cpp:1:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:732:30: Anmerkung: fÃ¼r Â»template<class E, class BinaryPredicate> constexpr<typeprefixerror> magic_enum::enum_cast<E, BinaryPredicate>Â« bereitgestellt
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                              ^~~~~~~~~
SHARED/guicommunicator/guicommunicator.cpp: In Elementfunktion Â»guicommunicator::GUI_MESSAGE_BOX_RESULT guicommunicator::show_message_box(guicommunicator::GUI_MESSAGE_BOX_TYPE, std::string, int)Â«:
SHARED/guicommunicator/guicommunicator.cpp:473:1: Warnung: keine return-Anweisung in nicht void zurÃ¼ckgebender Funktion [-Wreturn-type]
  473 | }
      | ^
Makefile:233: recipe for target 'Debug/guicommunicator.o' failed
make[1]: *** [Debug/guicommunicator.o] Error 1
make[1]: Verzeichnis â€ž/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/build/atcctl-origin_controller/src/src_controller/controller/controllerâ€œ wird verlassen
package/pkg-generic.mk:247: recipe for target '/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/build/atcctl-origin_controller/.stamp_built' failed
make: *** [/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/build/atcctl-origin_controller/.stamp_built] Error 2
./build.sh: Zeile 64: ./output/images/rpi-firmware/config.txt: Datei oder Verzeichnis nicht gefunden
./build.sh: Zeile 65: ./output/images/rpi-firmware/config.txt: Datei oder Verzeichnis nicht gefunden
./build.sh: Zeile 66: ./output/images/rpi-firmware/config.txt: Datei oder Verzeichnis nicht gefunden
./build.sh: Zeile 67: ./output/images/rpi-firmware/config.txt: Datei oder Verzeichnis nicht gefunden
./build.sh: Zeile 68: ./output/images/rpi-firmware/config.txt: Datei oder Verzeichnis nicht gefunden
./build.sh: Zeile 69: ./output/images/rpi-firmware/config.txt: Datei oder Verzeichnis nicht gefunden
./build.sh: Zeile 70: ./output/images/rpi-firmware/config.txt: Datei oder Verzeichnis nicht gefunden
./build.sh: Zeile 71: ./output/images/rpi-firmware/config.txt: Datei oder Verzeichnis nicht gefunden
./build.sh: Zeile 74: ./output/images/rpi-firmware/config.txt: Datei oder Verzeichnis nicht gefunden
./build.sh: Zeile 75: ./output/images/rpi-firmware/config.txt: Datei oder Verzeichnis nicht gefunden
cat: ./output/images/rpi-firmware/config.txt: Datei oder Verzeichnis nicht gefunden
./build.sh: Zeile 80: ./output/images/rpi-firmware/cmdline.txt: Datei oder Verzeichnis nicht gefunden
./build.sh: Zeile 81: ./output/images/rpi-firmware/cmdline.txt: Datei oder Verzeichnis nicht gefunden
cat: ./output/images/rpi-firmware/cmdline.txt: Datei oder Verzeichnis nicht gefunden
touch: './output/images/rpi-firmware/PATCHED' kann nicht berÃ¼hrt werden: Datei oder Verzeichnis nicht gefunden
-- PATCH config.txt --
--BUILD FINAL WITH PATCHED config.txt--
>>> atcctl origin_controller Building
ATCCTL_BUILD!
/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/build/atcctl-origin_controller
-----------------
/usr/bin/make -j9 PATH="/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/bin:/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/sbin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin" AR="/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/bin/arm-buildroot-linux-gnueabihf-ar" AS="/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/bin/arm-buildroot-linux-gnueabihf-as" LD="/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/bin/arm-buildroot-linux-gnueabihf-ld" NM="/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/bin/arm-buildroot-linux-gnueabihf-nm" CC="/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/bin/arm-buildroot-linux-gnueabihf-gcc" GCC="/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/bin/arm-buildroot-linux-gnueabihf-gcc" CPP="/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/bin/arm-buildroot-linux-gnueabihf-cpp" CXX="/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/bin/arm-buildroot-linux-gnueabihf-g++" FC="/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/bin/arm-buildroot-linux-gnueabihf-gfortran" F77="/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/bin/arm-buildroot-linux-gnueabihf-gfortran" RANLIB="/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/bin/arm-buildroot-linux-gnueabihf-ranlib" READELF="/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/bin/arm-buildroot-linux-gnueabihf-readelf" STRIP="/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/bin/arm-buildroot-linux-gnueabihf-strip" OBJCOPY="/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/bin/arm-buildroot-linux-gnueabihf-objcopy" OBJDUMP="/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/bin/arm-buildroot-linux-gnueabihf-objdump" AR_FOR_BUILD="/usr/bin/ar" AS_FOR_BUILD="/usr/bin/as" CC_FOR_BUILD="/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/bin/ccache /usr/bin/gcc" GCC_FOR_BUILD="/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/bin/ccache /usr/bin/gcc" CXX_FOR_BUILD="/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/bin/ccache /usr/bin/g++" LD_FOR_BUILD="/usr/bin/ld" CPPFLAGS_FOR_BUILD="-I/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/include" CFLAGS_FOR_BUILD="-O2 -I/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/include" CXXFLAGS_FOR_BUILD="-O2 -I/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/include" LDFLAGS_FOR_BUILD="-L/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/lib -Wl,-rpath,/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/lib" FCFLAGS_FOR_BUILD="" DEFAULT_ASSEMBLER="/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/bin/arm-buildroot-linux-gnueabihf-as" DEFAULT_LINKER="/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/bin/arm-buildroot-linux-gnueabihf-ld" CPPFLAGS="-D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64" CFLAGS="-D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  " CXXFLAGS="-D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  " LDFLAGS="" FCFLAGS=" -Os " FFLAGS=" -Os " PKG_CONFIG="/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/bin/pkg-config" STAGING_DIR="/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/sysroot" INTLTOOL_PERL=/usr/bin/perl -C /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/build/atcctl-origin_controller/src/src_controller/controller/controller CONFIG=DEBUGLOCAL TARGETNAME=atc_controller
make[1]: Verzeichnis â€ž/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/build/atcctl-origin_controller/src/src_controller/controller/controllerâ€œ wird betreten
/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/bin/arm-buildroot-linux-gnueabihf-g++ -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os   -c BackendConnector.cpp -o Debug/BackendConnector.o -MD -MF Debug/BackendConnector.dep
/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/bin/arm-buildroot-linux-gnueabihf-g++ -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os   -c ChessBoard.cpp -o Debug/ChessBoard.o -MD -MF Debug/ChessBoard.dep
/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/bin/arm-buildroot-linux-gnueabihf-g++ -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os   -c ConfigParser.cpp -o Debug/ConfigParser.o -MD -MF Debug/ConfigParser.dep
/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/bin/arm-buildroot-linux-gnueabihf-g++ -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os   -c controller.cpp -o Debug/controller.o -MD -MF Debug/controller.dep
/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/bin/arm-buildroot-linux-gnueabihf-g++ -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os   -c GCodeSender.cpp -o Debug/GCodeSender.o -MD -MF Debug/GCodeSender.dep
/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/bin/arm-buildroot-linux-gnueabihf-g++ -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os   -c HardwareInterface.cpp -o Debug/HardwareInterface.o -MD -MF Debug/HardwareInterface.dep
/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/bin/arm-buildroot-linux-gnueabihf-g++ -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os   -c SHARED/guicommunicator/guicommunicator.cpp -o Debug/guicommunicator.o -MD -MF Debug/guicommunicator.dep
/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/bin/arm-buildroot-linux-gnueabihf-g++ -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os   -c SHARED/serialib-master/lib/serialib.cpp -o Debug/serialib.o -MD -MF Debug/serialib.dep
/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/bin/arm-buildroot-linux-gnueabihf-gcc -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os   -c SHARED/WiringPi-master/wiringPi/drcNet.c -o Debug/drcNet.o -MD -MF Debug/drcNet.dep
/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/bin/arm-buildroot-linux-gnueabihf-gcc -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os   -c SHARED/WiringPi-master/wiringPi/drcSerial.c -o Debug/drcSerial.o -MD -MF Debug/drcSerial.dep
/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/bin/arm-buildroot-linux-gnueabihf-gcc -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os   -c SHARED/WiringPi-master/wiringPi/piHiPri.c -o Debug/piHiPri.o -MD -MF Debug/piHiPri.dep
/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/bin/arm-buildroot-linux-gnueabihf-gcc -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os   -c SHARED/WiringPi-master/wiringPi/piThread.c -o Debug/piThread.o -MD -MF Debug/piThread.dep
/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/bin/arm-buildroot-linux-gnueabihf-gcc -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os   -c SHARED/WiringPi-master/wiringPi/pseudoPins.c -o Debug/pseudoPins.o -MD -MF Debug/pseudoPins.dep
/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/bin/arm-buildroot-linux-gnueabihf-gcc -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os   -c SHARED/WiringPi-master/wiringPi/softPwm.c -o Debug/softPwm.o -MD -MF Debug/softPwm.dep
/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/bin/arm-buildroot-linux-gnueabihf-gcc -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os   -c SHARED/WiringPi-master/wiringPi/softServo.c -o Debug/softServo.o -MD -MF Debug/softServo.dep
In Datei, eingebunden von ConfigParser.h:13,
                 von GCodeSender.h:16,
                 von GCodeSender.cpp:1:
SHARED/magic_enum-master/include/magic_enum.hpp:99:23: Fehler: Â»optionalÂ« in Namensraum Â»stdÂ« bezeichnet keinen Templatetyp
   99 | using optional = std::optional<T>;
      |                       ^~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:99:18: Anmerkung: Â»std::optionalÂ« ist erst ab C++17 verfÃ¼gbar
   99 | using optional = std::optional<T>;
      |                  ^~~
SHARED/magic_enum-master/include/magic_enum.hpp:106:26: Fehler: Â»string_viewÂ« in Namensbereich Â»stdÂ« bezeichnet keinen Typ
  106 | using string_view = std::string_view;
      |                          ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:106:21: Anmerkung: Â»std::string_viewÂ« ist erst ab C++17 verfÃ¼gbar
  106 | using string_view = std::string_view;
      |                     ^~~
In Datei, eingebunden von ConfigParser.h:13,
                 von GCodeSender.h:16,
                 von GCodeSender.cpp:1:
SHARED/magic_enum-master/include/magic_enum.hpp:123:22: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  123 |   static_assert(std::is_enum_v<E>, "magic_enum::customize::enum_range requires enum type.");
      |                      ^~~~~~~~~
      |                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:123:33: Fehler: expected primary-expression before Â»>Â« token
  123 |   static_assert(std::is_enum_v<E>, "magic_enum::customize::enum_range requires enum type.");
      |                                 ^
SHARED/magic_enum-master/include/magic_enum.hpp:123:34: Fehler: expected primary-expression before Â»,Â« token
  123 |   static_assert(std::is_enum_v<E>, "magic_enum::customize::enum_range requires enum type.");
      |                                  ^
SHARED/magic_enum-master/include/magic_enum.hpp:124:3: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  124 |   inline static constexpr int min = MAGIC_ENUM_RANGE_MIN;
      |   ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:125:3: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  125 |   inline static constexpr int max = MAGIC_ENUM_RANGE_MAX;
      |   ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:139:11: Fehler: Â»string_viewÂ« bezeichnet keinen Typ
  139 | constexpr string_view enum_name(E) noexcept {
      |           ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:159:47: Fehler: expected Â»)Â« before Â»strÂ«
  159 |   constexpr explicit static_string(string_view str) noexcept : static_string{str, std::make_index_sequence<N>{}} {
      |                                   ~           ^~~~
      |                                               )
SHARED/magic_enum-master/include/magic_enum.hpp:159:114: Fehler: expected unqualified-id before Â»{Â« token
  159 |   constexpr explicit static_string(string_view str) noexcept : static_string{str, std::make_index_sequence<N>{}} {
      |                                                                                                                  ^
SHARED/magic_enum-master/include/magic_enum.hpp:167:22: Fehler: expected type-specifier before Â»string_viewÂ«
  167 |   constexpr operator string_view() const noexcept { return {data(), size()}; }
      |                      ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:171:38: Fehler: expected Â»)Â« before Â»strÂ«
  171 |   constexpr static_string(string_view str, std::index_sequence<I...>) noexcept : chars{{str[I]..., '\0'}} {}
      |                          ~           ^~~~
      |                                      )
SHARED/magic_enum-master/include/magic_enum.hpp:171:107: Fehler: expected unqualified-id before Â»{Â« token
  171 |   constexpr static_string(string_view str, std::index_sequence<I...>) noexcept : chars{{str[I]..., '\0'}} {}
      |                                                                                                           ^
SHARED/magic_enum-master/include/magic_enum.hpp:178:13: Fehler: nur Deklarationen von Konstruktoren und Umwandlungsoperatoren kÃ¶nnen Â»explicitÂ« sein
  178 |   constexpr explicit static_string(string_view) noexcept {}
      |             ^~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:178:36: Fehler: Feld Â»string_viewÂ« hat unvollstÃ¤ndigen Typen Â»const magic_enum::detail::static_string<0>Â«
  178 |   constexpr explicit static_string(string_view) noexcept {}
      |                                    ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:177:8: Anmerkung: Definition von Â»struct magic_enum::detail::static_string<0>Â« ist erst nach der schlieÃŸenden Klammer vollendet
  177 | struct static_string<0> {
      |        ^~~~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:178:3: Fehler: nicht-statisches Datenelement Â»string_viewÂ« als Â»constexprÂ« deklariert
  178 |   constexpr explicit static_string(string_view) noexcept {}
      |   ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:178:47: Fehler: Â»;Â« am Ende von Elementdeklaration erwartet
  178 |   constexpr explicit static_string(string_view) noexcept {}
      |                                               ^
      |                                                ;
SHARED/magic_enum-master/include/magic_enum.hpp:178:49: Fehler: expected unqualified-id before Â»noexceptÂ«
  178 |   constexpr explicit static_string(string_view) noexcept {}
      |                                                 ^~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:184:22: Fehler: expected type-specifier before Â»string_viewÂ«
  184 |   constexpr operator string_view() const noexcept { return {}; }
      |                      ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:193:11: Fehler: Â»string_viewÂ« bezeichnet keinen Typ
  193 | constexpr string_view pretty_name(string_view name) noexcept {
      |           ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:213:28: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  213 | constexpr std::size_t find(string_view str, char c) noexcept {
      |                            ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:213:45: Fehler: expected primary-expression before Â»charÂ«
  213 | constexpr std::size_t find(string_view str, char c) noexcept {
      |                                             ^~~~
SHARED/magic_enum-master/include/magic_enum.hpp:213:51: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
  213 | constexpr std::size_t find(string_view str, char c) noexcept {
      |                                                   ^
SHARED/magic_enum-master/include/magic_enum.hpp:235:26: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                          ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:235:43: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                                           ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:235:75: Fehler: expected primary-expression before Â»&&Â« token
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                                                                           ^~
SHARED/magic_enum-master/include/magic_enum.hpp:235:78: Fehler: Â»pÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                                                                              ^
SHARED/magic_enum-master/include/magic_enum.hpp:235:79: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                                                                               ^
SHARED/magic_enum-master/include/magic_enum.hpp:235:80: Fehler: expected Â»;Â« before Â»noexceptÂ«
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                                                                                ^~~~~~~~~
      |                                                                                ;
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr bool magic_enum::detail::cmp_less(L, R)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:264:22: Fehler: Â»is_integral_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_integralÂ«?
  264 |   static_assert(std::is_integral_v<L> && std::is_integral_v<R>, "magic_enum::detail::cmp_less requires integral type.");
      |                      ^~~~~~~~~~~~~
      |                      is_integral
SHARED/magic_enum-master/include/magic_enum.hpp:264:37: Fehler: expected primary-expression before Â»>Â« token
  264 |   static_assert(std::is_integral_v<L> && std::is_integral_v<R>, "magic_enum::detail::cmp_less requires integral type.");
      |                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:264:45: Fehler: expected Â»,Â« before Â»::Â« token
  264 |   static_assert(std::is_integral_v<L> && std::is_integral_v<R>, "magic_enum::detail::cmp_less requires integral type.");
      |                                             ^~
      |                                             ,
SHARED/magic_enum-master/include/magic_enum.hpp:264:45: Fehler: expected string-literal before Â»::Â« token
  264 |   static_assert(std::is_integral_v<L> && std::is_integral_v<R>, "magic_enum::detail::cmp_less requires integral type.");
      |                                             ^~
SHARED/magic_enum-master/include/magic_enum.hpp:264:45: Fehler: expected Â»)Â« before Â»::Â« token
  264 |   static_assert(std::is_integral_v<L> && std::is_integral_v<R>, "magic_enum::detail::cmp_less requires integral type.");
      |                ~                            ^~
      |                                             )
SHARED/magic_enum-master/include/magic_enum.hpp:266:6: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |      ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:266:22: Fehler: Â»is_signed_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_signedÂ«?
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                      ^~~~~~~~~~~
      |                      is_signed
SHARED/magic_enum-master/include/magic_enum.hpp:266:35: Fehler: expected primary-expression before Â»>Â« token
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                                   ^
SHARED/magic_enum-master/include/magic_enum.hpp:266:37: Fehler: expected primary-expression before Â»==Â« token
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                                     ^~
SHARED/magic_enum-master/include/magic_enum.hpp:266:45: Fehler: Â»is_signed_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_signedÂ«?
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                                             ^~~~~~~~~~~
      |                                             is_signed
SHARED/magic_enum-master/include/magic_enum.hpp:266:58: Fehler: expected primary-expression before Â»>Â« token
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                                                          ^
SHARED/magic_enum-master/include/magic_enum.hpp:266:59: Fehler: expected primary-expression before Â»)Â« token
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                                                           ^
SHARED/magic_enum-master/include/magic_enum.hpp:269:13: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  269 |   } else if constexpr (std::is_signed_v<R>) {
      |             ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:269:29: Fehler: Â»is_signed_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_signedÂ«?
  269 |   } else if constexpr (std::is_signed_v<R>) {
      |                             ^~~~~~~~~~~
      |                             is_signed
SHARED/magic_enum-master/include/magic_enum.hpp:269:42: Fehler: expected primary-expression before Â»>Â« token
  269 |   } else if constexpr (std::is_signed_v<R>) {
      |                                          ^
SHARED/magic_enum-master/include/magic_enum.hpp:269:43: Fehler: expected primary-expression before Â»)Â« token
  269 |   } else if constexpr (std::is_signed_v<R>) {
      |                                           ^
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr I magic_enum::detail::log2(I)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:280:22: Fehler: Â»is_integral_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_integralÂ«?
  280 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::log2 requires integral type.");
      |                      ^~~~~~~~~~~~~
      |                      is_integral
SHARED/magic_enum-master/include/magic_enum.hpp:280:37: Fehler: expected primary-expression before Â»>Â« token
  280 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::log2 requires integral type.");
      |                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:280:38: Fehler: expected primary-expression before Â»,Â« token
  280 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::log2 requires integral type.");
      |                                      ^
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr bool magic_enum::detail::is_pow2(I)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:290:22: Fehler: Â»is_integral_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_integralÂ«?
  290 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::is_pow2 requires integral type.");
      |                      ^~~~~~~~~~~~~
      |                      is_integral
SHARED/magic_enum-master/include/magic_enum.hpp:290:37: Fehler: expected primary-expression before Â»>Â« token
  290 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::is_pow2 requires integral type.");
      |                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:290:38: Fehler: expected primary-expression before Â»,Â« token
  290 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::is_pow2 requires integral type.");
      |                                      ^
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:296:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  296 | inline constexpr bool is_enum_v = std::is_enum_v<T> && std::is_same_v<T, std::decay_t<T>>;
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:296:40: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  296 | inline constexpr bool is_enum_v = std::is_enum_v<T> && std::is_same_v<T, std::decay_t<T>>;
      |                                        ^~~~~~~~~
      |                                        is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:296:51: Fehler: expected primary-expression before Â»>Â« token
  296 | inline constexpr bool is_enum_v = std::is_enum_v<T> && std::is_same_v<T, std::decay_t<T>>;
      |                                                   ^
SHARED/magic_enum-master/include/magic_enum.hpp:296:56: Fehler: Marke Â»stdÂ« auÃŸerhalb einer Funktion referenziert
  296 | inline constexpr bool is_enum_v = std::is_enum_v<T> && std::is_same_v<T, std::decay_t<T>>;
      |                                                        ^~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr auto magic_enum::detail::n()Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:305:13: Fehler: Â»string_viewÂ« bezeichnet keinen Typ
  305 |   constexpr string_view name{__PRETTY_FUNCTION__ + 49, sizeof(__PRETTY_FUNCTION__) - 51};
      |             ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:309:24: Fehler: Â»nameÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  309 |   return static_string<name.size()>{name};
      |                        ^~~~
SHARED/magic_enum-master/include/magic_enum.hpp:309:35: Fehler: Templateargument 1 ist ungÃ¼ltig
  309 |   return static_string<name.size()>{name};
      |                                   ^
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:316:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  316 | inline constexpr auto type_name_v = n<E>();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr auto magic_enum::detail::n()Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:321:43: Fehler: Â»enum_nameÂ« ist kein Element von Â»magic_enum::customizeÂ«; meinten Sie Â»enum_rangeÂ«?
  321 |   constexpr auto custom_name = customize::enum_name<E>(V);
      |                                           ^~~~~~~~~
      |                                           enum_range
SHARED/magic_enum-master/include/magic_enum.hpp:321:54: Fehler: expected primary-expression before Â»>Â« token
  321 |   constexpr auto custom_name = customize::enum_name<E>(V);
      |                                                      ^
SHARED/magic_enum-master/include/magic_enum.hpp:323:6: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  323 |   if constexpr (custom_name.empty()) {
      |      ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:341:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  341 | inline constexpr auto enum_name_v = n<E, V>();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:343:23: Fehler: Â»autoÂ«-Parameter darf in diesem Kontext nicht verwendet werden
  343 | template <typename E, auto V>
      |                       ^~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr int magic_enum::detail::reflected_min()Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:354:6: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  354 |   if constexpr (IsFlags) {
      |      ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:361:8: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  361 |     if constexpr (cmp_less(lhs, rhs)) {
      |        ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr int magic_enum::detail::reflected_max()Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:373:6: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  373 |   if constexpr (IsFlags) {
      |      ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:380:8: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  380 |     if constexpr (cmp_less(lhs, rhs)) {
      |        ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:389:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  389 | inline constexpr auto reflected_min_v = reflected_min<E, IsFlags>();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:392:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  392 | inline constexpr auto reflected_max_v = reflected_max<E, IsFlags>();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr E magic_enum::detail::value(std::size_t)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:398:6: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  398 |   if constexpr (IsFlags) {
      |      ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr auto magic_enum::detail::values(std::index_sequence<I ...>)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:409:62: Fehler: Â»constexprÂ«-Lambda ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  409 |   constexpr std::size_t count = [](decltype((valid)) valid_) constexpr noexcept -> std::size_t {
      |                                                              ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:419:22: Fehler: der Wert von Â»countÂ« ist in konstantem Ausdruck nicht verwendbar
  419 |   std::array<E, count> values{};
      |                      ^
SHARED/magic_enum-master/include/magic_enum.hpp:409:25: Anmerkung: Â»countÂ« in seiner eigenen Initialisierung verwendet
  409 |   constexpr std::size_t count = [](decltype((valid)) valid_) constexpr noexcept -> std::size_t {
      |                         ^~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:419:22: Anmerkung: in Templateargument fÃ¼r Typ Â»unsigned intÂ«
  419 |   std::array<E, count> values{};
      |                      ^
SHARED/magic_enum-master/include/magic_enum.hpp:422:13: Fehler: ungÃ¼ltige Typen Â»int[std::size_t {aka unsigned int}]Â« fÃ¼r Feldindex
  422 |       values[v++] = value<E, Min, IsFlags>(i);
      |             ^
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:440:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  440 | inline constexpr auto values_v = values<E, IsFlags>();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:446:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  446 | inline constexpr auto count_v = values_v<E, IsFlags>.size();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:449:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  449 | inline constexpr auto min_v = static_cast<U>(values_v<E, IsFlags>.front());
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:452:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  452 | inline constexpr auto max_v = static_cast<U>(values_v<E, IsFlags>.back());
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:467:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  467 | inline constexpr auto range_size_v = range_size<E, IsFlags>();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:473:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  473 | inline constexpr auto invalid_index_v = (std::numeric_limits<index_t<E, IsFlags>>::max)();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:485:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  485 | inline constexpr auto indexes_v = indexes<E, IsFlags>(std::make_index_sequence<range_size_v<E, IsFlags>>{});
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr auto magic_enum::detail::names(std::index_sequence<I ...>)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:491:21: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  491 |   return std::array<string_view, sizeof...(I)>{{enum_name_v<E, values_v<E, IsFlags>[I]>...}};
      |                     ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:491:46: Fehler: Templateargument 1 ist ungÃ¼ltig
  491 |   return std::array<string_view, sizeof...(I)>{{enum_name_v<E, values_v<E, IsFlags>[I]>...}};
      |                                              ^
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:495:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  495 | inline constexpr auto names_v = names<E, IsFlags>(std::make_index_sequence<count_v<E, IsFlags>>{});
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr auto magic_enum::detail::entries(std::index_sequence<I ...>)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:504:34: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  504 |   return std::array<std::pair<E, string_view>, sizeof...(I)>{{{values_v<E, IsFlags>[I], enum_name_v<E, values_v<E, IsFlags>[I]>}...}};
      |                                  ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:504:45: Fehler: Templateargument 2 ist ungÃ¼ltig
  504 |   return std::array<std::pair<E, string_view>, sizeof...(I)>{{{values_v<E, IsFlags>[I], enum_name_v<E, values_v<E, IsFlags>[I]>}...}};
      |                                             ^
SHARED/magic_enum-master/include/magic_enum.hpp:504:60: Fehler: Templateargument 1 ist ungÃ¼ltig
  504 |   return std::array<std::pair<E, string_view>, sizeof...(I)>{{{values_v<E, IsFlags>[I], enum_name_v<E, values_v<E, IsFlags>[I]>}...}};
      |                                                            ^
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:508:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  508 | inline constexpr auto entries_v = entries<E, IsFlags>(std::make_index_sequence<count_v<E, IsFlags>>{});
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:521:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  521 | inline constexpr bool is_sparse_v = is_sparse<E, IsFlags>();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr std::size_t magic_enum::detail::undex(U)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:527:7: Warnung: Â»init-statement in AuswahlanweisungenÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  527 |   if (const auto i = static_cast<std::size_t>(value - min_v<E>); value >= min_v<E> && value <= max_v<E>) {
      |       ^~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:528:8: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  528 |     if constexpr (is_sparse_v<E>) {
      |        ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:529:11: Warnung: Â»init-statement in AuswahlanweisungenÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  529 |       if (const auto idx = indexes_v<E>[i]; idx != invalid_index_v<E>) {
      |           ^~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:579:55: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  579 | using enable_if_enum_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, false, T, R>::type;
      |                                                       ^~~~~~~~~
      |                                                       is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:579:55: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  579 | using enable_if_enum_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, false, T, R>::type;
      |                                                       ^~~~~~~~~
      |                                                       is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:579:79: Fehler: falsche Anzahl der Templateargumente (1, sollte 4 sein)
  579 | using enable_if_enum_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, false, T, R>::type;
      |                                                                               ^~
SHARED/magic_enum-master/include/magic_enum.hpp:560:8: Anmerkung: fÃ¼r Â»template<bool <anonym>, bool <anonym>, class T, class R> struct magic_enum::detail::enable_if_enumÂ« bereitgestellt
  560 | struct enable_if_enum {};
      |        ^~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:579:35: Fehler: Spezifikation mit geschachteltem Namen erwartet
  579 | using enable_if_enum_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, false, T, R>::type;
      |                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:582:61: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  582 | using enable_if_enum_flags_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, true, T, R>::type;
      |                                                             ^~~~~~~~~
      |                                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:582:61: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  582 | using enable_if_enum_flags_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, true, T, R>::type;
      |                                                             ^~~~~~~~~
      |                                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:582:85: Fehler: falsche Anzahl der Templateargumente (1, sollte 4 sein)
  582 | using enable_if_enum_flags_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, true, T, R>::type;
      |                                                                                     ^~
SHARED/magic_enum-master/include/magic_enum.hpp:560:8: Anmerkung: fÃ¼r Â»template<bool <anonym>, bool <anonym>, class T, class R> struct magic_enum::detail::enable_if_enumÂ« bereitgestellt
  560 | struct enable_if_enum {};
      |        ^~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:582:41: Fehler: Spezifikation mit geschachteltem Namen erwartet
  582 | using enable_if_enum_flags_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, true, T, R>::type;
      |                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:584:63: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  584 | template <typename T, typename Enable = std::enable_if_t<std::is_enum_v<std::decay_t<T>>>>
      |                                                               ^~~~~~~~~
      |                                                               is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:584:63: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  584 | template <typename T, typename Enable = std::enable_if_t<std::is_enum_v<std::decay_t<T>>>>
      |                                                               ^~~~~~~~~
      |                                                               is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:584:87: Fehler: Templateargument 1 ist ungÃ¼ltig
  584 | template <typename T, typename Enable = std::enable_if_t<std::is_enum_v<std::decay_t<T>>>>
      |                                                                                       ^~
SHARED/magic_enum-master/include/magic_enum.hpp:584:89: Fehler: expected Â»>Â« before Â»>>Â« token
  584 | template <typename T, typename Enable = std::enable_if_t<std::is_enum_v<std::decay_t<T>>>>
      |                                                                                         ^~
SHARED/magic_enum-master/include/magic_enum.hpp:587:35: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  587 | template <typename T, bool = std::is_enum_v<T>>
      |                                   ^~~~~~~~~
      |                                   is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:587:46: Fehler: expected primary-expression before Â»>>Â« token
  587 | template <typename T, bool = std::is_enum_v<T>>
      |                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:587:46: Fehler: expected Â»>Â« before Â»>>Â« token
SHARED/magic_enum-master/include/magic_enum.hpp:591:52: Fehler: expected template-name before Â»<Â« token
  591 | struct is_scoped_enum<T, true> : std::bool_constant<!std::is_convertible_v<T, std::underlying_type_t<T>>> {};
      |                                                    ^
SHARED/magic_enum-master/include/magic_enum.hpp:591:52: Fehler: expected Â»{Â« before Â»<Â« token
SHARED/magic_enum-master/include/magic_enum.hpp:593:35: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  593 | template <typename T, bool = std::is_enum_v<T>>
      |                                   ^~~~~~~~~
      |                                   is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:593:46: Fehler: expected primary-expression before Â»>>Â« token
  593 | template <typename T, bool = std::is_enum_v<T>>
      |                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:593:46: Fehler: expected Â»>Â« before Â»>>Â« token
SHARED/magic_enum-master/include/magic_enum.hpp:597:54: Fehler: expected template-name before Â»<Â« token
  597 | struct is_unscoped_enum<T, true> : std::bool_constant<std::is_convertible_v<T, std::underlying_type_t<T>>> {};
      |                                                      ^
SHARED/magic_enum-master/include/magic_enum.hpp:597:54: Fehler: expected Â»{Â« before Â»<Â« token
SHARED/magic_enum-master/include/magic_enum.hpp:599:35: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  599 | template <typename T, bool = std::is_enum_v<std::decay_t<T>>>
      |                                   ^~~~~~~~~
      |                                   is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:599:59: Fehler: expected primary-expression before Â»>Â« token
  599 | template <typename T, bool = std::is_enum_v<std::decay_t<T>>>
      |                                                           ^~
SHARED/magic_enum-master/include/magic_enum.hpp:599:61: Fehler: expected unqualified-id before Â»>Â« token
  599 | template <typename T, bool = std::is_enum_v<std::decay_t<T>>>
      |                                                             ^
SHARED/magic_enum-master/include/magic_enum.hpp:603:8: Fehler: Â»underlying_typeÂ« ist kein Klassentemplate
  603 | struct underlying_type<T, true> : std::underlying_type<std::decay_t<T>> {};
      |        ^~~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:608:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  608 | inline constexpr bool is_magic_enum_supported = detail::supported<void>::value;
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:611:36: Fehler: Templateargument 2 ist ungÃ¼ltig
  611 | using Enum = detail::enum_concept<T>;
      |                                    ^
SHARED/magic_enum-master/include/magic_enum.hpp:616:53: Fehler: Templateargument 2 ist ungÃ¼ltig
  616 | struct is_unscoped_enum : detail::is_unscoped_enum<T> {};
      |                                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:619:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  619 | inline constexpr bool is_unscoped_enum_v = is_unscoped_enum<T>::value;
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:624:49: Fehler: Templateargument 2 ist ungÃ¼ltig
  624 | struct is_scoped_enum : detail::is_scoped_enum<T> {};
      |                                                 ^
SHARED/magic_enum-master/include/magic_enum.hpp:627:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  627 | inline constexpr bool is_scoped_enum_v = is_scoped_enum<T>::value;
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:105: Fehler: Templateargument 1 ist ungÃ¼ltig
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                                         ^~
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:105: Fehler: Templateargument 1 ist ungÃ¼ltig
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                                         ^~
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:105: Fehler: Templateargument 1 ist ungÃ¼ltig
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                                         ^~
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:105: Fehler: Templateargument 1 ist ungÃ¼ltig
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                                         ^~
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:105: Fehler: Templateargument 1 ist ungÃ¼ltig
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                                         ^~
SHARED/magic_enum-master/include/magic_enum.hpp:639:59: Fehler: ungÃ¼ltige Verwendung des Template-Namens Â»std::enable_if_tÂ« ohne eine Argumentliste
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                           ^~~
In Datei, eingebunden von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/bits/move.h:57,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/bits/stl_pair.h:59,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/bits/stl_algobase.h:64,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/bits/char_traits.h:39,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/string:40,
                 von GCodeSender.h:5,
                 von GCodeSender.cpp:1:
/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/type_traits:2554:11: Anmerkung: Â»template<bool _Cond, class _Tp> using enable_if_t = typename std::enable_if::typeÂ« ist hier deklariert
 2554 |     using enable_if_t = typename enable_if<_Cond, _Tp>::type;
      |           ^~~~~~~~~~~
In Datei, eingebunden von ConfigParser.h:13,
                 von GCodeSender.h:16,
                 von GCodeSender.cpp:1:
SHARED/magic_enum-master/include/magic_enum.hpp:639:75: Fehler: expected initializer before Â»<Â« token
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                           ^
SHARED/magic_enum-master/include/magic_enum.hpp:649:63: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  649 | [[nodiscard]] constexpr auto enum_count() noexcept -> detail::enable_if_enum_t<E, std::size_t> {
      |                                                               ^~~~~~~~~~~~~~~~
      |                                                               enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:649:79: Fehler: expected initializer before Â»<Â« token
  649 | [[nodiscard]] constexpr auto enum_count() noexcept -> detail::enable_if_enum_t<E, std::size_t> {
      |                                                                               ^
SHARED/magic_enum-master/include/magic_enum.hpp:658:80: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  658 | [[nodiscard]] constexpr auto enum_value(std::size_t index) noexcept -> detail::enable_if_enum_t<E, std::decay_t<E>> {
      |                                                                                ^~~~~~~~~~~~~~~~
      |                                                                                enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:658:96: Fehler: expected initializer before Â»<Â« token
  658 | [[nodiscard]] constexpr auto enum_value(std::size_t index) noexcept -> detail::enable_if_enum_t<E, std::decay_t<E>> {
      |                                                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:670:64: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  670 | [[nodiscard]] constexpr auto enum_values() noexcept -> detail::enable_if_enum_t<E, detail::values_t<E>> {
      |                                                                ^~~~~~~~~~~~~~~~
      |                                                                enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:670:80: Fehler: expected initializer before Â»<Â« token
  670 | [[nodiscard]] constexpr auto enum_values() noexcept -> detail::enable_if_enum_t<E, detail::values_t<E>> {
      |                                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:678:11: Fehler: Â»autoÂ«-Parameter darf in diesem Kontext nicht verwendet werden
  678 | template <auto V>
      |           ^~~~
SHARED/magic_enum-master/include/magic_enum.hpp:679:76: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  679 | [[nodiscard]] constexpr auto enum_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<decltype(V)>>, string_view> {
      |                                                                            ^~~~~~~~~
      |                                                                            is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:679:76: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  679 | [[nodiscard]] constexpr auto enum_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<decltype(V)>>, string_view> {
      |                                                                            ^~~~~~~~~
      |                                                                            is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:679:99: Fehler: Templateargument 1 ist ungÃ¼ltig
  679 | [[nodiscard]] constexpr auto enum_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<decltype(V)>>, string_view> {
      |                                                                                                   ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:679:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  679 | [[nodiscard]] constexpr auto enum_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<decltype(V)>>, string_view> {
      |                                                                                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:690:69: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  690 | [[nodiscard]] constexpr auto enum_name(E value) noexcept -> detail::enable_if_enum_t<E, string_view> {
      |                                                                     ^~~~~~~~~~~~~~~~
      |                                                                     enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:690:85: Fehler: expected initializer before Â»<Â« token
  690 | [[nodiscard]] constexpr auto enum_name(E value) noexcept -> detail::enable_if_enum_t<E, string_view> {
      |                                                                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:702:63: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  702 | [[nodiscard]] constexpr auto enum_names() noexcept -> detail::enable_if_enum_t<E, detail::names_t<E>> {
      |                                                               ^~~~~~~~~~~~~~~~
      |                                                               enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:702:79: Fehler: expected initializer before Â»<Â« token
  702 | [[nodiscard]] constexpr auto enum_names() noexcept -> detail::enable_if_enum_t<E, detail::names_t<E>> {
      |                                                                               ^
SHARED/magic_enum-master/include/magic_enum.hpp:710:65: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  710 | [[nodiscard]] constexpr auto enum_entries() noexcept -> detail::enable_if_enum_t<E, detail::entries_t<E>> {
      |                                                                 ^~~~~~~~~~~~~~~~
      |                                                                 enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:710:81: Fehler: expected initializer before Â»<Â« token
  710 | [[nodiscard]] constexpr auto enum_entries() noexcept -> detail::enable_if_enum_t<E, detail::entries_t<E>> {
      |                                                                                 ^
SHARED/magic_enum-master/include/magic_enum.hpp:719:88: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  719 | [[nodiscard]] constexpr auto enum_cast(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                                                        ^~~~~~~~~~~~~~~~
      |                                                                                        enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:719:104: Fehler: expected initializer before Â»<Â« token
  719 | [[nodiscard]] constexpr auto enum_cast(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:732:40: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:732:40: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
SHARED/magic_enum-master/include/magic_enum.hpp:732:75: Fehler: expected primary-expression before Â»pÂ«
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                                           ^
SHARED/magic_enum-master/include/magic_enum.hpp:732:76: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                                            ^
SHARED/magic_enum-master/include/magic_enum.hpp:732:77: Fehler: expected Â»;Â« before Â»noexceptÂ«
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                                             ^~~~~~~~~
      |                                                                             ;
SHARED/magic_enum-master/include/magic_enum.hpp:748:40: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
  748 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:748:40: Fehler: Redeklaration von Â»template<class E> constexpr const auto magic_enum::enum_castÂ«
SHARED/magic_enum-master/include/magic_enum.hpp:732:30: Anmerkung: vorherige Deklaration von Â»template<class E, class BinaryPredicate> constexpr<TypprÃ¤fixfehler> magic_enum::enum_cast<E, BinaryPredicate>Â«
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                              ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:748:40: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  748 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:748:58: Fehler: expected Â»;Â« before Â»noexceptÂ«
  748 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                          ^~~~~~~~~
      |                                                          ;
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:756:64: Fehler: ungÃ¼ltige Verwendung des Template-Namens Â»std::enable_if_tÂ« ohne eine Argumentliste
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                ^~~
In Datei, eingebunden von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/bits/move.h:57,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/bits/stl_pair.h:59,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/bits/stl_algobase.h:64,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/bits/char_traits.h:39,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/string:40,
                 von GCodeSender.h:5,
                 von GCodeSender.cpp:1:
/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/type_traits:2554:11: Anmerkung: Â»template<bool _Cond, class _Tp> using enable_if_t = typename std::enable_if::typeÂ« ist hier deklariert
 2554 |     using enable_if_t = typename enable_if<_Cond, _Tp>::type;
      |           ^~~~~~~~~~~
In Datei, eingebunden von ConfigParser.h:13,
                 von GCodeSender.h:16,
                 von GCodeSender.cpp:1:
SHARED/magic_enum-master/include/magic_enum.hpp:756:80: Fehler: expected initializer before Â»<Â« token
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:763:70: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  763 | [[nodiscard]] constexpr auto enum_index(E value) noexcept -> detail::enable_if_enum_t<E, optional<std::size_t>> {
      |                                                                      ^~~~~~~~~~~~~~~~
      |                                                                      enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:763:86: Fehler: expected initializer before Â»<Â« token
  763 | [[nodiscard]] constexpr auto enum_index(E value) noexcept -> detail::enable_if_enum_t<E, optional<std::size_t>> {
      |                                                                                      ^
SHARED/magic_enum-master/include/magic_enum.hpp:775:73: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  775 | [[nodiscard]] constexpr auto enum_contains(E value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                                                         ^~~~~~~~~~~~~~~~
      |                                                                         enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:775:89: Fehler: expected initializer before Â»<Â« token
  775 | [[nodiscard]] constexpr auto enum_contains(E value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                                                                         ^
SHARED/magic_enum-master/include/magic_enum.hpp:783:92: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  783 | [[nodiscard]] constexpr auto enum_contains(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                                                                            ^~~~~~~~~~~~~~~~
      |                                                                                            enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:783:108: Fehler: expected initializer before Â»<Â« token
  783 | [[nodiscard]] constexpr auto enum_contains(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                                                                                            ^
SHARED/magic_enum-master/include/magic_enum.hpp:791:44: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
  791 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:791:44: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
SHARED/magic_enum-master/include/magic_enum.hpp:791:79: Fehler: expected primary-expression before Â»pÂ«
  791 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, bool> {
      |                                                                               ^
SHARED/magic_enum-master/include/magic_enum.hpp:791:80: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
  791 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, bool> {
      |                                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:791:81: Fehler: expected Â»;Â« before Â»noexceptÂ«
  791 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, bool> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 ;
SHARED/magic_enum-master/include/magic_enum.hpp:800:44: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
  800 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:800:44: Fehler: Redeklaration von Â»template<class E> constexpr const auto magic_enum::enum_containsÂ«
SHARED/magic_enum-master/include/magic_enum.hpp:791:30: Anmerkung: vorherige Deklaration von Â»template<class E, class BinaryPredicate> constexpr<TypprÃ¤fixfehler> magic_enum::enum_contains<E, BinaryPredicate>Â«
  791 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, bool> {
      |                              ^~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:800:44: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  800 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:800:62: Fehler: expected Â»;Â« before Â»noexceptÂ«
  800 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                                              ^~~~~~~~~
      |                                                              ;
SHARED/magic_enum-master/include/magic_enum.hpp:808:77: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  808 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                             ^~~~~~~~~
      |                                                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:808:77: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  808 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                             ^~~~~~~~~
      |                                                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:808:88: Fehler: Templateargument 1 ist ungÃ¼ltig
  808 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:808:96: Fehler: expected unqualified-id before Â»=Â« token
  808 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:823:77: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  823 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                             ^~~~~~~~~
      |                                                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:823:77: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  823 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                             ^~~~~~~~~
      |                                                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:823:88: Fehler: Templateargument 1 ist ungÃ¼ltig
  823 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:823:96: Fehler: expected unqualified-id before Â»=Â« token
  823 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:832:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  832 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:832:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  832 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:832:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  832 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:832:64: Fehler: expected unqualified-id before Â»=Â« token
  832 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:837:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  837 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:837:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  837 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:837:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  837 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:837:64: Fehler: expected unqualified-id before Â»=Â« token
  837 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:842:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  842 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:842:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  842 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:842:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  842 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:842:64: Fehler: expected unqualified-id before Â»=Â« token
  842 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:847:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  847 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:847:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  847 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:847:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  847 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:847:64: Fehler: expected unqualified-id before Â»=Â« token
  847 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:852:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  852 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:852:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  852 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:852:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  852 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:852:64: Fehler: expected unqualified-id before Â»=Â« token
  852 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:857:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  857 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:857:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  857 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:857:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  857 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:857:64: Fehler: expected unqualified-id before Â»=Â« token
  857 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:862:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  862 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:862:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  862 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:862:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  862 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:862:64: Fehler: expected unqualified-id before Â»=Â« token
  862 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:872:19: Fehler: Â»enum_type_nameÂ« wurde nicht innerhalb von Â»magic_enumÂ« deklariert
  872 | using magic_enum::enum_type_name;
      |                   ^~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:876:63: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  876 | [[nodiscard]] constexpr auto enum_count() noexcept -> detail::enable_if_enum_flags_t<E, std::size_t> {
      |                                                               ^~~~~~~~~~~~~~~~~~~~~~
      |                                                               enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:876:85: Fehler: expected initializer before Â»<Â« token
  876 | [[nodiscard]] constexpr auto enum_count() noexcept -> detail::enable_if_enum_flags_t<E, std::size_t> {
      |                                                                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:885:80: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  885 | [[nodiscard]] constexpr auto enum_value(std::size_t index) noexcept -> detail::enable_if_enum_flags_t<E, std::decay_t<E>> {
      |                                                                                ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                                enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:885:102: Fehler: expected initializer before Â»<Â« token
  885 | [[nodiscard]] constexpr auto enum_value(std::size_t index) noexcept -> detail::enable_if_enum_flags_t<E, std::decay_t<E>> {
      |                                                                                                      ^
SHARED/magic_enum-master/include/magic_enum.hpp:899:64: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  899 | [[nodiscard]] constexpr auto enum_values() noexcept -> detail::enable_if_enum_flags_t<E, detail::values_t<E, true>> {
      |                                                                ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:899:86: Fehler: expected initializer before Â»<Â« token
  899 | [[nodiscard]] constexpr auto enum_values() noexcept -> detail::enable_if_enum_flags_t<E, detail::values_t<E, true>> {
      |                                                                                      ^
SHARED/magic_enum-master/include/magic_enum.hpp:908:50: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  908 | [[nodiscard]] auto enum_name(E value) -> detail::enable_if_enum_flags_t<E, string> {
      |                                                  ^~~~~~~~~~~~~~~~~~~~~~
      |                                                  enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:908:72: Fehler: expected initializer before Â»<Â« token
  908 | [[nodiscard]] auto enum_name(E value) -> detail::enable_if_enum_flags_t<E, string> {
      |                                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:934:63: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  934 | [[nodiscard]] constexpr auto enum_names() noexcept -> detail::enable_if_enum_flags_t<E, detail::names_t<E, true>> {
      |                                                               ^~~~~~~~~~~~~~~~~~~~~~
      |                                                               enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:934:85: Fehler: expected initializer before Â»<Â« token
  934 | [[nodiscard]] constexpr auto enum_names() noexcept -> detail::enable_if_enum_flags_t<E, detail::names_t<E, true>> {
      |                                                                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:942:65: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  942 | [[nodiscard]] constexpr auto enum_entries() noexcept -> detail::enable_if_enum_flags_t<E, detail::entries_t<E, true>> {
      |                                                                 ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                 enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:942:87: Fehler: expected initializer before Â»<Â« token
  942 | [[nodiscard]] constexpr auto enum_entries() noexcept -> detail::enable_if_enum_flags_t<E, detail::entries_t<E, true>> {
      |                                                                                       ^
SHARED/magic_enum-master/include/magic_enum.hpp:951:88: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  951 | [[nodiscard]] constexpr auto enum_cast(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                                                        ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                                        enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:951:110: Fehler: expected initializer before Â»<Â« token
  951 | [[nodiscard]] constexpr auto enum_cast(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                                                                              ^
SHARED/magic_enum-master/include/magic_enum.hpp:981:40: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
  981 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:981:40: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
SHARED/magic_enum-master/include/magic_enum.hpp:981:75: Fehler: expected primary-expression before Â»pÂ«
  981 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                                           ^
SHARED/magic_enum-master/include/magic_enum.hpp:981:76: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
  981 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                                            ^
SHARED/magic_enum-master/include/magic_enum.hpp:981:77: Fehler: expected Â»;Â« before Â»noexceptÂ«
  981 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                                             ^~~~~~~~~
      |                                                                             ;
SHARED/magic_enum-master/include/magic_enum.hpp:1014:40: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
 1014 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1014:40: Fehler: Redeklaration von Â»template<class E> constexpr const auto magic_enum::flags::enum_castÂ«
SHARED/magic_enum-master/include/magic_enum.hpp:981:30: Anmerkung: vorherige Deklaration von Â»template<class E, class BinaryPredicate> constexpr<TypprÃ¤fixfehler> magic_enum::flags::enum_cast<E, BinaryPredicate>Â«
  981 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                              ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1014:40: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
 1014 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1014:58: Fehler: expected Â»;Â« before Â»noexceptÂ«
 1014 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                          ^~~~~~~~~
      |                                                          ;
SHARED/magic_enum-master/include/magic_enum.hpp:1021:19: Fehler: Â»enum_integerÂ« wurde nicht innerhalb von Â»magic_enumÂ« deklariert
 1021 | using magic_enum::enum_integer;
      |                   ^~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1026:70: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
 1026 | [[nodiscard]] constexpr auto enum_index(E value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::size_t>> {
      |                                                                      ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                      enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:1026:92: Fehler: expected initializer before Â»<Â« token
 1026 | [[nodiscard]] constexpr auto enum_index(E value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::size_t>> {
      |                                                                                            ^
SHARED/magic_enum-master/include/magic_enum.hpp:1043:73: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
 1043 | [[nodiscard]] constexpr auto enum_contains(E value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                         ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                         enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:1043:95: Fehler: expected initializer before Â»<Â« token
 1043 | [[nodiscard]] constexpr auto enum_contains(E value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                                               ^
SHARED/magic_enum-master/include/magic_enum.hpp:1052:92: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
 1052 | [[nodiscard]] constexpr auto enum_contains(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                                            ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                                            enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:1052:114: Fehler: expected initializer before Â»<Â« token
 1052 | [[nodiscard]] constexpr auto enum_contains(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                                                                  ^
SHARED/magic_enum-master/include/magic_enum.hpp:1060:44: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
 1060 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1060:44: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
SHARED/magic_enum-master/include/magic_enum.hpp:1060:79: Fehler: expected primary-expression before Â»pÂ«
 1060 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                               ^
SHARED/magic_enum-master/include/magic_enum.hpp:1060:80: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
 1060 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:1060:81: Fehler: expected Â»;Â« before Â»noexceptÂ«
 1060 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 ;
SHARED/magic_enum-master/include/magic_enum.hpp:1069:44: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
 1069 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1069:44: Fehler: Redeklaration von Â»template<class E> constexpr const auto magic_enum::flags::enum_containsÂ«
SHARED/magic_enum-master/include/magic_enum.hpp:1060:30: Anmerkung: vorherige Deklaration von Â»template<class E, class BinaryPredicate> constexpr<TypprÃ¤fixfehler> magic_enum::flags::enum_contains<E, BinaryPredicate>Â«
 1060 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, bool> {
      |                              ^~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1069:44: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
 1069 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1069:62: Fehler: expected Â»;Â« before Â»noexceptÂ«
 1069 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                              ^~~~~~~~~
      |                                                              ;
SHARED/magic_enum-master/include/magic_enum.hpp:1079:63: Fehler: Â»magic_enum::detail::enable_if_enum_flags_tÂ« wurde nicht deklariert
 1079 | template <typename Char, typename Traits, typename E, detail::enable_if_enum_flags_t<E, int> = 0>
      |                                                               ^~~~~~~~~~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1079:85: Fehler: expected Â»>Â« before Â»<Â« token
 1079 | template <typename Char, typename Traits, typename E, detail::enable_if_enum_flags_t<E, int> = 0>
      |                                                                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»std::basic_ostream<_CharT, _Traits>& magic_enum::flags::ostream_operators::operator<<(std::basic_ostream<_CharT, _Traits>&, E)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:1084:7: Warnung: Â»init-statement in AuswahlanweisungenÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
 1084 |   if (const auto name = magic_enum::flags::enum_name<D>(value); !name.empty()) {
      |       ^~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1084:44: Fehler: Â»enum_nameÂ« ist kein Element von Â»magic_enum::flagsÂ«; meinten Sie Â»enum_castÂ«?
 1084 |   if (const auto name = magic_enum::flags::enum_name<D>(value); !name.empty()) {
      |                                            ^~~~~~~~~
      |                                            enum_cast
SHARED/magic_enum-master/include/magic_enum.hpp:1084:55: Fehler: expected primary-expression before Â»>Â« token
 1084 |   if (const auto name = magic_enum::flags::enum_name<D>(value); !name.empty()) {
      |                                                       ^
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:1094:63: Fehler: Â»magic_enum::detail::enable_if_enum_flags_tÂ« wurde nicht deklariert
 1094 | template <typename Char, typename Traits, typename E, detail::enable_if_enum_flags_t<E, int> = 0>
      |                                                               ^~~~~~~~~~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1094:85: Fehler: expected Â»>Â« before Â»<Â« token
 1094 | template <typename Char, typename Traits, typename E, detail::enable_if_enum_flags_t<E, int> = 0>
      |                                                                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:1095:84: Fehler: Â»optionalÂ« wurde nicht deklariert
 1095 | std::basic_ostream<Char, Traits>& operator<<(std::basic_ostream<Char, Traits>& os, optional<E> value) {
      |                                                                                    ^~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1095:92: Fehler: expected Â»,Â« or Â»...Â« before Â»<Â« token
 1095 | std::basic_ostream<Char, Traits>& operator<<(std::basic_ostream<Char, Traits>& os, optional<E> value) {
      |                                                                                            ^
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»std::basic_ostream<_CharT, _Traits>& magic_enum::flags::ostream_operators::operator<<(std::basic_ostream<_CharT, _Traits>&, int)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:1096:10: Fehler: Â»valueÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht deklariert; meinten Sie Â»magic_enum::detail::valueÂ«?
 1096 |   return value.has_value() ? (os << value.value()) : os;
      |          ^~~~~
      |          magic_enum::detail::value
SHARED/magic_enum-master/include/magic_enum.hpp:395:13: Anmerkung: Â»magic_enum::detail::valueÂ« ist hier deklariert
  395 | constexpr E value(std::size_t i) noexcept {
      |             ^~~~~
Makefile:212: recipe for target 'Debug/GCodeSender.o' failed
make[1]: *** [Debug/GCodeSender.o] Error 1
make[1]: *** Auf noch nicht beendete Prozesse wird gewartet â€¦
In Datei, eingebunden von ConfigParser.h:13,
                 von ConfigParser.cpp:1:
SHARED/magic_enum-master/include/magic_enum.hpp:99:23: Fehler: Â»optionalÂ« in Namensraum Â»stdÂ« bezeichnet keinen Templatetyp
   99 | using optional = std::optional<T>;
      |                       ^~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:99:18: Anmerkung: Â»std::optionalÂ« ist erst ab C++17 verfÃ¼gbar
   99 | using optional = std::optional<T>;
      |                  ^~~
SHARED/magic_enum-master/include/magic_enum.hpp:106:26: Fehler: Â»string_viewÂ« in Namensbereich Â»stdÂ« bezeichnet keinen Typ
  106 | using string_view = std::string_view;
      |                          ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:106:21: Anmerkung: Â»std::string_viewÂ« ist erst ab C++17 verfÃ¼gbar
  106 | using string_view = std::string_view;
      |                     ^~~
In Datei, eingebunden von ConfigParser.h:13,
                 von ConfigParser.cpp:1:
SHARED/magic_enum-master/include/magic_enum.hpp:123:22: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  123 |   static_assert(std::is_enum_v<E>, "magic_enum::customize::enum_range requires enum type.");
      |                      ^~~~~~~~~
      |                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:123:33: Fehler: expected primary-expression before Â»>Â« token
  123 |   static_assert(std::is_enum_v<E>, "magic_enum::customize::enum_range requires enum type.");
      |                                 ^
SHARED/magic_enum-master/include/magic_enum.hpp:123:34: Fehler: expected primary-expression before Â»,Â« token
  123 |   static_assert(std::is_enum_v<E>, "magic_enum::customize::enum_range requires enum type.");
      |                                  ^
SHARED/magic_enum-master/include/magic_enum.hpp:124:3: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  124 |   inline static constexpr int min = MAGIC_ENUM_RANGE_MIN;
      |   ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:125:3: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  125 |   inline static constexpr int max = MAGIC_ENUM_RANGE_MAX;
      |   ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:139:11: Fehler: Â»string_viewÂ« bezeichnet keinen Typ
  139 | constexpr string_view enum_name(E) noexcept {
      |           ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:159:47: Fehler: expected Â»)Â« before Â»strÂ«
  159 |   constexpr explicit static_string(string_view str) noexcept : static_string{str, std::make_index_sequence<N>{}} {
      |                                   ~           ^~~~
      |                                               )
SHARED/magic_enum-master/include/magic_enum.hpp:159:114: Fehler: expected unqualified-id before Â»{Â« token
  159 |   constexpr explicit static_string(string_view str) noexcept : static_string{str, std::make_index_sequence<N>{}} {
      |                                                                                                                  ^
SHARED/magic_enum-master/include/magic_enum.hpp:167:22: Fehler: expected type-specifier before Â»string_viewÂ«
  167 |   constexpr operator string_view() const noexcept { return {data(), size()}; }
      |                      ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:171:38: Fehler: expected Â»)Â« before Â»strÂ«
  171 |   constexpr static_string(string_view str, std::index_sequence<I...>) noexcept : chars{{str[I]..., '\0'}} {}
      |                          ~           ^~~~
      |                                      )
SHARED/magic_enum-master/include/magic_enum.hpp:171:107: Fehler: expected unqualified-id before Â»{Â« token
  171 |   constexpr static_string(string_view str, std::index_sequence<I...>) noexcept : chars{{str[I]..., '\0'}} {}
      |                                                                                                           ^
SHARED/magic_enum-master/include/magic_enum.hpp:178:13: Fehler: nur Deklarationen von Konstruktoren und Umwandlungsoperatoren kÃ¶nnen Â»explicitÂ« sein
  178 |   constexpr explicit static_string(string_view) noexcept {}
      |             ^~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:178:36: Fehler: Feld Â»string_viewÂ« hat unvollstÃ¤ndigen Typen Â»const magic_enum::detail::static_string<0>Â«
  178 |   constexpr explicit static_string(string_view) noexcept {}
      |                                    ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:177:8: Anmerkung: Definition von Â»struct magic_enum::detail::static_string<0>Â« ist erst nach der schlieÃŸenden Klammer vollendet
  177 | struct static_string<0> {
      |        ^~~~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:178:3: Fehler: nicht-statisches Datenelement Â»string_viewÂ« als Â»constexprÂ« deklariert
  178 |   constexpr explicit static_string(string_view) noexcept {}
      |   ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:178:47: Fehler: Â»;Â« am Ende von Elementdeklaration erwartet
  178 |   constexpr explicit static_string(string_view) noexcept {}
      |                                               ^
      |                                                ;
SHARED/magic_enum-master/include/magic_enum.hpp:178:49: Fehler: expected unqualified-id before Â»noexceptÂ«
  178 |   constexpr explicit static_string(string_view) noexcept {}
      |                                                 ^~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:184:22: Fehler: expected type-specifier before Â»string_viewÂ«
  184 |   constexpr operator string_view() const noexcept { return {}; }
      |                      ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:193:11: Fehler: Â»string_viewÂ« bezeichnet keinen Typ
  193 | constexpr string_view pretty_name(string_view name) noexcept {
      |           ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:213:28: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  213 | constexpr std::size_t find(string_view str, char c) noexcept {
      |                            ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:213:45: Fehler: expected primary-expression before Â»charÂ«
  213 | constexpr std::size_t find(string_view str, char c) noexcept {
      |                                             ^~~~
SHARED/magic_enum-master/include/magic_enum.hpp:213:51: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
  213 | constexpr std::size_t find(string_view str, char c) noexcept {
      |                                                   ^
SHARED/magic_enum-master/include/magic_enum.hpp:235:26: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                          ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:235:43: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                                           ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:235:75: Fehler: expected primary-expression before Â»&&Â« token
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                                                                           ^~
SHARED/magic_enum-master/include/magic_enum.hpp:235:78: Fehler: Â»pÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                                                                              ^
SHARED/magic_enum-master/include/magic_enum.hpp:235:79: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                                                                               ^
SHARED/magic_enum-master/include/magic_enum.hpp:235:80: Fehler: expected Â»;Â« before Â»noexceptÂ«
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                                                                                ^~~~~~~~~
      |                                                                                ;
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr bool magic_enum::detail::cmp_less(L, R)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:264:22: Fehler: Â»is_integral_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_integralÂ«?
  264 |   static_assert(std::is_integral_v<L> && std::is_integral_v<R>, "magic_enum::detail::cmp_less requires integral type.");
      |                      ^~~~~~~~~~~~~
      |                      is_integral
SHARED/magic_enum-master/include/magic_enum.hpp:264:37: Fehler: expected primary-expression before Â»>Â« token
  264 |   static_assert(std::is_integral_v<L> && std::is_integral_v<R>, "magic_enum::detail::cmp_less requires integral type.");
      |                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:264:45: Fehler: expected Â»,Â« before Â»::Â« token
  264 |   static_assert(std::is_integral_v<L> && std::is_integral_v<R>, "magic_enum::detail::cmp_less requires integral type.");
      |                                             ^~
      |                                             ,
SHARED/magic_enum-master/include/magic_enum.hpp:264:45: Fehler: expected string-literal before Â»::Â« token
  264 |   static_assert(std::is_integral_v<L> && std::is_integral_v<R>, "magic_enum::detail::cmp_less requires integral type.");
      |                                             ^~
SHARED/magic_enum-master/include/magic_enum.hpp:264:45: Fehler: expected Â»)Â« before Â»::Â« token
  264 |   static_assert(std::is_integral_v<L> && std::is_integral_v<R>, "magic_enum::detail::cmp_less requires integral type.");
      |                ~                            ^~
      |                                             )
SHARED/magic_enum-master/include/magic_enum.hpp:266:6: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |      ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:266:22: Fehler: Â»is_signed_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_signedÂ«?
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                      ^~~~~~~~~~~
      |                      is_signed
SHARED/magic_enum-master/include/magic_enum.hpp:266:35: Fehler: expected primary-expression before Â»>Â« token
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                                   ^
SHARED/magic_enum-master/include/magic_enum.hpp:266:37: Fehler: expected primary-expression before Â»==Â« token
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                                     ^~
SHARED/magic_enum-master/include/magic_enum.hpp:266:45: Fehler: Â»is_signed_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_signedÂ«?
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                                             ^~~~~~~~~~~
      |                                             is_signed
SHARED/magic_enum-master/include/magic_enum.hpp:266:58: Fehler: expected primary-expression before Â»>Â« token
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                                                          ^
SHARED/magic_enum-master/include/magic_enum.hpp:266:59: Fehler: expected primary-expression before Â»)Â« token
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                                                           ^
SHARED/magic_enum-master/include/magic_enum.hpp:269:13: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  269 |   } else if constexpr (std::is_signed_v<R>) {
      |             ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:269:29: Fehler: Â»is_signed_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_signedÂ«?
  269 |   } else if constexpr (std::is_signed_v<R>) {
      |                             ^~~~~~~~~~~
      |                             is_signed
SHARED/magic_enum-master/include/magic_enum.hpp:269:42: Fehler: expected primary-expression before Â»>Â« token
  269 |   } else if constexpr (std::is_signed_v<R>) {
      |                                          ^
SHARED/magic_enum-master/include/magic_enum.hpp:269:43: Fehler: expected primary-expression before Â»)Â« token
  269 |   } else if constexpr (std::is_signed_v<R>) {
      |                                           ^
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr I magic_enum::detail::log2(I)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:280:22: Fehler: Â»is_integral_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_integralÂ«?
  280 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::log2 requires integral type.");
      |                      ^~~~~~~~~~~~~
      |                      is_integral
SHARED/magic_enum-master/include/magic_enum.hpp:280:37: Fehler: expected primary-expression before Â»>Â« token
  280 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::log2 requires integral type.");
      |                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:280:38: Fehler: expected primary-expression before Â»,Â« token
  280 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::log2 requires integral type.");
      |                                      ^
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr bool magic_enum::detail::is_pow2(I)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:290:22: Fehler: Â»is_integral_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_integralÂ«?
  290 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::is_pow2 requires integral type.");
      |                      ^~~~~~~~~~~~~
      |                      is_integral
SHARED/magic_enum-master/include/magic_enum.hpp:290:37: Fehler: expected primary-expression before Â»>Â« token
  290 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::is_pow2 requires integral type.");
      |                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:290:38: Fehler: expected primary-expression before Â»,Â« token
  290 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::is_pow2 requires integral type.");
      |                                      ^
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:296:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  296 | inline constexpr bool is_enum_v = std::is_enum_v<T> && std::is_same_v<T, std::decay_t<T>>;
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:296:40: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  296 | inline constexpr bool is_enum_v = std::is_enum_v<T> && std::is_same_v<T, std::decay_t<T>>;
      |                                        ^~~~~~~~~
      |                                        is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:296:51: Fehler: expected primary-expression before Â»>Â« token
  296 | inline constexpr bool is_enum_v = std::is_enum_v<T> && std::is_same_v<T, std::decay_t<T>>;
      |                                                   ^
SHARED/magic_enum-master/include/magic_enum.hpp:296:56: Fehler: Marke Â»stdÂ« auÃŸerhalb einer Funktion referenziert
  296 | inline constexpr bool is_enum_v = std::is_enum_v<T> && std::is_same_v<T, std::decay_t<T>>;
      |                                                        ^~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr auto magic_enum::detail::n()Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:305:13: Fehler: Â»string_viewÂ« bezeichnet keinen Typ
  305 |   constexpr string_view name{__PRETTY_FUNCTION__ + 49, sizeof(__PRETTY_FUNCTION__) - 51};
      |             ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:309:24: Fehler: Â»nameÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht deklariert; meinten Sie Â»renameÂ«?
  309 |   return static_string<name.size()>{name};
      |                        ^~~~
      |                        rename
SHARED/magic_enum-master/include/magic_enum.hpp:309:35: Fehler: Templateargument 1 ist ungÃ¼ltig
  309 |   return static_string<name.size()>{name};
      |                                   ^
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:316:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  316 | inline constexpr auto type_name_v = n<E>();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr auto magic_enum::detail::n()Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:321:43: Fehler: Â»enum_nameÂ« ist kein Element von Â»magic_enum::customizeÂ«; meinten Sie Â»enum_rangeÂ«?
  321 |   constexpr auto custom_name = customize::enum_name<E>(V);
      |                                           ^~~~~~~~~
      |                                           enum_range
SHARED/magic_enum-master/include/magic_enum.hpp:321:54: Fehler: expected primary-expression before Â»>Â« token
  321 |   constexpr auto custom_name = customize::enum_name<E>(V);
      |                                                      ^
SHARED/magic_enum-master/include/magic_enum.hpp:323:6: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  323 |   if constexpr (custom_name.empty()) {
      |      ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:341:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  341 | inline constexpr auto enum_name_v = n<E, V>();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:343:23: Fehler: Â»autoÂ«-Parameter darf in diesem Kontext nicht verwendet werden
  343 | template <typename E, auto V>
      |                       ^~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr int magic_enum::detail::reflected_min()Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:354:6: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  354 |   if constexpr (IsFlags) {
      |      ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:361:8: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  361 |     if constexpr (cmp_less(lhs, rhs)) {
      |        ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr int magic_enum::detail::reflected_max()Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:373:6: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  373 |   if constexpr (IsFlags) {
      |      ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:380:8: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  380 |     if constexpr (cmp_less(lhs, rhs)) {
      |        ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:389:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  389 | inline constexpr auto reflected_min_v = reflected_min<E, IsFlags>();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:392:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  392 | inline constexpr auto reflected_max_v = reflected_max<E, IsFlags>();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr E magic_enum::detail::value(std::size_t)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:398:6: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  398 |   if constexpr (IsFlags) {
      |      ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr auto magic_enum::detail::values(std::index_sequence<I ...>)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:409:62: Fehler: Â»constexprÂ«-Lambda ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  409 |   constexpr std::size_t count = [](decltype((valid)) valid_) constexpr noexcept -> std::size_t {
      |                                                              ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:419:22: Fehler: der Wert von Â»countÂ« ist in konstantem Ausdruck nicht verwendbar
  419 |   std::array<E, count> values{};
      |                      ^
SHARED/magic_enum-master/include/magic_enum.hpp:409:25: Anmerkung: Â»countÂ« in seiner eigenen Initialisierung verwendet
  409 |   constexpr std::size_t count = [](decltype((valid)) valid_) constexpr noexcept -> std::size_t {
      |                         ^~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:419:22: Anmerkung: in Templateargument fÃ¼r Typ Â»unsigned intÂ«
  419 |   std::array<E, count> values{};
      |                      ^
SHARED/magic_enum-master/include/magic_enum.hpp:422:13: Fehler: ungÃ¼ltige Typen Â»int[std::size_t {aka unsigned int}]Â« fÃ¼r Feldindex
  422 |       values[v++] = value<E, Min, IsFlags>(i);
      |             ^
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:440:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  440 | inline constexpr auto values_v = values<E, IsFlags>();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:446:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  446 | inline constexpr auto count_v = values_v<E, IsFlags>.size();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:449:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  449 | inline constexpr auto min_v = static_cast<U>(values_v<E, IsFlags>.front());
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:452:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  452 | inline constexpr auto max_v = static_cast<U>(values_v<E, IsFlags>.back());
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:467:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  467 | inline constexpr auto range_size_v = range_size<E, IsFlags>();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:473:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  473 | inline constexpr auto invalid_index_v = (std::numeric_limits<index_t<E, IsFlags>>::max)();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:485:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  485 | inline constexpr auto indexes_v = indexes<E, IsFlags>(std::make_index_sequence<range_size_v<E, IsFlags>>{});
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr auto magic_enum::detail::names(std::index_sequence<I ...>)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:491:21: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  491 |   return std::array<string_view, sizeof...(I)>{{enum_name_v<E, values_v<E, IsFlags>[I]>...}};
      |                     ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:491:46: Fehler: Templateargument 1 ist ungÃ¼ltig
  491 |   return std::array<string_view, sizeof...(I)>{{enum_name_v<E, values_v<E, IsFlags>[I]>...}};
      |                                              ^
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:495:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  495 | inline constexpr auto names_v = names<E, IsFlags>(std::make_index_sequence<count_v<E, IsFlags>>{});
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr auto magic_enum::detail::entries(std::index_sequence<I ...>)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:504:34: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  504 |   return std::array<std::pair<E, string_view>, sizeof...(I)>{{{values_v<E, IsFlags>[I], enum_name_v<E, values_v<E, IsFlags>[I]>}...}};
      |                                  ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:504:45: Fehler: Templateargument 2 ist ungÃ¼ltig
  504 |   return std::array<std::pair<E, string_view>, sizeof...(I)>{{{values_v<E, IsFlags>[I], enum_name_v<E, values_v<E, IsFlags>[I]>}...}};
      |                                             ^
SHARED/magic_enum-master/include/magic_enum.hpp:504:60: Fehler: Templateargument 1 ist ungÃ¼ltig
  504 |   return std::array<std::pair<E, string_view>, sizeof...(I)>{{{values_v<E, IsFlags>[I], enum_name_v<E, values_v<E, IsFlags>[I]>}...}};
      |                                                            ^
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:508:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  508 | inline constexpr auto entries_v = entries<E, IsFlags>(std::make_index_sequence<count_v<E, IsFlags>>{});
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:521:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  521 | inline constexpr bool is_sparse_v = is_sparse<E, IsFlags>();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr std::size_t magic_enum::detail::undex(U)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:527:7: Warnung: Â»init-statement in AuswahlanweisungenÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  527 |   if (const auto i = static_cast<std::size_t>(value - min_v<E>); value >= min_v<E> && value <= max_v<E>) {
      |       ^~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:528:8: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  528 |     if constexpr (is_sparse_v<E>) {
      |        ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:529:11: Warnung: Â»init-statement in AuswahlanweisungenÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  529 |       if (const auto idx = indexes_v<E>[i]; idx != invalid_index_v<E>) {
      |           ^~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:579:55: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  579 | using enable_if_enum_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, false, T, R>::type;
      |                                                       ^~~~~~~~~
      |                                                       is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:579:55: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  579 | using enable_if_enum_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, false, T, R>::type;
      |                                                       ^~~~~~~~~
      |                                                       is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:579:79: Fehler: falsche Anzahl der Templateargumente (1, sollte 4 sein)
  579 | using enable_if_enum_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, false, T, R>::type;
      |                                                                               ^~
SHARED/magic_enum-master/include/magic_enum.hpp:560:8: Anmerkung: fÃ¼r Â»template<bool <anonym>, bool <anonym>, class T, class R> struct magic_enum::detail::enable_if_enumÂ« bereitgestellt
  560 | struct enable_if_enum {};
      |        ^~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:579:35: Fehler: Spezifikation mit geschachteltem Namen erwartet
  579 | using enable_if_enum_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, false, T, R>::type;
      |                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:582:61: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  582 | using enable_if_enum_flags_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, true, T, R>::type;
      |                                                             ^~~~~~~~~
      |                                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:582:61: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  582 | using enable_if_enum_flags_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, true, T, R>::type;
      |                                                             ^~~~~~~~~
      |                                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:582:85: Fehler: falsche Anzahl der Templateargumente (1, sollte 4 sein)
  582 | using enable_if_enum_flags_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, true, T, R>::type;
      |                                                                                     ^~
SHARED/magic_enum-master/include/magic_enum.hpp:560:8: Anmerkung: fÃ¼r Â»template<bool <anonym>, bool <anonym>, class T, class R> struct magic_enum::detail::enable_if_enumÂ« bereitgestellt
  560 | struct enable_if_enum {};
      |        ^~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:582:41: Fehler: Spezifikation mit geschachteltem Namen erwartet
  582 | using enable_if_enum_flags_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, true, T, R>::type;
      |                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:584:63: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  584 | template <typename T, typename Enable = std::enable_if_t<std::is_enum_v<std::decay_t<T>>>>
      |                                                               ^~~~~~~~~
      |                                                               is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:584:63: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  584 | template <typename T, typename Enable = std::enable_if_t<std::is_enum_v<std::decay_t<T>>>>
      |                                                               ^~~~~~~~~
      |                                                               is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:584:87: Fehler: Templateargument 1 ist ungÃ¼ltig
  584 | template <typename T, typename Enable = std::enable_if_t<std::is_enum_v<std::decay_t<T>>>>
      |                                                                                       ^~
SHARED/magic_enum-master/include/magic_enum.hpp:584:89: Fehler: expected Â»>Â« before Â»>>Â« token
  584 | template <typename T, typename Enable = std::enable_if_t<std::is_enum_v<std::decay_t<T>>>>
      |                                                                                         ^~
SHARED/magic_enum-master/include/magic_enum.hpp:587:35: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  587 | template <typename T, bool = std::is_enum_v<T>>
      |                                   ^~~~~~~~~
      |                                   is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:587:46: Fehler: expected primary-expression before Â»>>Â« token
  587 | template <typename T, bool = std::is_enum_v<T>>
      |                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:587:46: Fehler: expected Â»>Â« before Â»>>Â« token
SHARED/magic_enum-master/include/magic_enum.hpp:591:52: Fehler: expected template-name before Â»<Â« token
  591 | struct is_scoped_enum<T, true> : std::bool_constant<!std::is_convertible_v<T, std::underlying_type_t<T>>> {};
      |                                                    ^
SHARED/magic_enum-master/include/magic_enum.hpp:591:52: Fehler: expected Â»{Â« before Â»<Â« token
SHARED/magic_enum-master/include/magic_enum.hpp:593:35: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  593 | template <typename T, bool = std::is_enum_v<T>>
      |                                   ^~~~~~~~~
      |                                   is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:593:46: Fehler: expected primary-expression before Â»>>Â« token
  593 | template <typename T, bool = std::is_enum_v<T>>
      |                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:593:46: Fehler: expected Â»>Â« before Â»>>Â« token
SHARED/magic_enum-master/include/magic_enum.hpp:597:54: Fehler: expected template-name before Â»<Â« token
  597 | struct is_unscoped_enum<T, true> : std::bool_constant<std::is_convertible_v<T, std::underlying_type_t<T>>> {};
      |                                                      ^
SHARED/magic_enum-master/include/magic_enum.hpp:597:54: Fehler: expected Â»{Â« before Â»<Â« token
SHARED/magic_enum-master/include/magic_enum.hpp:599:35: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  599 | template <typename T, bool = std::is_enum_v<std::decay_t<T>>>
      |                                   ^~~~~~~~~
      |                                   is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:599:59: Fehler: expected primary-expression before Â»>Â« token
  599 | template <typename T, bool = std::is_enum_v<std::decay_t<T>>>
      |                                                           ^~
SHARED/magic_enum-master/include/magic_enum.hpp:599:61: Fehler: expected unqualified-id before Â»>Â« token
  599 | template <typename T, bool = std::is_enum_v<std::decay_t<T>>>
      |                                                             ^
SHARED/magic_enum-master/include/magic_enum.hpp:603:8: Fehler: Â»underlying_typeÂ« ist kein Klassentemplate
  603 | struct underlying_type<T, true> : std::underlying_type<std::decay_t<T>> {};
      |        ^~~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:608:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  608 | inline constexpr bool is_magic_enum_supported = detail::supported<void>::value;
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:611:36: Fehler: Templateargument 2 ist ungÃ¼ltig
  611 | using Enum = detail::enum_concept<T>;
      |                                    ^
SHARED/magic_enum-master/include/magic_enum.hpp:616:53: Fehler: Templateargument 2 ist ungÃ¼ltig
  616 | struct is_unscoped_enum : detail::is_unscoped_enum<T> {};
      |                                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:619:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  619 | inline constexpr bool is_unscoped_enum_v = is_unscoped_enum<T>::value;
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:624:49: Fehler: Templateargument 2 ist ungÃ¼ltig
  624 | struct is_scoped_enum : detail::is_scoped_enum<T> {};
      |                                                 ^
SHARED/magic_enum-master/include/magic_enum.hpp:627:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  627 | inline constexpr bool is_scoped_enum_v = is_scoped_enum<T>::value;
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:105: Fehler: Templateargument 1 ist ungÃ¼ltig
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                                         ^~
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:105: Fehler: Templateargument 1 ist ungÃ¼ltig
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                                         ^~
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:105: Fehler: Templateargument 1 ist ungÃ¼ltig
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                                         ^~
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:105: Fehler: Templateargument 1 ist ungÃ¼ltig
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                                         ^~
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:105: Fehler: Templateargument 1 ist ungÃ¼ltig
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                                         ^~
SHARED/magic_enum-master/include/magic_enum.hpp:639:59: Fehler: ungÃ¼ltige Verwendung des Template-Namens Â»std::enable_if_tÂ« ohne eine Argumentliste
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                           ^~~
In Datei, eingebunden von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/ratio:39,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/chrono:39,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/thread:43,
                 von ConfigParser.h:5,
                 von ConfigParser.cpp:1:
/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/type_traits:2554:11: Anmerkung: Â»template<bool _Cond, class _Tp> using enable_if_t = typename std::enable_if::typeÂ« ist hier deklariert
 2554 |     using enable_if_t = typename enable_if<_Cond, _Tp>::type;
      |           ^~~~~~~~~~~
In Datei, eingebunden von ConfigParser.h:13,
                 von ConfigParser.cpp:1:
SHARED/magic_enum-master/include/magic_enum.hpp:639:75: Fehler: expected initializer before Â»<Â« token
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                           ^
SHARED/magic_enum-master/include/magic_enum.hpp:649:63: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  649 | [[nodiscard]] constexpr auto enum_count() noexcept -> detail::enable_if_enum_t<E, std::size_t> {
      |                                                               ^~~~~~~~~~~~~~~~
      |                                                               enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:649:79: Fehler: expected initializer before Â»<Â« token
  649 | [[nodiscard]] constexpr auto enum_count() noexcept -> detail::enable_if_enum_t<E, std::size_t> {
      |                                                                               ^
SHARED/magic_enum-master/include/magic_enum.hpp:658:80: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  658 | [[nodiscard]] constexpr auto enum_value(std::size_t index) noexcept -> detail::enable_if_enum_t<E, std::decay_t<E>> {
      |                                                                                ^~~~~~~~~~~~~~~~
      |                                                                                enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:658:96: Fehler: expected initializer before Â»<Â« token
  658 | [[nodiscard]] constexpr auto enum_value(std::size_t index) noexcept -> detail::enable_if_enum_t<E, std::decay_t<E>> {
      |                                                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:670:64: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  670 | [[nodiscard]] constexpr auto enum_values() noexcept -> detail::enable_if_enum_t<E, detail::values_t<E>> {
      |                                                                ^~~~~~~~~~~~~~~~
      |                                                                enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:670:80: Fehler: expected initializer before Â»<Â« token
  670 | [[nodiscard]] constexpr auto enum_values() noexcept -> detail::enable_if_enum_t<E, detail::values_t<E>> {
      |                                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:678:11: Fehler: Â»autoÂ«-Parameter darf in diesem Kontext nicht verwendet werden
  678 | template <auto V>
      |           ^~~~
SHARED/magic_enum-master/include/magic_enum.hpp:679:76: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  679 | [[nodiscard]] constexpr auto enum_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<decltype(V)>>, string_view> {
      |                                                                            ^~~~~~~~~
      |                                                                            is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:679:76: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  679 | [[nodiscard]] constexpr auto enum_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<decltype(V)>>, string_view> {
      |                                                                            ^~~~~~~~~
      |                                                                            is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:679:99: Fehler: Templateargument 1 ist ungÃ¼ltig
  679 | [[nodiscard]] constexpr auto enum_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<decltype(V)>>, string_view> {
      |                                                                                                   ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:679:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  679 | [[nodiscard]] constexpr auto enum_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<decltype(V)>>, string_view> {
      |                                                                                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:690:69: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  690 | [[nodiscard]] constexpr auto enum_name(E value) noexcept -> detail::enable_if_enum_t<E, string_view> {
      |                                                                     ^~~~~~~~~~~~~~~~
      |                                                                     enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:690:85: Fehler: expected initializer before Â»<Â« token
  690 | [[nodiscard]] constexpr auto enum_name(E value) noexcept -> detail::enable_if_enum_t<E, string_view> {
      |                                                                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:702:63: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  702 | [[nodiscard]] constexpr auto enum_names() noexcept -> detail::enable_if_enum_t<E, detail::names_t<E>> {
      |                                                               ^~~~~~~~~~~~~~~~
      |                                                               enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:702:79: Fehler: expected initializer before Â»<Â« token
  702 | [[nodiscard]] constexpr auto enum_names() noexcept -> detail::enable_if_enum_t<E, detail::names_t<E>> {
      |                                                                               ^
SHARED/magic_enum-master/include/magic_enum.hpp:710:65: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  710 | [[nodiscard]] constexpr auto enum_entries() noexcept -> detail::enable_if_enum_t<E, detail::entries_t<E>> {
      |                                                                 ^~~~~~~~~~~~~~~~
      |                                                                 enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:710:81: Fehler: expected initializer before Â»<Â« token
  710 | [[nodiscard]] constexpr auto enum_entries() noexcept -> detail::enable_if_enum_t<E, detail::entries_t<E>> {
      |                                                                                 ^
SHARED/magic_enum-master/include/magic_enum.hpp:719:88: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  719 | [[nodiscard]] constexpr auto enum_cast(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                                                        ^~~~~~~~~~~~~~~~
      |                                                                                        enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:719:104: Fehler: expected initializer before Â»<Â« token
  719 | [[nodiscard]] constexpr auto enum_cast(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:732:40: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:732:40: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
SHARED/magic_enum-master/include/magic_enum.hpp:732:75: Fehler: expected primary-expression before Â»pÂ«
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                                           ^
SHARED/magic_enum-master/include/magic_enum.hpp:732:76: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                                            ^
SHARED/magic_enum-master/include/magic_enum.hpp:732:77: Fehler: expected Â»;Â« before Â»noexceptÂ«
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                                             ^~~~~~~~~
      |                                                                             ;
SHARED/magic_enum-master/include/magic_enum.hpp:748:40: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
  748 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:748:40: Fehler: Redeklaration von Â»template<class E> constexpr const auto magic_enum::enum_castÂ«
SHARED/magic_enum-master/include/magic_enum.hpp:732:30: Anmerkung: vorherige Deklaration von Â»template<class E, class BinaryPredicate> constexpr<TypprÃ¤fixfehler> magic_enum::enum_cast<E, BinaryPredicate>Â«
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                              ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:748:40: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  748 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:748:58: Fehler: expected Â»;Â« before Â»noexceptÂ«
  748 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                          ^~~~~~~~~
      |                                                          ;
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:756:64: Fehler: ungÃ¼ltige Verwendung des Template-Namens Â»std::enable_if_tÂ« ohne eine Argumentliste
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                ^~~
In Datei, eingebunden von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/ratio:39,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/chrono:39,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/thread:43,
                 von ConfigParser.h:5,
                 von ConfigParser.cpp:1:
/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/type_traits:2554:11: Anmerkung: Â»template<bool _Cond, class _Tp> using enable_if_t = typename std::enable_if::typeÂ« ist hier deklariert
 2554 |     using enable_if_t = typename enable_if<_Cond, _Tp>::type;
      |           ^~~~~~~~~~~
In Datei, eingebunden von ConfigParser.h:13,
                 von ConfigParser.cpp:1:
SHARED/magic_enum-master/include/magic_enum.hpp:756:80: Fehler: expected initializer before Â»<Â« token
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:763:70: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  763 | [[nodiscard]] constexpr auto enum_index(E value) noexcept -> detail::enable_if_enum_t<E, optional<std::size_t>> {
      |                                                                      ^~~~~~~~~~~~~~~~
      |                                                                      enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:763:86: Fehler: expected initializer before Â»<Â« token
  763 | [[nodiscard]] constexpr auto enum_index(E value) noexcept -> detail::enable_if_enum_t<E, optional<std::size_t>> {
      |                                                                                      ^
SHARED/magic_enum-master/include/magic_enum.hpp:775:73: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  775 | [[nodiscard]] constexpr auto enum_contains(E value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                                                         ^~~~~~~~~~~~~~~~
      |                                                                         enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:775:89: Fehler: expected initializer before Â»<Â« token
  775 | [[nodiscard]] constexpr auto enum_contains(E value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                                                                         ^
SHARED/magic_enum-master/include/magic_enum.hpp:783:92: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  783 | [[nodiscard]] constexpr auto enum_contains(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                                                                            ^~~~~~~~~~~~~~~~
      |                                                                                            enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:783:108: Fehler: expected initializer before Â»<Â« token
  783 | [[nodiscard]] constexpr auto enum_contains(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                                                                                            ^
SHARED/magic_enum-master/include/magic_enum.hpp:791:44: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
  791 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:791:44: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
SHARED/magic_enum-master/include/magic_enum.hpp:791:79: Fehler: expected primary-expression before Â»pÂ«
  791 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, bool> {
      |                                                                               ^
SHARED/magic_enum-master/include/magic_enum.hpp:791:80: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
  791 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, bool> {
      |                                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:791:81: Fehler: expected Â»;Â« before Â»noexceptÂ«
  791 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, bool> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 ;
SHARED/magic_enum-master/include/magic_enum.hpp:800:44: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
  800 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:800:44: Fehler: Redeklaration von Â»template<class E> constexpr const auto magic_enum::enum_containsÂ«
SHARED/magic_enum-master/include/magic_enum.hpp:791:30: Anmerkung: vorherige Deklaration von Â»template<class E, class BinaryPredicate> constexpr<TypprÃ¤fixfehler> magic_enum::enum_contains<E, BinaryPredicate>Â«
  791 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, bool> {
      |                              ^~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:800:44: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  800 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:800:62: Fehler: expected Â»;Â« before Â»noexceptÂ«
  800 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                                              ^~~~~~~~~
      |                                                              ;
SHARED/magic_enum-master/include/magic_enum.hpp:808:77: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  808 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                             ^~~~~~~~~
      |                                                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:808:77: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  808 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                             ^~~~~~~~~
      |                                                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:808:88: Fehler: Templateargument 1 ist ungÃ¼ltig
  808 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:808:96: Fehler: expected unqualified-id before Â»=Â« token
  808 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:823:77: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  823 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                             ^~~~~~~~~
      |                                                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:823:77: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  823 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                             ^~~~~~~~~
      |                                                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:823:88: Fehler: Templateargument 1 ist ungÃ¼ltig
  823 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:823:96: Fehler: expected unqualified-id before Â»=Â« token
  823 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:832:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  832 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:832:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  832 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:832:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  832 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:832:64: Fehler: expected unqualified-id before Â»=Â« token
  832 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:837:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  837 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:837:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  837 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:837:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  837 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:837:64: Fehler: expected unqualified-id before Â»=Â« token
  837 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:842:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  842 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:842:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  842 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:842:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  842 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:842:64: Fehler: expected unqualified-id before Â»=Â« token
  842 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:847:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  847 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:847:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  847 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:847:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  847 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:847:64: Fehler: expected unqualified-id before Â»=Â« token
  847 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:852:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  852 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:852:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  852 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:852:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  852 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:852:64: Fehler: expected unqualified-id before Â»=Â« token
  852 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:857:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  857 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:857:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  857 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:857:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  857 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:857:64: Fehler: expected unqualified-id before Â»=Â« token
  857 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:862:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  862 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:862:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  862 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:862:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  862 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:862:64: Fehler: expected unqualified-id before Â»=Â« token
  862 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:872:19: Fehler: Â»enum_type_nameÂ« wurde nicht innerhalb von Â»magic_enumÂ« deklariert
  872 | using magic_enum::enum_type_name;
      |                   ^~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:876:63: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  876 | [[nodiscard]] constexpr auto enum_count() noexcept -> detail::enable_if_enum_flags_t<E, std::size_t> {
      |                                                               ^~~~~~~~~~~~~~~~~~~~~~
      |                                                               enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:876:85: Fehler: expected initializer before Â»<Â« token
  876 | [[nodiscard]] constexpr auto enum_count() noexcept -> detail::enable_if_enum_flags_t<E, std::size_t> {
      |                                                                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:885:80: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  885 | [[nodiscard]] constexpr auto enum_value(std::size_t index) noexcept -> detail::enable_if_enum_flags_t<E, std::decay_t<E>> {
      |                                                                                ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                                enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:885:102: Fehler: expected initializer before Â»<Â« token
  885 | [[nodiscard]] constexpr auto enum_value(std::size_t index) noexcept -> detail::enable_if_enum_flags_t<E, std::decay_t<E>> {
      |                                                                                                      ^
SHARED/magic_enum-master/include/magic_enum.hpp:899:64: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  899 | [[nodiscard]] constexpr auto enum_values() noexcept -> detail::enable_if_enum_flags_t<E, detail::values_t<E, true>> {
      |                                                                ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:899:86: Fehler: expected initializer before Â»<Â« token
  899 | [[nodiscard]] constexpr auto enum_values() noexcept -> detail::enable_if_enum_flags_t<E, detail::values_t<E, true>> {
      |                                                                                      ^
SHARED/magic_enum-master/include/magic_enum.hpp:908:50: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  908 | [[nodiscard]] auto enum_name(E value) -> detail::enable_if_enum_flags_t<E, string> {
      |                                                  ^~~~~~~~~~~~~~~~~~~~~~
      |                                                  enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:908:72: Fehler: expected initializer before Â»<Â« token
  908 | [[nodiscard]] auto enum_name(E value) -> detail::enable_if_enum_flags_t<E, string> {
      |                                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:934:63: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  934 | [[nodiscard]] constexpr auto enum_names() noexcept -> detail::enable_if_enum_flags_t<E, detail::names_t<E, true>> {
      |                                                               ^~~~~~~~~~~~~~~~~~~~~~
      |                                                               enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:934:85: Fehler: expected initializer before Â»<Â« token
  934 | [[nodiscard]] constexpr auto enum_names() noexcept -> detail::enable_if_enum_flags_t<E, detail::names_t<E, true>> {
      |                                                                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:942:65: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  942 | [[nodiscard]] constexpr auto enum_entries() noexcept -> detail::enable_if_enum_flags_t<E, detail::entries_t<E, true>> {
      |                                                                 ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                 enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:942:87: Fehler: expected initializer before Â»<Â« token
  942 | [[nodiscard]] constexpr auto enum_entries() noexcept -> detail::enable_if_enum_flags_t<E, detail::entries_t<E, true>> {
      |                                                                                       ^
SHARED/magic_enum-master/include/magic_enum.hpp:951:88: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  951 | [[nodiscard]] constexpr auto enum_cast(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                                                        ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                                        enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:951:110: Fehler: expected initializer before Â»<Â« token
  951 | [[nodiscard]] constexpr auto enum_cast(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                                                                              ^
SHARED/magic_enum-master/include/magic_enum.hpp:981:40: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
  981 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:981:40: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
SHARED/magic_enum-master/include/magic_enum.hpp:981:75: Fehler: expected primary-expression before Â»pÂ«
  981 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                                           ^
SHARED/magic_enum-master/include/magic_enum.hpp:981:76: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
  981 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                                            ^
SHARED/magic_enum-master/include/magic_enum.hpp:981:77: Fehler: expected Â»;Â« before Â»noexceptÂ«
  981 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                                             ^~~~~~~~~
      |                                                                             ;
SHARED/magic_enum-master/include/magic_enum.hpp:1014:40: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
 1014 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1014:40: Fehler: Redeklaration von Â»template<class E> constexpr const auto magic_enum::flags::enum_castÂ«
SHARED/magic_enum-master/include/magic_enum.hpp:981:30: Anmerkung: vorherige Deklaration von Â»template<class E, class BinaryPredicate> constexpr<TypprÃ¤fixfehler> magic_enum::flags::enum_cast<E, BinaryPredicate>Â«
  981 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                              ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1014:40: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
 1014 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1014:58: Fehler: expected Â»;Â« before Â»noexceptÂ«
 1014 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                          ^~~~~~~~~
      |                                                          ;
SHARED/magic_enum-master/include/magic_enum.hpp:1021:19: Fehler: Â»enum_integerÂ« wurde nicht innerhalb von Â»magic_enumÂ« deklariert
 1021 | using magic_enum::enum_integer;
      |                   ^~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1026:70: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
 1026 | [[nodiscard]] constexpr auto enum_index(E value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::size_t>> {
      |                                                                      ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                      enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:1026:92: Fehler: expected initializer before Â»<Â« token
 1026 | [[nodiscard]] constexpr auto enum_index(E value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::size_t>> {
      |                                                                                            ^
SHARED/magic_enum-master/include/magic_enum.hpp:1043:73: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
 1043 | [[nodiscard]] constexpr auto enum_contains(E value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                         ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                         enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:1043:95: Fehler: expected initializer before Â»<Â« token
 1043 | [[nodiscard]] constexpr auto enum_contains(E value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                                               ^
SHARED/magic_enum-master/include/magic_enum.hpp:1052:92: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
 1052 | [[nodiscard]] constexpr auto enum_contains(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                                            ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                                            enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:1052:114: Fehler: expected initializer before Â»<Â« token
 1052 | [[nodiscard]] constexpr auto enum_contains(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                                                                  ^
SHARED/magic_enum-master/include/magic_enum.hpp:1060:44: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
 1060 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1060:44: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
SHARED/magic_enum-master/include/magic_enum.hpp:1060:79: Fehler: expected primary-expression before Â»pÂ«
 1060 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                               ^
SHARED/magic_enum-master/include/magic_enum.hpp:1060:80: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
 1060 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:1060:81: Fehler: expected Â»;Â« before Â»noexceptÂ«
 1060 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 ;
SHARED/magic_enum-master/include/magic_enum.hpp:1069:44: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
 1069 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1069:44: Fehler: Redeklaration von Â»template<class E> constexpr const auto magic_enum::flags::enum_containsÂ«
SHARED/magic_enum-master/include/magic_enum.hpp:1060:30: Anmerkung: vorherige Deklaration von Â»template<class E, class BinaryPredicate> constexpr<TypprÃ¤fixfehler> magic_enum::flags::enum_contains<E, BinaryPredicate>Â«
 1060 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, bool> {
      |                              ^~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1069:44: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
 1069 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1069:62: Fehler: expected Â»;Â« before Â»noexceptÂ«
 1069 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                              ^~~~~~~~~
      |                                                              ;
SHARED/magic_enum-master/include/magic_enum.hpp:1079:63: Fehler: Â»magic_enum::detail::enable_if_enum_flags_tÂ« wurde nicht deklariert
 1079 | template <typename Char, typename Traits, typename E, detail::enable_if_enum_flags_t<E, int> = 0>
      |                                                               ^~~~~~~~~~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1079:85: Fehler: expected Â»>Â« before Â»<Â« token
 1079 | template <typename Char, typename Traits, typename E, detail::enable_if_enum_flags_t<E, int> = 0>
      |                                                                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»std::basic_ostream<_Ch, _Tr>& magic_enum::flags::ostream_operators::operator<<(std::basic_ostream<_Ch, _Tr>&, E)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:1084:7: Warnung: Â»init-statement in AuswahlanweisungenÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
 1084 |   if (const auto name = magic_enum::flags::enum_name<D>(value); !name.empty()) {
      |       ^~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1084:44: Fehler: Â»enum_nameÂ« ist kein Element von Â»magic_enum::flagsÂ«; meinten Sie Â»enum_castÂ«?
 1084 |   if (const auto name = magic_enum::flags::enum_name<D>(value); !name.empty()) {
      |                                            ^~~~~~~~~
      |                                            enum_cast
SHARED/magic_enum-master/include/magic_enum.hpp:1084:55: Fehler: expected primary-expression before Â»>Â« token
 1084 |   if (const auto name = magic_enum::flags::enum_name<D>(value); !name.empty()) {
      |                                                       ^
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:1094:63: Fehler: Â»magic_enum::detail::enable_if_enum_flags_tÂ« wurde nicht deklariert
 1094 | template <typename Char, typename Traits, typename E, detail::enable_if_enum_flags_t<E, int> = 0>
      |                                                               ^~~~~~~~~~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1094:85: Fehler: expected Â»>Â« before Â»<Â« token
 1094 | template <typename Char, typename Traits, typename E, detail::enable_if_enum_flags_t<E, int> = 0>
      |                                                                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:1095:84: Fehler: Â»optionalÂ« wurde nicht deklariert
 1095 | std::basic_ostream<Char, Traits>& operator<<(std::basic_ostream<Char, Traits>& os, optional<E> value) {
      |                                                                                    ^~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1095:92: Fehler: expected Â»,Â« or Â»...Â« before Â»<Â« token
 1095 | std::basic_ostream<Char, Traits>& operator<<(std::basic_ostream<Char, Traits>& os, optional<E> value) {
      |                                                                                            ^
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»std::basic_ostream<_Ch, _Tr>& magic_enum::flags::ostream_operators::operator<<(std::basic_ostream<_Ch, _Tr>&, int)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:1096:10: Fehler: Â»valueÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht deklariert; meinten Sie Â»magic_enum::detail::valueÂ«?
 1096 |   return value.has_value() ? (os << value.value()) : os;
      |          ^~~~~
      |          magic_enum::detail::value
SHARED/magic_enum-master/include/magic_enum.hpp:395:13: Anmerkung: Â»magic_enum::detail::valueÂ« ist hier deklariert
  395 | constexpr E value(std::size_t i) noexcept {
      |             ^~~~~
ConfigParser.cpp: In Elementfunktion Â»std::string ConfigParser::toJson()Â«:
ConfigParser.cpp:14:43: Fehler: Â»enum_valuesÂ« ist kein Element von Â»magic_enumÂ«
   14 |     constexpr auto& entries = magic_enum::enum_values<ConfigParser::CFG_ENTRY>();
      |                                           ^~~~~~~~~~~
ConfigParser.cpp:14:78: Fehler: expected primary-expression before Â»>Â« token
   14 |     constexpr auto& entries = magic_enum::enum_values<ConfigParser::CFG_ENTRY>();
      |                                                                              ^
ConfigParser.cpp:14:80: Fehler: expected primary-expression before Â»)Â« token
   14 |     constexpr auto& entries = magic_enum::enum_values<ConfigParser::CFG_ENTRY>();
      |                                                                                ^
ConfigParser.cpp:19:14: Fehler: Â»string_viewÂ« ist kein Element von Â»stdÂ«
   19 |         std::string_view cfg_name = magic_enum::enum_name(entries.at(i));
      |              ^~~~~~~~~~~
ConfigParser.cpp:19:14: Anmerkung: Â»std::string_viewÂ« ist erst ab C++17 verfÃ¼gbar
ConfigParser.cpp:21:25: Fehler: Â»cfg_nameÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
   21 |         if (std::string(cfg_name).empty()) {
      |                         ^~~~~~~~
ConfigParser.cpp:25:25: Fehler: Â»cfg_nameÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
   25 |         if (std::string(cfg_name).rfind(USER_DATA_CONFIG_ENTRY_PREFIX,0)==0) {
      |                         ^~~~~~~~
ConfigParser.cpp: In Elementfunktion Â»bool ConfigParser::loadFromJson(json11::Json::object, bool)Â«:
ConfigParser.cpp:47:43: Fehler: Â»enum_valuesÂ« ist kein Element von Â»magic_enumÂ«
   47 |     constexpr auto& entries = magic_enum::enum_values<ConfigParser::CFG_ENTRY>();
      |                                           ^~~~~~~~~~~
ConfigParser.cpp:47:78: Fehler: expected primary-expression before Â»>Â« token
   47 |     constexpr auto& entries = magic_enum::enum_values<ConfigParser::CFG_ENTRY>();
      |                                                                              ^
ConfigParser.cpp:47:80: Fehler: expected primary-expression before Â»)Â« token
   47 |     constexpr auto& entries = magic_enum::enum_values<ConfigParser::CFG_ENTRY>();
      |                                                                                ^
ConfigParser.cpp:56:22: Fehler: Â»string_viewÂ« ist kein Element von Â»stdÂ«
   56 |                 std::string_view cfg_name = magic_enum::enum_name(entries.at(i));
      |                      ^~~~~~~~~~~
ConfigParser.cpp:56:22: Anmerkung: Â»std::string_viewÂ« ist erst ab C++17 verfÃ¼gbar
ConfigParser.cpp:57:33: Fehler: Â»cfg_nameÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
   57 |                 if (std::string(cfg_name).empty()) {
      |                                 ^~~~~~~~
ConfigParser.cpp:61:50: Fehler: Â»cfg_nameÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
   61 |                 if(settings_obj.find(std::string(cfg_name)) != settings_obj.end() && settings_obj[std::string(cfg_name)].is_string() && !settings_obj[std::string(cfg_name)].is_null()) {
      |                                                  ^~~~~~~~
ConfigParser.cpp:74:18: Fehler: Â»string_viewÂ« ist kein Element von Â»stdÂ«
   74 |             std::string_view cfg_name = magic_enum::enum_name(entries.at(i));
      |                  ^~~~~~~~~~~
ConfigParser.cpp:74:18: Anmerkung: Â»std::string_viewÂ« ist erst ab C++17 verfÃ¼gbar
ConfigParser.cpp:75:29: Fehler: Â»cfg_nameÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
   75 |             if (std::string(cfg_name).empty()) {
      |                             ^~~~~~~~
ConfigParser.cpp:79:46: Fehler: Â»cfg_nameÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
   79 |             if(settings_obj.find(std::string(cfg_name)) != settings_obj.end() && settings_obj[std::string(cfg_name)].is_string()) {
      |                                              ^~~~~~~~
ConfigParser.cpp: In Elementfunktion Â»bool ConfigParser::loadConfigFile(std::string)Â«:
ConfigParser.cpp:133:40: Fehler: Â»enum_valuesÂ« ist kein Element von Â»magic_enumÂ«
  133 |  constexpr auto& entries = magic_enum::enum_values<ConfigParser::CFG_ENTRY>();
      |                                        ^~~~~~~~~~~
ConfigParser.cpp:133:75: Fehler: expected primary-expression before Â»>Â« token
  133 |  constexpr auto& entries = magic_enum::enum_values<ConfigParser::CFG_ENTRY>();
      |                                                                           ^
ConfigParser.cpp:133:77: Fehler: expected primary-expression before Â»)Â« token
  133 |  constexpr auto& entries = magic_enum::enum_values<ConfigParser::CFG_ENTRY>();
      |                                                                             ^
ConfigParser.cpp:137:8: Fehler: Â»string_viewÂ« ist kein Element von Â»stdÂ«
  137 |   std::string_view cfg_name = magic_enum::enum_name(entries.at(i));
      |        ^~~~~~~~~~~
ConfigParser.cpp:137:8: Anmerkung: Â»std::string_viewÂ« ist erst ab C++17 verfÃ¼gbar
ConfigParser.cpp:138:19: Fehler: Â»cfg_nameÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  138 |   if (std::string(cfg_name).empty()) {
      |                   ^~~~~~~~
ConfigParser.cpp:142:25: Fehler: Â»cfg_nameÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  142 |         if (std::string(cfg_name).rfind(USER_DATA_CONFIG_ENTRY_PREFIX,0)==0) {
      |                         ^~~~~~~~
ConfigParser.cpp: In Elementfunktion Â»bool ConfigParser::writeConfigFile(std::string)Â«:
ConfigParser.cpp:166:40: Fehler: Â»enum_valuesÂ« ist kein Element von Â»magic_enumÂ«
  166 |  constexpr auto& entries = magic_enum::enum_values<ConfigParser::CFG_ENTRY>();
      |                                        ^~~~~~~~~~~
ConfigParser.cpp:166:75: Fehler: expected primary-expression before Â»>Â« token
  166 |  constexpr auto& entries = magic_enum::enum_values<ConfigParser::CFG_ENTRY>();
      |                                                                           ^
ConfigParser.cpp:166:77: Fehler: expected primary-expression before Â»)Â« token
  166 |  constexpr auto& entries = magic_enum::enum_values<ConfigParser::CFG_ENTRY>();
      |                                                                             ^
ConfigParser.cpp:170:8: Fehler: Â»string_viewÂ« ist kein Element von Â»stdÂ«
  170 |   std::string_view cfg_name = magic_enum::enum_name(entries.at(i));
      |        ^~~~~~~~~~~
ConfigParser.cpp:170:8: Anmerkung: Â»std::string_viewÂ« ist erst ab C++17 verfÃ¼gbar
ConfigParser.cpp:171:19: Fehler: Â»cfg_nameÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  171 |   if (std::string(cfg_name).empty()) {
      |                   ^~~~~~~~
ConfigParser.cpp:174:25: Fehler: Â»cfg_nameÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  174 |         if (std::string(cfg_name).rfind(USER_DATA_CONFIG_ENTRY_PREFIX,0)==0) {
      |                         ^~~~~~~~
ConfigParser.cpp:177:25: Fehler: Â»cfg_nameÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  177 |   myfile << std::string(cfg_name) << "=" << config_store[entries.at(i)] << "\n";
      |                         ^~~~~~~~
ConfigParser.cpp:183:14: Fehler: Â»string_viewÂ« ist kein Element von Â»stdÂ«
  183 |         std::string_view cfg_name = magic_enum::enum_name(entries.at(i));
      |              ^~~~~~~~~~~
ConfigParser.cpp:183:14: Anmerkung: Â»std::string_viewÂ« ist erst ab C++17 verfÃ¼gbar
ConfigParser.cpp:184:25: Fehler: Â»cfg_nameÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  184 |         if (std::string(cfg_name).empty()) {
      |                         ^~~~~~~~
ConfigParser.cpp:187:27: Fehler: Â»cfg_nameÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  187 |         if (!(std::string(cfg_name).rfind(USER_DATA_CONFIG_ENTRY_PREFIX,0)==0)) {
      |                           ^~~~~~~~
ConfigParser.cpp:190:31: Fehler: Â»cfg_nameÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  190 |         myfile << std::string(cfg_name) << "=" << config_store[entries.at(i)] << "\n";
      |                               ^~~~~~~~
Makefile:212: recipe for target 'Debug/ConfigParser.o' failed
make[1]: *** [Debug/ConfigParser.o] Error 1
In Datei, eingebunden von ConfigParser.h:13,
                 von HardwareInterface.h:15,
                 von HardwareInterface.cpp:1:
SHARED/magic_enum-master/include/magic_enum.hpp:99:23: Fehler: Â»optionalÂ« in Namensraum Â»stdÂ« bezeichnet keinen Templatetyp
   99 | using optional = std::optional<T>;
      |                       ^~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:99:18: Anmerkung: Â»std::optionalÂ« ist erst ab C++17 verfÃ¼gbar
   99 | using optional = std::optional<T>;
      |                  ^~~
SHARED/magic_enum-master/include/magic_enum.hpp:106:26: Fehler: Â»string_viewÂ« in Namensbereich Â»stdÂ« bezeichnet keinen Typ
  106 | using string_view = std::string_view;
      |                          ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:106:21: Anmerkung: Â»std::string_viewÂ« ist erst ab C++17 verfÃ¼gbar
  106 | using string_view = std::string_view;
      |                     ^~~
In Datei, eingebunden von ConfigParser.h:13,
                 von HardwareInterface.h:15,
                 von HardwareInterface.cpp:1:
SHARED/magic_enum-master/include/magic_enum.hpp:123:22: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  123 |   static_assert(std::is_enum_v<E>, "magic_enum::customize::enum_range requires enum type.");
      |                      ^~~~~~~~~
      |                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:123:33: Fehler: expected primary-expression before Â»>Â« token
  123 |   static_assert(std::is_enum_v<E>, "magic_enum::customize::enum_range requires enum type.");
      |                                 ^
SHARED/magic_enum-master/include/magic_enum.hpp:123:34: Fehler: expected primary-expression before Â»,Â« token
  123 |   static_assert(std::is_enum_v<E>, "magic_enum::customize::enum_range requires enum type.");
      |                                  ^
SHARED/magic_enum-master/include/magic_enum.hpp:124:3: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  124 |   inline static constexpr int min = MAGIC_ENUM_RANGE_MIN;
      |   ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:125:3: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  125 |   inline static constexpr int max = MAGIC_ENUM_RANGE_MAX;
      |   ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:139:11: Fehler: Â»string_viewÂ« bezeichnet keinen Typ
  139 | constexpr string_view enum_name(E) noexcept {
      |           ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:159:47: Fehler: expected Â»)Â« before Â»strÂ«
  159 |   constexpr explicit static_string(string_view str) noexcept : static_string{str, std::make_index_sequence<N>{}} {
      |                                   ~           ^~~~
      |                                               )
SHARED/magic_enum-master/include/magic_enum.hpp:159:114: Fehler: expected unqualified-id before Â»{Â« token
  159 |   constexpr explicit static_string(string_view str) noexcept : static_string{str, std::make_index_sequence<N>{}} {
      |                                                                                                                  ^
SHARED/magic_enum-master/include/magic_enum.hpp:167:22: Fehler: expected type-specifier before Â»string_viewÂ«
  167 |   constexpr operator string_view() const noexcept { return {data(), size()}; }
      |                      ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:171:38: Fehler: expected Â»)Â« before Â»strÂ«
  171 |   constexpr static_string(string_view str, std::index_sequence<I...>) noexcept : chars{{str[I]..., '\0'}} {}
      |                          ~           ^~~~
      |                                      )
SHARED/magic_enum-master/include/magic_enum.hpp:171:107: Fehler: expected unqualified-id before Â»{Â« token
  171 |   constexpr static_string(string_view str, std::index_sequence<I...>) noexcept : chars{{str[I]..., '\0'}} {}
      |                                                                                                           ^
SHARED/magic_enum-master/include/magic_enum.hpp:178:13: Fehler: nur Deklarationen von Konstruktoren und Umwandlungsoperatoren kÃ¶nnen Â»explicitÂ« sein
  178 |   constexpr explicit static_string(string_view) noexcept {}
      |             ^~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:178:36: Fehler: Feld Â»string_viewÂ« hat unvollstÃ¤ndigen Typen Â»const magic_enum::detail::static_string<0>Â«
  178 |   constexpr explicit static_string(string_view) noexcept {}
      |                                    ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:177:8: Anmerkung: Definition von Â»struct magic_enum::detail::static_string<0>Â« ist erst nach der schlieÃŸenden Klammer vollendet
  177 | struct static_string<0> {
      |        ^~~~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:178:3: Fehler: nicht-statisches Datenelement Â»string_viewÂ« als Â»constexprÂ« deklariert
  178 |   constexpr explicit static_string(string_view) noexcept {}
      |   ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:178:47: Fehler: Â»;Â« am Ende von Elementdeklaration erwartet
  178 |   constexpr explicit static_string(string_view) noexcept {}
      |                                               ^
      |                                                ;
SHARED/magic_enum-master/include/magic_enum.hpp:178:49: Fehler: expected unqualified-id before Â»noexceptÂ«
  178 |   constexpr explicit static_string(string_view) noexcept {}
      |                                                 ^~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:184:22: Fehler: expected type-specifier before Â»string_viewÂ«
  184 |   constexpr operator string_view() const noexcept { return {}; }
      |                      ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:193:11: Fehler: Â»string_viewÂ« bezeichnet keinen Typ
  193 | constexpr string_view pretty_name(string_view name) noexcept {
      |           ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:213:28: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  213 | constexpr std::size_t find(string_view str, char c) noexcept {
      |                            ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:213:45: Fehler: expected primary-expression before Â»charÂ«
  213 | constexpr std::size_t find(string_view str, char c) noexcept {
      |                                             ^~~~
SHARED/magic_enum-master/include/magic_enum.hpp:213:51: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
  213 | constexpr std::size_t find(string_view str, char c) noexcept {
      |                                                   ^
SHARED/magic_enum-master/include/magic_enum.hpp:235:26: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                          ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:235:43: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                                           ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:235:75: Fehler: expected primary-expression before Â»&&Â« token
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                                                                           ^~
SHARED/magic_enum-master/include/magic_enum.hpp:235:78: Fehler: Â»pÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                                                                              ^
SHARED/magic_enum-master/include/magic_enum.hpp:235:79: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                                                                               ^
SHARED/magic_enum-master/include/magic_enum.hpp:235:80: Fehler: expected Â»;Â« before Â»noexceptÂ«
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                                                                                ^~~~~~~~~
      |                                                                                ;
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr bool magic_enum::detail::cmp_less(L, R)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:264:22: Fehler: Â»is_integral_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_integralÂ«?
  264 |   static_assert(std::is_integral_v<L> && std::is_integral_v<R>, "magic_enum::detail::cmp_less requires integral type.");
      |                      ^~~~~~~~~~~~~
      |                      is_integral
SHARED/magic_enum-master/include/magic_enum.hpp:264:37: Fehler: expected primary-expression before Â»>Â« token
  264 |   static_assert(std::is_integral_v<L> && std::is_integral_v<R>, "magic_enum::detail::cmp_less requires integral type.");
      |                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:264:45: Fehler: expected Â»,Â« before Â»::Â« token
  264 |   static_assert(std::is_integral_v<L> && std::is_integral_v<R>, "magic_enum::detail::cmp_less requires integral type.");
      |                                             ^~
      |                                             ,
SHARED/magic_enum-master/include/magic_enum.hpp:264:45: Fehler: expected string-literal before Â»::Â« token
  264 |   static_assert(std::is_integral_v<L> && std::is_integral_v<R>, "magic_enum::detail::cmp_less requires integral type.");
      |                                             ^~
SHARED/magic_enum-master/include/magic_enum.hpp:264:45: Fehler: expected Â»)Â« before Â»::Â« token
  264 |   static_assert(std::is_integral_v<L> && std::is_integral_v<R>, "magic_enum::detail::cmp_less requires integral type.");
      |                ~                            ^~
      |                                             )
SHARED/magic_enum-master/include/magic_enum.hpp:266:6: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |      ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:266:22: Fehler: Â»is_signed_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_signedÂ«?
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                      ^~~~~~~~~~~
      |                      is_signed
SHARED/magic_enum-master/include/magic_enum.hpp:266:35: Fehler: expected primary-expression before Â»>Â« token
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                                   ^
SHARED/magic_enum-master/include/magic_enum.hpp:266:37: Fehler: expected primary-expression before Â»==Â« token
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                                     ^~
SHARED/magic_enum-master/include/magic_enum.hpp:266:45: Fehler: Â»is_signed_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_signedÂ«?
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                                             ^~~~~~~~~~~
      |                                             is_signed
SHARED/magic_enum-master/include/magic_enum.hpp:266:58: Fehler: expected primary-expression before Â»>Â« token
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                                                          ^
SHARED/magic_enum-master/include/magic_enum.hpp:266:59: Fehler: expected primary-expression before Â»)Â« token
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                                                           ^
SHARED/magic_enum-master/include/magic_enum.hpp:269:13: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  269 |   } else if constexpr (std::is_signed_v<R>) {
      |             ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:269:29: Fehler: Â»is_signed_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_signedÂ«?
  269 |   } else if constexpr (std::is_signed_v<R>) {
      |                             ^~~~~~~~~~~
      |                             is_signed
SHARED/magic_enum-master/include/magic_enum.hpp:269:42: Fehler: expected primary-expression before Â»>Â« token
  269 |   } else if constexpr (std::is_signed_v<R>) {
      |                                          ^
SHARED/magic_enum-master/include/magic_enum.hpp:269:43: Fehler: expected primary-expression before Â»)Â« token
  269 |   } else if constexpr (std::is_signed_v<R>) {
      |                                           ^
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr I magic_enum::detail::log2(I)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:280:22: Fehler: Â»is_integral_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_integralÂ«?
  280 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::log2 requires integral type.");
      |                      ^~~~~~~~~~~~~
      |                      is_integral
SHARED/magic_enum-master/include/magic_enum.hpp:280:37: Fehler: expected primary-expression before Â»>Â« token
  280 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::log2 requires integral type.");
      |                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:280:38: Fehler: expected primary-expression before Â»,Â« token
  280 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::log2 requires integral type.");
      |                                      ^
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr bool magic_enum::detail::is_pow2(I)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:290:22: Fehler: Â»is_integral_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_integralÂ«?
  290 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::is_pow2 requires integral type.");
      |                      ^~~~~~~~~~~~~
      |                      is_integral
SHARED/magic_enum-master/include/magic_enum.hpp:290:37: Fehler: expected primary-expression before Â»>Â« token
  290 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::is_pow2 requires integral type.");
      |                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:290:38: Fehler: expected primary-expression before Â»,Â« token
  290 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::is_pow2 requires integral type.");
      |                                      ^
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:296:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  296 | inline constexpr bool is_enum_v = std::is_enum_v<T> && std::is_same_v<T, std::decay_t<T>>;
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:296:40: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  296 | inline constexpr bool is_enum_v = std::is_enum_v<T> && std::is_same_v<T, std::decay_t<T>>;
      |                                        ^~~~~~~~~
      |                                        is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:296:51: Fehler: expected primary-expression before Â»>Â« token
  296 | inline constexpr bool is_enum_v = std::is_enum_v<T> && std::is_same_v<T, std::decay_t<T>>;
      |                                                   ^
SHARED/magic_enum-master/include/magic_enum.hpp:296:56: Fehler: Marke Â»stdÂ« auÃŸerhalb einer Funktion referenziert
  296 | inline constexpr bool is_enum_v = std::is_enum_v<T> && std::is_same_v<T, std::decay_t<T>>;
      |                                                        ^~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr auto magic_enum::detail::n()Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:305:13: Fehler: Â»string_viewÂ« bezeichnet keinen Typ
  305 |   constexpr string_view name{__PRETTY_FUNCTION__ + 49, sizeof(__PRETTY_FUNCTION__) - 51};
      |             ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:309:24: Fehler: Â»nameÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht deklariert; meinten Sie Â»renameÂ«?
  309 |   return static_string<name.size()>{name};
      |                        ^~~~
      |                        rename
SHARED/magic_enum-master/include/magic_enum.hpp:309:35: Fehler: Templateargument 1 ist ungÃ¼ltig
  309 |   return static_string<name.size()>{name};
      |                                   ^
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:316:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  316 | inline constexpr auto type_name_v = n<E>();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr auto magic_enum::detail::n()Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:321:43: Fehler: Â»enum_nameÂ« ist kein Element von Â»magic_enum::customizeÂ«; meinten Sie Â»enum_rangeÂ«?
  321 |   constexpr auto custom_name = customize::enum_name<E>(V);
      |                                           ^~~~~~~~~
      |                                           enum_range
SHARED/magic_enum-master/include/magic_enum.hpp:321:54: Fehler: expected primary-expression before Â»>Â« token
  321 |   constexpr auto custom_name = customize::enum_name<E>(V);
      |                                                      ^
SHARED/magic_enum-master/include/magic_enum.hpp:323:6: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  323 |   if constexpr (custom_name.empty()) {
      |      ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:341:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  341 | inline constexpr auto enum_name_v = n<E, V>();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:343:23: Fehler: Â»autoÂ«-Parameter darf in diesem Kontext nicht verwendet werden
  343 | template <typename E, auto V>
      |                       ^~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr int magic_enum::detail::reflected_min()Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:354:6: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  354 |   if constexpr (IsFlags) {
      |      ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:361:8: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  361 |     if constexpr (cmp_less(lhs, rhs)) {
      |        ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr int magic_enum::detail::reflected_max()Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:373:6: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  373 |   if constexpr (IsFlags) {
      |      ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:380:8: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  380 |     if constexpr (cmp_less(lhs, rhs)) {
      |        ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:389:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  389 | inline constexpr auto reflected_min_v = reflected_min<E, IsFlags>();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:392:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  392 | inline constexpr auto reflected_max_v = reflected_max<E, IsFlags>();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr E magic_enum::detail::value(std::size_t)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:398:6: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  398 |   if constexpr (IsFlags) {
      |      ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr auto magic_enum::detail::values(std::index_sequence<I ...>)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:409:62: Fehler: Â»constexprÂ«-Lambda ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  409 |   constexpr std::size_t count = [](decltype((valid)) valid_) constexpr noexcept -> std::size_t {
      |                                                              ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:419:22: Fehler: der Wert von Â»countÂ« ist in konstantem Ausdruck nicht verwendbar
  419 |   std::array<E, count> values{};
      |                      ^
SHARED/magic_enum-master/include/magic_enum.hpp:409:25: Anmerkung: Â»countÂ« in seiner eigenen Initialisierung verwendet
  409 |   constexpr std::size_t count = [](decltype((valid)) valid_) constexpr noexcept -> std::size_t {
      |                         ^~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:419:22: Anmerkung: in Templateargument fÃ¼r Typ Â»unsigned intÂ«
  419 |   std::array<E, count> values{};
      |                      ^
SHARED/magic_enum-master/include/magic_enum.hpp:422:13: Fehler: ungÃ¼ltige Typen Â»int[std::size_t {aka unsigned int}]Â« fÃ¼r Feldindex
  422 |       values[v++] = value<E, Min, IsFlags>(i);
      |             ^
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:440:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  440 | inline constexpr auto values_v = values<E, IsFlags>();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:446:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  446 | inline constexpr auto count_v = values_v<E, IsFlags>.size();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:449:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  449 | inline constexpr auto min_v = static_cast<U>(values_v<E, IsFlags>.front());
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:452:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  452 | inline constexpr auto max_v = static_cast<U>(values_v<E, IsFlags>.back());
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:467:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  467 | inline constexpr auto range_size_v = range_size<E, IsFlags>();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:473:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  473 | inline constexpr auto invalid_index_v = (std::numeric_limits<index_t<E, IsFlags>>::max)();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:485:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  485 | inline constexpr auto indexes_v = indexes<E, IsFlags>(std::make_index_sequence<range_size_v<E, IsFlags>>{});
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr auto magic_enum::detail::names(std::index_sequence<I ...>)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:491:21: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  491 |   return std::array<string_view, sizeof...(I)>{{enum_name_v<E, values_v<E, IsFlags>[I]>...}};
      |                     ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:491:46: Fehler: Templateargument 1 ist ungÃ¼ltig
  491 |   return std::array<string_view, sizeof...(I)>{{enum_name_v<E, values_v<E, IsFlags>[I]>...}};
      |                                              ^
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:495:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  495 | inline constexpr auto names_v = names<E, IsFlags>(std::make_index_sequence<count_v<E, IsFlags>>{});
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr auto magic_enum::detail::entries(std::index_sequence<I ...>)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:504:34: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  504 |   return std::array<std::pair<E, string_view>, sizeof...(I)>{{{values_v<E, IsFlags>[I], enum_name_v<E, values_v<E, IsFlags>[I]>}...}};
      |                                  ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:504:45: Fehler: Templateargument 2 ist ungÃ¼ltig
  504 |   return std::array<std::pair<E, string_view>, sizeof...(I)>{{{values_v<E, IsFlags>[I], enum_name_v<E, values_v<E, IsFlags>[I]>}...}};
      |                                             ^
SHARED/magic_enum-master/include/magic_enum.hpp:504:60: Fehler: Templateargument 1 ist ungÃ¼ltig
  504 |   return std::array<std::pair<E, string_view>, sizeof...(I)>{{{values_v<E, IsFlags>[I], enum_name_v<E, values_v<E, IsFlags>[I]>}...}};
      |                                                            ^
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:508:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  508 | inline constexpr auto entries_v = entries<E, IsFlags>(std::make_index_sequence<count_v<E, IsFlags>>{});
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:521:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  521 | inline constexpr bool is_sparse_v = is_sparse<E, IsFlags>();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr std::size_t magic_enum::detail::undex(U)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:527:7: Warnung: Â»init-statement in AuswahlanweisungenÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  527 |   if (const auto i = static_cast<std::size_t>(value - min_v<E>); value >= min_v<E> && value <= max_v<E>) {
      |       ^~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:528:8: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  528 |     if constexpr (is_sparse_v<E>) {
      |        ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:529:11: Warnung: Â»init-statement in AuswahlanweisungenÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  529 |       if (const auto idx = indexes_v<E>[i]; idx != invalid_index_v<E>) {
      |           ^~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:579:55: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  579 | using enable_if_enum_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, false, T, R>::type;
      |                                                       ^~~~~~~~~
      |                                                       is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:579:55: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  579 | using enable_if_enum_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, false, T, R>::type;
      |                                                       ^~~~~~~~~
      |                                                       is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:579:79: Fehler: falsche Anzahl der Templateargumente (1, sollte 4 sein)
  579 | using enable_if_enum_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, false, T, R>::type;
      |                                                                               ^~
SHARED/magic_enum-master/include/magic_enum.hpp:560:8: Anmerkung: fÃ¼r Â»template<bool <anonym>, bool <anonym>, class T, class R> struct magic_enum::detail::enable_if_enumÂ« bereitgestellt
  560 | struct enable_if_enum {};
      |        ^~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:579:35: Fehler: Spezifikation mit geschachteltem Namen erwartet
  579 | using enable_if_enum_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, false, T, R>::type;
      |                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:582:61: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  582 | using enable_if_enum_flags_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, true, T, R>::type;
      |                                                             ^~~~~~~~~
      |                                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:582:61: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  582 | using enable_if_enum_flags_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, true, T, R>::type;
      |                                                             ^~~~~~~~~
      |                                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:582:85: Fehler: falsche Anzahl der Templateargumente (1, sollte 4 sein)
  582 | using enable_if_enum_flags_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, true, T, R>::type;
      |                                                                                     ^~
SHARED/magic_enum-master/include/magic_enum.hpp:560:8: Anmerkung: fÃ¼r Â»template<bool <anonym>, bool <anonym>, class T, class R> struct magic_enum::detail::enable_if_enumÂ« bereitgestellt
  560 | struct enable_if_enum {};
      |        ^~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:582:41: Fehler: Spezifikation mit geschachteltem Namen erwartet
  582 | using enable_if_enum_flags_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, true, T, R>::type;
      |                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:584:63: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  584 | template <typename T, typename Enable = std::enable_if_t<std::is_enum_v<std::decay_t<T>>>>
      |                                                               ^~~~~~~~~
      |                                                               is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:584:63: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  584 | template <typename T, typename Enable = std::enable_if_t<std::is_enum_v<std::decay_t<T>>>>
      |                                                               ^~~~~~~~~
      |                                                               is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:584:87: Fehler: Templateargument 1 ist ungÃ¼ltig
  584 | template <typename T, typename Enable = std::enable_if_t<std::is_enum_v<std::decay_t<T>>>>
      |                                                                                       ^~
SHARED/magic_enum-master/include/magic_enum.hpp:584:89: Fehler: expected Â»>Â« before Â»>>Â« token
  584 | template <typename T, typename Enable = std::enable_if_t<std::is_enum_v<std::decay_t<T>>>>
      |                                                                                         ^~
SHARED/magic_enum-master/include/magic_enum.hpp:587:35: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  587 | template <typename T, bool = std::is_enum_v<T>>
      |                                   ^~~~~~~~~
      |                                   is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:587:46: Fehler: expected primary-expression before Â»>>Â« token
  587 | template <typename T, bool = std::is_enum_v<T>>
      |                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:587:46: Fehler: expected Â»>Â« before Â»>>Â« token
SHARED/magic_enum-master/include/magic_enum.hpp:591:52: Fehler: expected template-name before Â»<Â« token
  591 | struct is_scoped_enum<T, true> : std::bool_constant<!std::is_convertible_v<T, std::underlying_type_t<T>>> {};
      |                                                    ^
SHARED/magic_enum-master/include/magic_enum.hpp:591:52: Fehler: expected Â»{Â« before Â»<Â« token
SHARED/magic_enum-master/include/magic_enum.hpp:593:35: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  593 | template <typename T, bool = std::is_enum_v<T>>
      |                                   ^~~~~~~~~
      |                                   is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:593:46: Fehler: expected primary-expression before Â»>>Â« token
  593 | template <typename T, bool = std::is_enum_v<T>>
      |                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:593:46: Fehler: expected Â»>Â« before Â»>>Â« token
SHARED/magic_enum-master/include/magic_enum.hpp:597:54: Fehler: expected template-name before Â»<Â« token
  597 | struct is_unscoped_enum<T, true> : std::bool_constant<std::is_convertible_v<T, std::underlying_type_t<T>>> {};
      |                                                      ^
SHARED/magic_enum-master/include/magic_enum.hpp:597:54: Fehler: expected Â»{Â« before Â»<Â« token
SHARED/magic_enum-master/include/magic_enum.hpp:599:35: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  599 | template <typename T, bool = std::is_enum_v<std::decay_t<T>>>
      |                                   ^~~~~~~~~
      |                                   is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:599:59: Fehler: expected primary-expression before Â»>Â« token
  599 | template <typename T, bool = std::is_enum_v<std::decay_t<T>>>
      |                                                           ^~
SHARED/magic_enum-master/include/magic_enum.hpp:599:61: Fehler: expected unqualified-id before Â»>Â« token
  599 | template <typename T, bool = std::is_enum_v<std::decay_t<T>>>
      |                                                             ^
SHARED/magic_enum-master/include/magic_enum.hpp:603:8: Fehler: Â»underlying_typeÂ« ist kein Klassentemplate
  603 | struct underlying_type<T, true> : std::underlying_type<std::decay_t<T>> {};
      |        ^~~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:608:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  608 | inline constexpr bool is_magic_enum_supported = detail::supported<void>::value;
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:611:36: Fehler: Templateargument 2 ist ungÃ¼ltig
  611 | using Enum = detail::enum_concept<T>;
      |                                    ^
SHARED/magic_enum-master/include/magic_enum.hpp:616:53: Fehler: Templateargument 2 ist ungÃ¼ltig
  616 | struct is_unscoped_enum : detail::is_unscoped_enum<T> {};
      |                                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:619:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  619 | inline constexpr bool is_unscoped_enum_v = is_unscoped_enum<T>::value;
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:624:49: Fehler: Templateargument 2 ist ungÃ¼ltig
  624 | struct is_scoped_enum : detail::is_scoped_enum<T> {};
      |                                                 ^
SHARED/magic_enum-master/include/magic_enum.hpp:627:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  627 | inline constexpr bool is_scoped_enum_v = is_scoped_enum<T>::value;
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:105: Fehler: Templateargument 1 ist ungÃ¼ltig
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                                         ^~
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:105: Fehler: Templateargument 1 ist ungÃ¼ltig
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                                         ^~
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:105: Fehler: Templateargument 1 ist ungÃ¼ltig
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                                         ^~
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:105: Fehler: Templateargument 1 ist ungÃ¼ltig
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                                         ^~
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:105: Fehler: Templateargument 1 ist ungÃ¼ltig
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                                         ^~
SHARED/magic_enum-master/include/magic_enum.hpp:639:59: Fehler: ungÃ¼ltige Verwendung des Template-Namens Â»std::enable_if_tÂ« ohne eine Argumentliste
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                           ^~~
In Datei, eingebunden von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/ratio:39,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/chrono:39,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/thread:43,
                 von HardwareInterface.h:8,
                 von HardwareInterface.cpp:1:
/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/type_traits:2554:11: Anmerkung: Â»template<bool _Cond, class _Tp> using enable_if_t = typename std::enable_if::typeÂ« ist hier deklariert
 2554 |     using enable_if_t = typename enable_if<_Cond, _Tp>::type;
      |           ^~~~~~~~~~~
In Datei, eingebunden von ConfigParser.h:13,
                 von HardwareInterface.h:15,
                 von HardwareInterface.cpp:1:
SHARED/magic_enum-master/include/magic_enum.hpp:639:75: Fehler: expected initializer before Â»<Â« token
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                           ^
SHARED/magic_enum-master/include/magic_enum.hpp:649:63: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  649 | [[nodiscard]] constexpr auto enum_count() noexcept -> detail::enable_if_enum_t<E, std::size_t> {
      |                                                               ^~~~~~~~~~~~~~~~
      |                                                               enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:649:79: Fehler: expected initializer before Â»<Â« token
  649 | [[nodiscard]] constexpr auto enum_count() noexcept -> detail::enable_if_enum_t<E, std::size_t> {
      |                                                                               ^
SHARED/magic_enum-master/include/magic_enum.hpp:658:80: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  658 | [[nodiscard]] constexpr auto enum_value(std::size_t index) noexcept -> detail::enable_if_enum_t<E, std::decay_t<E>> {
      |                                                                                ^~~~~~~~~~~~~~~~
      |                                                                                enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:658:96: Fehler: expected initializer before Â»<Â« token
  658 | [[nodiscard]] constexpr auto enum_value(std::size_t index) noexcept -> detail::enable_if_enum_t<E, std::decay_t<E>> {
      |                                                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:670:64: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  670 | [[nodiscard]] constexpr auto enum_values() noexcept -> detail::enable_if_enum_t<E, detail::values_t<E>> {
      |                                                                ^~~~~~~~~~~~~~~~
      |                                                                enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:670:80: Fehler: expected initializer before Â»<Â« token
  670 | [[nodiscard]] constexpr auto enum_values() noexcept -> detail::enable_if_enum_t<E, detail::values_t<E>> {
      |                                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:678:11: Fehler: Â»autoÂ«-Parameter darf in diesem Kontext nicht verwendet werden
  678 | template <auto V>
      |           ^~~~
SHARED/magic_enum-master/include/magic_enum.hpp:679:76: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  679 | [[nodiscard]] constexpr auto enum_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<decltype(V)>>, string_view> {
      |                                                                            ^~~~~~~~~
      |                                                                            is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:679:76: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  679 | [[nodiscard]] constexpr auto enum_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<decltype(V)>>, string_view> {
      |                                                                            ^~~~~~~~~
      |                                                                            is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:679:99: Fehler: Templateargument 1 ist ungÃ¼ltig
  679 | [[nodiscard]] constexpr auto enum_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<decltype(V)>>, string_view> {
      |                                                                                                   ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:679:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  679 | [[nodiscard]] constexpr auto enum_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<decltype(V)>>, string_view> {
      |                                                                                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:690:69: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  690 | [[nodiscard]] constexpr auto enum_name(E value) noexcept -> detail::enable_if_enum_t<E, string_view> {
      |                                                                     ^~~~~~~~~~~~~~~~
      |                                                                     enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:690:85: Fehler: expected initializer before Â»<Â« token
  690 | [[nodiscard]] constexpr auto enum_name(E value) noexcept -> detail::enable_if_enum_t<E, string_view> {
      |                                                                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:702:63: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  702 | [[nodiscard]] constexpr auto enum_names() noexcept -> detail::enable_if_enum_t<E, detail::names_t<E>> {
      |                                                               ^~~~~~~~~~~~~~~~
      |                                                               enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:702:79: Fehler: expected initializer before Â»<Â« token
  702 | [[nodiscard]] constexpr auto enum_names() noexcept -> detail::enable_if_enum_t<E, detail::names_t<E>> {
      |                                                                               ^
SHARED/magic_enum-master/include/magic_enum.hpp:710:65: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  710 | [[nodiscard]] constexpr auto enum_entries() noexcept -> detail::enable_if_enum_t<E, detail::entries_t<E>> {
      |                                                                 ^~~~~~~~~~~~~~~~
      |                                                                 enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:710:81: Fehler: expected initializer before Â»<Â« token
  710 | [[nodiscard]] constexpr auto enum_entries() noexcept -> detail::enable_if_enum_t<E, detail::entries_t<E>> {
      |                                                                                 ^
SHARED/magic_enum-master/include/magic_enum.hpp:719:88: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  719 | [[nodiscard]] constexpr auto enum_cast(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                                                        ^~~~~~~~~~~~~~~~
      |                                                                                        enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:719:104: Fehler: expected initializer before Â»<Â« token
  719 | [[nodiscard]] constexpr auto enum_cast(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:732:40: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:732:40: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
SHARED/magic_enum-master/include/magic_enum.hpp:732:75: Fehler: expected primary-expression before Â»pÂ«
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                                           ^
SHARED/magic_enum-master/include/magic_enum.hpp:732:76: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                                            ^
SHARED/magic_enum-master/include/magic_enum.hpp:732:77: Fehler: expected Â»;Â« before Â»noexceptÂ«
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                                             ^~~~~~~~~
      |                                                                             ;
SHARED/magic_enum-master/include/magic_enum.hpp:748:40: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
  748 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:748:40: Fehler: Redeklaration von Â»template<class E> constexpr const auto magic_enum::enum_castÂ«
SHARED/magic_enum-master/include/magic_enum.hpp:732:30: Anmerkung: vorherige Deklaration von Â»template<class E, class BinaryPredicate> constexpr<TypprÃ¤fixfehler> magic_enum::enum_cast<E, BinaryPredicate>Â«
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                              ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:748:40: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  748 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:748:58: Fehler: expected Â»;Â« before Â»noexceptÂ«
  748 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                          ^~~~~~~~~
      |                                                          ;
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:756:64: Fehler: ungÃ¼ltige Verwendung des Template-Namens Â»std::enable_if_tÂ« ohne eine Argumentliste
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                ^~~
In Datei, eingebunden von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/ratio:39,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/chrono:39,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/thread:43,
                 von HardwareInterface.h:8,
                 von HardwareInterface.cpp:1:
/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/type_traits:2554:11: Anmerkung: Â»template<bool _Cond, class _Tp> using enable_if_t = typename std::enable_if::typeÂ« ist hier deklariert
 2554 |     using enable_if_t = typename enable_if<_Cond, _Tp>::type;
      |           ^~~~~~~~~~~
In Datei, eingebunden von ConfigParser.h:13,
                 von HardwareInterface.h:15,
                 von HardwareInterface.cpp:1:
SHARED/magic_enum-master/include/magic_enum.hpp:756:80: Fehler: expected initializer before Â»<Â« token
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:763:70: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  763 | [[nodiscard]] constexpr auto enum_index(E value) noexcept -> detail::enable_if_enum_t<E, optional<std::size_t>> {
      |                                                                      ^~~~~~~~~~~~~~~~
      |                                                                      enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:763:86: Fehler: expected initializer before Â»<Â« token
  763 | [[nodiscard]] constexpr auto enum_index(E value) noexcept -> detail::enable_if_enum_t<E, optional<std::size_t>> {
      |                                                                                      ^
SHARED/magic_enum-master/include/magic_enum.hpp:775:73: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  775 | [[nodiscard]] constexpr auto enum_contains(E value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                                                         ^~~~~~~~~~~~~~~~
      |                                                                         enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:775:89: Fehler: expected initializer before Â»<Â« token
  775 | [[nodiscard]] constexpr auto enum_contains(E value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                                                                         ^
SHARED/magic_enum-master/include/magic_enum.hpp:783:92: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  783 | [[nodiscard]] constexpr auto enum_contains(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                                                                            ^~~~~~~~~~~~~~~~
      |                                                                                            enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:783:108: Fehler: expected initializer before Â»<Â« token
  783 | [[nodiscard]] constexpr auto enum_contains(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                                                                                            ^
SHARED/magic_enum-master/include/magic_enum.hpp:791:44: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
  791 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:791:44: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
SHARED/magic_enum-master/include/magic_enum.hpp:791:79: Fehler: expected primary-expression before Â»pÂ«
  791 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, bool> {
      |                                                                               ^
SHARED/magic_enum-master/include/magic_enum.hpp:791:80: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
  791 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, bool> {
      |                                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:791:81: Fehler: expected Â»;Â« before Â»noexceptÂ«
  791 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, bool> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 ;
SHARED/magic_enum-master/include/magic_enum.hpp:800:44: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
  800 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:800:44: Fehler: Redeklaration von Â»template<class E> constexpr const auto magic_enum::enum_containsÂ«
SHARED/magic_enum-master/include/magic_enum.hpp:791:30: Anmerkung: vorherige Deklaration von Â»template<class E, class BinaryPredicate> constexpr<TypprÃ¤fixfehler> magic_enum::enum_contains<E, BinaryPredicate>Â«
  791 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, bool> {
      |                              ^~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:800:44: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  800 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:800:62: Fehler: expected Â»;Â« before Â»noexceptÂ«
  800 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                                              ^~~~~~~~~
      |                                                              ;
SHARED/magic_enum-master/include/magic_enum.hpp:808:77: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  808 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                             ^~~~~~~~~
      |                                                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:808:77: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  808 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                             ^~~~~~~~~
      |                                                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:808:88: Fehler: Templateargument 1 ist ungÃ¼ltig
  808 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:808:96: Fehler: expected unqualified-id before Â»=Â« token
  808 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:823:77: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  823 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                             ^~~~~~~~~
      |                                                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:823:77: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  823 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                             ^~~~~~~~~
      |                                                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:823:88: Fehler: Templateargument 1 ist ungÃ¼ltig
  823 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:823:96: Fehler: expected unqualified-id before Â»=Â« token
  823 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:832:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  832 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:832:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  832 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:832:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  832 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:832:64: Fehler: expected unqualified-id before Â»=Â« token
  832 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:837:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  837 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:837:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  837 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:837:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  837 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:837:64: Fehler: expected unqualified-id before Â»=Â« token
  837 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:842:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  842 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:842:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  842 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:842:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  842 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:842:64: Fehler: expected unqualified-id before Â»=Â« token
  842 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:847:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  847 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:847:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  847 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:847:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  847 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:847:64: Fehler: expected unqualified-id before Â»=Â« token
  847 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:852:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  852 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:852:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  852 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:852:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  852 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:852:64: Fehler: expected unqualified-id before Â»=Â« token
  852 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:857:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  857 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:857:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  857 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:857:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  857 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:857:64: Fehler: expected unqualified-id before Â»=Â« token
  857 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:862:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  862 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:862:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  862 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:862:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  862 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:862:64: Fehler: expected unqualified-id before Â»=Â« token
  862 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:872:19: Fehler: Â»enum_type_nameÂ« wurde nicht innerhalb von Â»magic_enumÂ« deklariert
  872 | using magic_enum::enum_type_name;
      |                   ^~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:876:63: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  876 | [[nodiscard]] constexpr auto enum_count() noexcept -> detail::enable_if_enum_flags_t<E, std::size_t> {
      |                                                               ^~~~~~~~~~~~~~~~~~~~~~
      |                                                               enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:876:85: Fehler: expected initializer before Â»<Â« token
  876 | [[nodiscard]] constexpr auto enum_count() noexcept -> detail::enable_if_enum_flags_t<E, std::size_t> {
      |                                                                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:885:80: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  885 | [[nodiscard]] constexpr auto enum_value(std::size_t index) noexcept -> detail::enable_if_enum_flags_t<E, std::decay_t<E>> {
      |                                                                                ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                                enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:885:102: Fehler: expected initializer before Â»<Â« token
  885 | [[nodiscard]] constexpr auto enum_value(std::size_t index) noexcept -> detail::enable_if_enum_flags_t<E, std::decay_t<E>> {
      |                                                                                                      ^
SHARED/magic_enum-master/include/magic_enum.hpp:899:64: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  899 | [[nodiscard]] constexpr auto enum_values() noexcept -> detail::enable_if_enum_flags_t<E, detail::values_t<E, true>> {
      |                                                                ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:899:86: Fehler: expected initializer before Â»<Â« token
  899 | [[nodiscard]] constexpr auto enum_values() noexcept -> detail::enable_if_enum_flags_t<E, detail::values_t<E, true>> {
      |                                                                                      ^
SHARED/magic_enum-master/include/magic_enum.hpp:908:50: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  908 | [[nodiscard]] auto enum_name(E value) -> detail::enable_if_enum_flags_t<E, string> {
      |                                                  ^~~~~~~~~~~~~~~~~~~~~~
      |                                                  enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:908:72: Fehler: expected initializer before Â»<Â« token
  908 | [[nodiscard]] auto enum_name(E value) -> detail::enable_if_enum_flags_t<E, string> {
      |                                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:934:63: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  934 | [[nodiscard]] constexpr auto enum_names() noexcept -> detail::enable_if_enum_flags_t<E, detail::names_t<E, true>> {
      |                                                               ^~~~~~~~~~~~~~~~~~~~~~
      |                                                               enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:934:85: Fehler: expected initializer before Â»<Â« token
  934 | [[nodiscard]] constexpr auto enum_names() noexcept -> detail::enable_if_enum_flags_t<E, detail::names_t<E, true>> {
      |                                                                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:942:65: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  942 | [[nodiscard]] constexpr auto enum_entries() noexcept -> detail::enable_if_enum_flags_t<E, detail::entries_t<E, true>> {
      |                                                                 ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                 enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:942:87: Fehler: expected initializer before Â»<Â« token
  942 | [[nodiscard]] constexpr auto enum_entries() noexcept -> detail::enable_if_enum_flags_t<E, detail::entries_t<E, true>> {
      |                                                                                       ^
SHARED/magic_enum-master/include/magic_enum.hpp:951:88: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  951 | [[nodiscard]] constexpr auto enum_cast(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                                                        ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                                        enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:951:110: Fehler: expected initializer before Â»<Â« token
  951 | [[nodiscard]] constexpr auto enum_cast(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                                                                              ^
SHARED/magic_enum-master/include/magic_enum.hpp:981:40: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
  981 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:981:40: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
SHARED/magic_enum-master/include/magic_enum.hpp:981:75: Fehler: expected primary-expression before Â»pÂ«
  981 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                                           ^
SHARED/magic_enum-master/include/magic_enum.hpp:981:76: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
  981 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                                            ^
SHARED/magic_enum-master/include/magic_enum.hpp:981:77: Fehler: expected Â»;Â« before Â»noexceptÂ«
  981 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                                             ^~~~~~~~~
      |                                                                             ;
SHARED/magic_enum-master/include/magic_enum.hpp:1014:40: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
 1014 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1014:40: Fehler: Redeklaration von Â»template<class E> constexpr const auto magic_enum::flags::enum_castÂ«
SHARED/magic_enum-master/include/magic_enum.hpp:981:30: Anmerkung: vorherige Deklaration von Â»template<class E, class BinaryPredicate> constexpr<TypprÃ¤fixfehler> magic_enum::flags::enum_cast<E, BinaryPredicate>Â«
  981 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                              ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1014:40: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
 1014 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1014:58: Fehler: expected Â»;Â« before Â»noexceptÂ«
 1014 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                          ^~~~~~~~~
      |                                                          ;
SHARED/magic_enum-master/include/magic_enum.hpp:1021:19: Fehler: Â»enum_integerÂ« wurde nicht innerhalb von Â»magic_enumÂ« deklariert
 1021 | using magic_enum::enum_integer;
      |                   ^~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1026:70: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
 1026 | [[nodiscard]] constexpr auto enum_index(E value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::size_t>> {
      |                                                                      ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                      enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:1026:92: Fehler: expected initializer before Â»<Â« token
 1026 | [[nodiscard]] constexpr auto enum_index(E value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::size_t>> {
      |                                                                                            ^
SHARED/magic_enum-master/include/magic_enum.hpp:1043:73: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
 1043 | [[nodiscard]] constexpr auto enum_contains(E value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                         ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                         enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:1043:95: Fehler: expected initializer before Â»<Â« token
 1043 | [[nodiscard]] constexpr auto enum_contains(E value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                                               ^
SHARED/magic_enum-master/include/magic_enum.hpp:1052:92: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
 1052 | [[nodiscard]] constexpr auto enum_contains(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                                            ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                                            enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:1052:114: Fehler: expected initializer before Â»<Â« token
 1052 | [[nodiscard]] constexpr auto enum_contains(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                                                                  ^
SHARED/magic_enum-master/include/magic_enum.hpp:1060:44: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
 1060 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1060:44: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
SHARED/magic_enum-master/include/magic_enum.hpp:1060:79: Fehler: expected primary-expression before Â»pÂ«
 1060 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                               ^
SHARED/magic_enum-master/include/magic_enum.hpp:1060:80: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
 1060 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:1060:81: Fehler: expected Â»;Â« before Â»noexceptÂ«
 1060 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 ;
SHARED/magic_enum-master/include/magic_enum.hpp:1069:44: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
 1069 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1069:44: Fehler: Redeklaration von Â»template<class E> constexpr const auto magic_enum::flags::enum_containsÂ«
SHARED/magic_enum-master/include/magic_enum.hpp:1060:30: Anmerkung: vorherige Deklaration von Â»template<class E, class BinaryPredicate> constexpr<TypprÃ¤fixfehler> magic_enum::flags::enum_contains<E, BinaryPredicate>Â«
 1060 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, bool> {
      |                              ^~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1069:44: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
 1069 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1069:62: Fehler: expected Â»;Â« before Â»noexceptÂ«
 1069 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                              ^~~~~~~~~
      |                                                              ;
SHARED/magic_enum-master/include/magic_enum.hpp:1079:63: Fehler: Â»magic_enum::detail::enable_if_enum_flags_tÂ« wurde nicht deklariert
 1079 | template <typename Char, typename Traits, typename E, detail::enable_if_enum_flags_t<E, int> = 0>
      |                                                               ^~~~~~~~~~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1079:85: Fehler: expected Â»>Â« before Â»<Â« token
 1079 | template <typename Char, typename Traits, typename E, detail::enable_if_enum_flags_t<E, int> = 0>
      |                                                                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»std::basic_ostream<_Ch, _Tr>& magic_enum::flags::ostream_operators::operator<<(std::basic_ostream<_Ch, _Tr>&, E)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:1084:7: Warnung: Â»init-statement in AuswahlanweisungenÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
 1084 |   if (const auto name = magic_enum::flags::enum_name<D>(value); !name.empty()) {
      |       ^~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1084:44: Fehler: Â»enum_nameÂ« ist kein Element von Â»magic_enum::flagsÂ«; meinten Sie Â»enum_castÂ«?
 1084 |   if (const auto name = magic_enum::flags::enum_name<D>(value); !name.empty()) {
      |                                            ^~~~~~~~~
      |                                            enum_cast
SHARED/magic_enum-master/include/magic_enum.hpp:1084:55: Fehler: expected primary-expression before Â»>Â« token
 1084 |   if (const auto name = magic_enum::flags::enum_name<D>(value); !name.empty()) {
      |                                                       ^
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:1094:63: Fehler: Â»magic_enum::detail::enable_if_enum_flags_tÂ« wurde nicht deklariert
 1094 | template <typename Char, typename Traits, typename E, detail::enable_if_enum_flags_t<E, int> = 0>
      |                                                               ^~~~~~~~~~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1094:85: Fehler: expected Â»>Â« before Â»<Â« token
 1094 | template <typename Char, typename Traits, typename E, detail::enable_if_enum_flags_t<E, int> = 0>
      |                                                                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:1095:84: Fehler: Â»optionalÂ« wurde nicht deklariert
 1095 | std::basic_ostream<Char, Traits>& operator<<(std::basic_ostream<Char, Traits>& os, optional<E> value) {
      |                                                                                    ^~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1095:92: Fehler: expected Â»,Â« or Â»...Â« before Â»<Â« token
 1095 | std::basic_ostream<Char, Traits>& operator<<(std::basic_ostream<Char, Traits>& os, optional<E> value) {
      |                                                                                            ^
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»std::basic_ostream<_Ch, _Tr>& magic_enum::flags::ostream_operators::operator<<(std::basic_ostream<_Ch, _Tr>&, int)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:1096:10: Fehler: Â»valueÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht deklariert; meinten Sie Â»magic_enum::detail::valueÂ«?
 1096 |   return value.has_value() ? (os << value.value()) : os;
      |          ^~~~~
      |          magic_enum::detail::value
SHARED/magic_enum-master/include/magic_enum.hpp:395:13: Anmerkung: Â»magic_enum::detail::valueÂ« ist hier deklariert
  395 | constexpr E value(std::size_t i) noexcept {
      |             ^~~~~
HardwareInterface.cpp: In Elementfunktion Â»ChessPiece::FIGURE HardwareInterface::ScanNFC(int)Â«:
HardwareInterface.cpp:228:1: Warnung: Kontrollfluss erreicht Ende von Nicht-void-Funktion [-Wreturn-type]
  228 | }
      | ^
HardwareInterface.cpp: In Elementfunktion Â»bool HardwareInterface::is_target_position_reached()Â«:
HardwareInterface.cpp:293:1: Warnung: Kontrollfluss erreicht Ende von Nicht-void-Funktion [-Wreturn-type]
  293 | }
      | ^
Makefile:212: recipe for target 'Debug/HardwareInterface.o' failed
make[1]: *** [Debug/HardwareInterface.o] Error 1
In Datei, eingebunden von ConfigParser.h:13,
                 von HardwareInterface.h:15,
                 von ChessBoard.h:28,
                 von ChessBoard.cpp:1:
SHARED/magic_enum-master/include/magic_enum.hpp:99:23: Fehler: Â»optionalÂ« in Namensraum Â»stdÂ« bezeichnet keinen Templatetyp
   99 | using optional = std::optional<T>;
      |                       ^~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:99:18: Anmerkung: Â»std::optionalÂ« ist erst ab C++17 verfÃ¼gbar
   99 | using optional = std::optional<T>;
      |                  ^~~
SHARED/magic_enum-master/include/magic_enum.hpp:106:26: Fehler: Â»string_viewÂ« in Namensbereich Â»stdÂ« bezeichnet keinen Typ
  106 | using string_view = std::string_view;
      |                          ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:106:21: Anmerkung: Â»std::string_viewÂ« ist erst ab C++17 verfÃ¼gbar
  106 | using string_view = std::string_view;
      |                     ^~~
In Datei, eingebunden von ConfigParser.h:13,
                 von HardwareInterface.h:15,
                 von ChessBoard.h:28,
                 von ChessBoard.cpp:1:
SHARED/magic_enum-master/include/magic_enum.hpp:123:22: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  123 |   static_assert(std::is_enum_v<E>, "magic_enum::customize::enum_range requires enum type.");
      |                      ^~~~~~~~~
      |                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:123:33: Fehler: expected primary-expression before Â»>Â« token
  123 |   static_assert(std::is_enum_v<E>, "magic_enum::customize::enum_range requires enum type.");
      |                                 ^
SHARED/magic_enum-master/include/magic_enum.hpp:123:34: Fehler: expected primary-expression before Â»,Â« token
  123 |   static_assert(std::is_enum_v<E>, "magic_enum::customize::enum_range requires enum type.");
      |                                  ^
SHARED/magic_enum-master/include/magic_enum.hpp:124:3: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  124 |   inline static constexpr int min = MAGIC_ENUM_RANGE_MIN;
      |   ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:125:3: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  125 |   inline static constexpr int max = MAGIC_ENUM_RANGE_MAX;
      |   ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:139:11: Fehler: Â»string_viewÂ« bezeichnet keinen Typ
  139 | constexpr string_view enum_name(E) noexcept {
      |           ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:159:47: Fehler: expected Â»)Â« before Â»strÂ«
  159 |   constexpr explicit static_string(string_view str) noexcept : static_string{str, std::make_index_sequence<N>{}} {
      |                                   ~           ^~~~
      |                                               )
SHARED/magic_enum-master/include/magic_enum.hpp:159:114: Fehler: expected unqualified-id before Â»{Â« token
  159 |   constexpr explicit static_string(string_view str) noexcept : static_string{str, std::make_index_sequence<N>{}} {
      |                                                                                                                  ^
SHARED/magic_enum-master/include/magic_enum.hpp:167:22: Fehler: expected type-specifier before Â»string_viewÂ«
  167 |   constexpr operator string_view() const noexcept { return {data(), size()}; }
      |                      ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:171:38: Fehler: expected Â»)Â« before Â»strÂ«
  171 |   constexpr static_string(string_view str, std::index_sequence<I...>) noexcept : chars{{str[I]..., '\0'}} {}
      |                          ~           ^~~~
      |                                      )
SHARED/magic_enum-master/include/magic_enum.hpp:171:107: Fehler: expected unqualified-id before Â»{Â« token
  171 |   constexpr static_string(string_view str, std::index_sequence<I...>) noexcept : chars{{str[I]..., '\0'}} {}
      |                                                                                                           ^
SHARED/magic_enum-master/include/magic_enum.hpp:178:13: Fehler: nur Deklarationen von Konstruktoren und Umwandlungsoperatoren kÃ¶nnen Â»explicitÂ« sein
  178 |   constexpr explicit static_string(string_view) noexcept {}
      |             ^~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:178:36: Fehler: Feld Â»string_viewÂ« hat unvollstÃ¤ndigen Typen Â»const magic_enum::detail::static_string<0>Â«
  178 |   constexpr explicit static_string(string_view) noexcept {}
      |                                    ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:177:8: Anmerkung: Definition von Â»struct magic_enum::detail::static_string<0>Â« ist erst nach der schlieÃŸenden Klammer vollendet
  177 | struct static_string<0> {
      |        ^~~~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:178:3: Fehler: nicht-statisches Datenelement Â»string_viewÂ« als Â»constexprÂ« deklariert
  178 |   constexpr explicit static_string(string_view) noexcept {}
      |   ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:178:47: Fehler: Â»;Â« am Ende von Elementdeklaration erwartet
  178 |   constexpr explicit static_string(string_view) noexcept {}
      |                                               ^
      |                                                ;
SHARED/magic_enum-master/include/magic_enum.hpp:178:49: Fehler: expected unqualified-id before Â»noexceptÂ«
  178 |   constexpr explicit static_string(string_view) noexcept {}
      |                                                 ^~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:184:22: Fehler: expected type-specifier before Â»string_viewÂ«
  184 |   constexpr operator string_view() const noexcept { return {}; }
      |                      ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:193:11: Fehler: Â»string_viewÂ« bezeichnet keinen Typ
  193 | constexpr string_view pretty_name(string_view name) noexcept {
      |           ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:213:28: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  213 | constexpr std::size_t find(string_view str, char c) noexcept {
      |                            ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:213:45: Fehler: expected primary-expression before Â»charÂ«
  213 | constexpr std::size_t find(string_view str, char c) noexcept {
      |                                             ^~~~
SHARED/magic_enum-master/include/magic_enum.hpp:213:51: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
  213 | constexpr std::size_t find(string_view str, char c) noexcept {
      |                                                   ^
SHARED/magic_enum-master/include/magic_enum.hpp:235:26: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                          ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:235:43: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                                           ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:235:75: Fehler: expected primary-expression before Â»&&Â« token
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                                                                           ^~
SHARED/magic_enum-master/include/magic_enum.hpp:235:78: Fehler: Â»pÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                                                                              ^
SHARED/magic_enum-master/include/magic_enum.hpp:235:79: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                                                                               ^
SHARED/magic_enum-master/include/magic_enum.hpp:235:80: Fehler: expected Â»;Â« before Â»noexceptÂ«
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                                                                                ^~~~~~~~~
      |                                                                                ;
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr bool magic_enum::detail::cmp_less(L, R)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:264:22: Fehler: Â»is_integral_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_integralÂ«?
  264 |   static_assert(std::is_integral_v<L> && std::is_integral_v<R>, "magic_enum::detail::cmp_less requires integral type.");
      |                      ^~~~~~~~~~~~~
      |                      is_integral
SHARED/magic_enum-master/include/magic_enum.hpp:264:37: Fehler: expected primary-expression before Â»>Â« token
  264 |   static_assert(std::is_integral_v<L> && std::is_integral_v<R>, "magic_enum::detail::cmp_less requires integral type.");
      |                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:264:45: Fehler: expected Â»,Â« before Â»::Â« token
  264 |   static_assert(std::is_integral_v<L> && std::is_integral_v<R>, "magic_enum::detail::cmp_less requires integral type.");
      |                                             ^~
      |                                             ,
SHARED/magic_enum-master/include/magic_enum.hpp:264:45: Fehler: expected string-literal before Â»::Â« token
  264 |   static_assert(std::is_integral_v<L> && std::is_integral_v<R>, "magic_enum::detail::cmp_less requires integral type.");
      |                                             ^~
SHARED/magic_enum-master/include/magic_enum.hpp:264:45: Fehler: expected Â»)Â« before Â»::Â« token
  264 |   static_assert(std::is_integral_v<L> && std::is_integral_v<R>, "magic_enum::detail::cmp_less requires integral type.");
      |                ~                            ^~
      |                                             )
SHARED/magic_enum-master/include/magic_enum.hpp:266:6: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |      ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:266:22: Fehler: Â»is_signed_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_signedÂ«?
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                      ^~~~~~~~~~~
      |                      is_signed
SHARED/magic_enum-master/include/magic_enum.hpp:266:35: Fehler: expected primary-expression before Â»>Â« token
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                                   ^
SHARED/magic_enum-master/include/magic_enum.hpp:266:37: Fehler: expected primary-expression before Â»==Â« token
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                                     ^~
SHARED/magic_enum-master/include/magic_enum.hpp:266:45: Fehler: Â»is_signed_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_signedÂ«?
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                                             ^~~~~~~~~~~
      |                                             is_signed
SHARED/magic_enum-master/include/magic_enum.hpp:266:58: Fehler: expected primary-expression before Â»>Â« token
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                                                          ^
SHARED/magic_enum-master/include/magic_enum.hpp:266:59: Fehler: expected primary-expression before Â»)Â« token
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                                                           ^
SHARED/magic_enum-master/include/magic_enum.hpp:269:13: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  269 |   } else if constexpr (std::is_signed_v<R>) {
      |             ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:269:29: Fehler: Â»is_signed_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_signedÂ«?
  269 |   } else if constexpr (std::is_signed_v<R>) {
      |                             ^~~~~~~~~~~
      |                             is_signed
SHARED/magic_enum-master/include/magic_enum.hpp:269:42: Fehler: expected primary-expression before Â»>Â« token
  269 |   } else if constexpr (std::is_signed_v<R>) {
      |                                          ^
SHARED/magic_enum-master/include/magic_enum.hpp:269:43: Fehler: expected primary-expression before Â»)Â« token
  269 |   } else if constexpr (std::is_signed_v<R>) {
      |                                           ^
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr I magic_enum::detail::log2(I)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:280:22: Fehler: Â»is_integral_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_integralÂ«?
  280 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::log2 requires integral type.");
      |                      ^~~~~~~~~~~~~
      |                      is_integral
SHARED/magic_enum-master/include/magic_enum.hpp:280:37: Fehler: expected primary-expression before Â»>Â« token
  280 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::log2 requires integral type.");
      |                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:280:38: Fehler: expected primary-expression before Â»,Â« token
  280 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::log2 requires integral type.");
      |                                      ^
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr bool magic_enum::detail::is_pow2(I)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:290:22: Fehler: Â»is_integral_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_integralÂ«?
  290 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::is_pow2 requires integral type.");
      |                      ^~~~~~~~~~~~~
      |                      is_integral
SHARED/magic_enum-master/include/magic_enum.hpp:290:37: Fehler: expected primary-expression before Â»>Â« token
  290 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::is_pow2 requires integral type.");
      |                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:290:38: Fehler: expected primary-expression before Â»,Â« token
  290 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::is_pow2 requires integral type.");
      |                                      ^
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:296:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  296 | inline constexpr bool is_enum_v = std::is_enum_v<T> && std::is_same_v<T, std::decay_t<T>>;
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:296:40: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  296 | inline constexpr bool is_enum_v = std::is_enum_v<T> && std::is_same_v<T, std::decay_t<T>>;
      |                                        ^~~~~~~~~
      |                                        is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:296:51: Fehler: expected primary-expression before Â»>Â« token
  296 | inline constexpr bool is_enum_v = std::is_enum_v<T> && std::is_same_v<T, std::decay_t<T>>;
      |                                                   ^
SHARED/magic_enum-master/include/magic_enum.hpp:296:56: Fehler: Marke Â»stdÂ« auÃŸerhalb einer Funktion referenziert
  296 | inline constexpr bool is_enum_v = std::is_enum_v<T> && std::is_same_v<T, std::decay_t<T>>;
      |                                                        ^~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr auto magic_enum::detail::n()Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:305:13: Fehler: Â»string_viewÂ« bezeichnet keinen Typ
  305 |   constexpr string_view name{__PRETTY_FUNCTION__ + 49, sizeof(__PRETTY_FUNCTION__) - 51};
      |             ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:309:24: Fehler: Â»nameÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht deklariert; meinten Sie Â»renameÂ«?
  309 |   return static_string<name.size()>{name};
      |                        ^~~~
      |                        rename
SHARED/magic_enum-master/include/magic_enum.hpp:309:35: Fehler: Templateargument 1 ist ungÃ¼ltig
  309 |   return static_string<name.size()>{name};
      |                                   ^
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:316:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  316 | inline constexpr auto type_name_v = n<E>();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr auto magic_enum::detail::n()Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:321:43: Fehler: Â»enum_nameÂ« ist kein Element von Â»magic_enum::customizeÂ«; meinten Sie Â»enum_rangeÂ«?
  321 |   constexpr auto custom_name = customize::enum_name<E>(V);
      |                                           ^~~~~~~~~
      |                                           enum_range
SHARED/magic_enum-master/include/magic_enum.hpp:321:54: Fehler: expected primary-expression before Â»>Â« token
  321 |   constexpr auto custom_name = customize::enum_name<E>(V);
      |                                                      ^
SHARED/magic_enum-master/include/magic_enum.hpp:323:6: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  323 |   if constexpr (custom_name.empty()) {
      |      ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:341:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  341 | inline constexpr auto enum_name_v = n<E, V>();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:343:23: Fehler: Â»autoÂ«-Parameter darf in diesem Kontext nicht verwendet werden
  343 | template <typename E, auto V>
      |                       ^~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr int magic_enum::detail::reflected_min()Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:354:6: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  354 |   if constexpr (IsFlags) {
      |      ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:361:8: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  361 |     if constexpr (cmp_less(lhs, rhs)) {
      |        ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr int magic_enum::detail::reflected_max()Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:373:6: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  373 |   if constexpr (IsFlags) {
      |      ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:380:8: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  380 |     if constexpr (cmp_less(lhs, rhs)) {
      |        ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:389:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  389 | inline constexpr auto reflected_min_v = reflected_min<E, IsFlags>();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:392:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  392 | inline constexpr auto reflected_max_v = reflected_max<E, IsFlags>();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr E magic_enum::detail::value(std::size_t)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:398:6: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  398 |   if constexpr (IsFlags) {
      |      ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr auto magic_enum::detail::values(std::index_sequence<I ...>)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:409:62: Fehler: Â»constexprÂ«-Lambda ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  409 |   constexpr std::size_t count = [](decltype((valid)) valid_) constexpr noexcept -> std::size_t {
      |                                                              ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:419:22: Fehler: der Wert von Â»countÂ« ist in konstantem Ausdruck nicht verwendbar
  419 |   std::array<E, count> values{};
      |                      ^
SHARED/magic_enum-master/include/magic_enum.hpp:409:25: Anmerkung: Â»countÂ« in seiner eigenen Initialisierung verwendet
  409 |   constexpr std::size_t count = [](decltype((valid)) valid_) constexpr noexcept -> std::size_t {
      |                         ^~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:419:22: Anmerkung: in Templateargument fÃ¼r Typ Â»unsigned intÂ«
  419 |   std::array<E, count> values{};
      |                      ^
SHARED/magic_enum-master/include/magic_enum.hpp:422:13: Fehler: ungÃ¼ltige Typen Â»int[std::size_t {aka unsigned int}]Â« fÃ¼r Feldindex
  422 |       values[v++] = value<E, Min, IsFlags>(i);
      |             ^
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:440:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  440 | inline constexpr auto values_v = values<E, IsFlags>();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:446:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  446 | inline constexpr auto count_v = values_v<E, IsFlags>.size();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:449:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  449 | inline constexpr auto min_v = static_cast<U>(values_v<E, IsFlags>.front());
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:452:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  452 | inline constexpr auto max_v = static_cast<U>(values_v<E, IsFlags>.back());
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:467:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  467 | inline constexpr auto range_size_v = range_size<E, IsFlags>();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:473:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  473 | inline constexpr auto invalid_index_v = (std::numeric_limits<index_t<E, IsFlags>>::max)();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:485:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  485 | inline constexpr auto indexes_v = indexes<E, IsFlags>(std::make_index_sequence<range_size_v<E, IsFlags>>{});
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr auto magic_enum::detail::names(std::index_sequence<I ...>)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:491:21: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  491 |   return std::array<string_view, sizeof...(I)>{{enum_name_v<E, values_v<E, IsFlags>[I]>...}};
      |                     ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:491:46: Fehler: Templateargument 1 ist ungÃ¼ltig
  491 |   return std::array<string_view, sizeof...(I)>{{enum_name_v<E, values_v<E, IsFlags>[I]>...}};
      |                                              ^
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:495:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  495 | inline constexpr auto names_v = names<E, IsFlags>(std::make_index_sequence<count_v<E, IsFlags>>{});
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr auto magic_enum::detail::entries(std::index_sequence<I ...>)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:504:34: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  504 |   return std::array<std::pair<E, string_view>, sizeof...(I)>{{{values_v<E, IsFlags>[I], enum_name_v<E, values_v<E, IsFlags>[I]>}...}};
      |                                  ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:504:45: Fehler: Templateargument 2 ist ungÃ¼ltig
  504 |   return std::array<std::pair<E, string_view>, sizeof...(I)>{{{values_v<E, IsFlags>[I], enum_name_v<E, values_v<E, IsFlags>[I]>}...}};
      |                                             ^
SHARED/magic_enum-master/include/magic_enum.hpp:504:60: Fehler: Templateargument 1 ist ungÃ¼ltig
  504 |   return std::array<std::pair<E, string_view>, sizeof...(I)>{{{values_v<E, IsFlags>[I], enum_name_v<E, values_v<E, IsFlags>[I]>}...}};
      |                                                            ^
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:508:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  508 | inline constexpr auto entries_v = entries<E, IsFlags>(std::make_index_sequence<count_v<E, IsFlags>>{});
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:521:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  521 | inline constexpr bool is_sparse_v = is_sparse<E, IsFlags>();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr std::size_t magic_enum::detail::undex(U)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:527:7: Warnung: Â»init-statement in AuswahlanweisungenÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  527 |   if (const auto i = static_cast<std::size_t>(value - min_v<E>); value >= min_v<E> && value <= max_v<E>) {
      |       ^~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:528:8: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  528 |     if constexpr (is_sparse_v<E>) {
      |        ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:529:11: Warnung: Â»init-statement in AuswahlanweisungenÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  529 |       if (const auto idx = indexes_v<E>[i]; idx != invalid_index_v<E>) {
      |           ^~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:579:55: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  579 | using enable_if_enum_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, false, T, R>::type;
      |                                                       ^~~~~~~~~
      |                                                       is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:579:55: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  579 | using enable_if_enum_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, false, T, R>::type;
      |                                                       ^~~~~~~~~
      |                                                       is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:579:79: Fehler: falsche Anzahl der Templateargumente (1, sollte 4 sein)
  579 | using enable_if_enum_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, false, T, R>::type;
      |                                                                               ^~
SHARED/magic_enum-master/include/magic_enum.hpp:560:8: Anmerkung: fÃ¼r Â»template<bool <anonym>, bool <anonym>, class T, class R> struct magic_enum::detail::enable_if_enumÂ« bereitgestellt
  560 | struct enable_if_enum {};
      |        ^~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:579:35: Fehler: Spezifikation mit geschachteltem Namen erwartet
  579 | using enable_if_enum_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, false, T, R>::type;
      |                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:582:61: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  582 | using enable_if_enum_flags_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, true, T, R>::type;
      |                                                             ^~~~~~~~~
      |                                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:582:61: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  582 | using enable_if_enum_flags_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, true, T, R>::type;
      |                                                             ^~~~~~~~~
      |                                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:582:85: Fehler: falsche Anzahl der Templateargumente (1, sollte 4 sein)
  582 | using enable_if_enum_flags_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, true, T, R>::type;
      |                                                                                     ^~
SHARED/magic_enum-master/include/magic_enum.hpp:560:8: Anmerkung: fÃ¼r Â»template<bool <anonym>, bool <anonym>, class T, class R> struct magic_enum::detail::enable_if_enumÂ« bereitgestellt
  560 | struct enable_if_enum {};
      |        ^~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:582:41: Fehler: Spezifikation mit geschachteltem Namen erwartet
  582 | using enable_if_enum_flags_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, true, T, R>::type;
      |                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:584:63: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  584 | template <typename T, typename Enable = std::enable_if_t<std::is_enum_v<std::decay_t<T>>>>
      |                                                               ^~~~~~~~~
      |                                                               is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:584:63: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  584 | template <typename T, typename Enable = std::enable_if_t<std::is_enum_v<std::decay_t<T>>>>
      |                                                               ^~~~~~~~~
      |                                                               is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:584:87: Fehler: Templateargument 1 ist ungÃ¼ltig
  584 | template <typename T, typename Enable = std::enable_if_t<std::is_enum_v<std::decay_t<T>>>>
      |                                                                                       ^~
SHARED/magic_enum-master/include/magic_enum.hpp:584:89: Fehler: expected Â»>Â« before Â»>>Â« token
  584 | template <typename T, typename Enable = std::enable_if_t<std::is_enum_v<std::decay_t<T>>>>
      |                                                                                         ^~
SHARED/magic_enum-master/include/magic_enum.hpp:587:35: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  587 | template <typename T, bool = std::is_enum_v<T>>
      |                                   ^~~~~~~~~
      |                                   is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:587:46: Fehler: expected primary-expression before Â»>>Â« token
  587 | template <typename T, bool = std::is_enum_v<T>>
      |                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:587:46: Fehler: expected Â»>Â« before Â»>>Â« token
SHARED/magic_enum-master/include/magic_enum.hpp:591:52: Fehler: expected template-name before Â»<Â« token
  591 | struct is_scoped_enum<T, true> : std::bool_constant<!std::is_convertible_v<T, std::underlying_type_t<T>>> {};
      |                                                    ^
SHARED/magic_enum-master/include/magic_enum.hpp:591:52: Fehler: expected Â»{Â« before Â»<Â« token
SHARED/magic_enum-master/include/magic_enum.hpp:593:35: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  593 | template <typename T, bool = std::is_enum_v<T>>
      |                                   ^~~~~~~~~
      |                                   is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:593:46: Fehler: expected primary-expression before Â»>>Â« token
  593 | template <typename T, bool = std::is_enum_v<T>>
      |                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:593:46: Fehler: expected Â»>Â« before Â»>>Â« token
SHARED/magic_enum-master/include/magic_enum.hpp:597:54: Fehler: expected template-name before Â»<Â« token
  597 | struct is_unscoped_enum<T, true> : std::bool_constant<std::is_convertible_v<T, std::underlying_type_t<T>>> {};
      |                                                      ^
SHARED/magic_enum-master/include/magic_enum.hpp:597:54: Fehler: expected Â»{Â« before Â»<Â« token
SHARED/magic_enum-master/include/magic_enum.hpp:599:35: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  599 | template <typename T, bool = std::is_enum_v<std::decay_t<T>>>
      |                                   ^~~~~~~~~
      |                                   is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:599:59: Fehler: expected primary-expression before Â»>Â« token
  599 | template <typename T, bool = std::is_enum_v<std::decay_t<T>>>
      |                                                           ^~
SHARED/magic_enum-master/include/magic_enum.hpp:599:61: Fehler: expected unqualified-id before Â»>Â« token
  599 | template <typename T, bool = std::is_enum_v<std::decay_t<T>>>
      |                                                             ^
SHARED/magic_enum-master/include/magic_enum.hpp:603:8: Fehler: Â»underlying_typeÂ« ist kein Klassentemplate
  603 | struct underlying_type<T, true> : std::underlying_type<std::decay_t<T>> {};
      |        ^~~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:608:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  608 | inline constexpr bool is_magic_enum_supported = detail::supported<void>::value;
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:611:36: Fehler: Templateargument 2 ist ungÃ¼ltig
  611 | using Enum = detail::enum_concept<T>;
      |                                    ^
SHARED/magic_enum-master/include/magic_enum.hpp:616:53: Fehler: Templateargument 2 ist ungÃ¼ltig
  616 | struct is_unscoped_enum : detail::is_unscoped_enum<T> {};
      |                                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:619:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  619 | inline constexpr bool is_unscoped_enum_v = is_unscoped_enum<T>::value;
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:624:49: Fehler: Templateargument 2 ist ungÃ¼ltig
  624 | struct is_scoped_enum : detail::is_scoped_enum<T> {};
      |                                                 ^
SHARED/magic_enum-master/include/magic_enum.hpp:627:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  627 | inline constexpr bool is_scoped_enum_v = is_scoped_enum<T>::value;
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:105: Fehler: Templateargument 1 ist ungÃ¼ltig
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                                         ^~
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:105: Fehler: Templateargument 1 ist ungÃ¼ltig
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                                         ^~
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:105: Fehler: Templateargument 1 ist ungÃ¼ltig
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                                         ^~
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:105: Fehler: Templateargument 1 ist ungÃ¼ltig
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                                         ^~
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:105: Fehler: Templateargument 1 ist ungÃ¼ltig
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                                         ^~
SHARED/magic_enum-master/include/magic_enum.hpp:639:59: Fehler: ungÃ¼ltige Verwendung des Template-Namens Â»std::enable_if_tÂ« ohne eine Argumentliste
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                           ^~~
In Datei, eingebunden von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/bits/move.h:57,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/bits/stl_pair.h:59,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/bits/stl_algobase.h:64,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/bits/char_traits.h:39,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/string:40,
                 von ChessBoard.h:5,
                 von ChessBoard.cpp:1:
/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/type_traits:2554:11: Anmerkung: Â»template<bool _Cond, class _Tp> using enable_if_t = typename std::enable_if::typeÂ« ist hier deklariert
 2554 |     using enable_if_t = typename enable_if<_Cond, _Tp>::type;
      |           ^~~~~~~~~~~
In Datei, eingebunden von ConfigParser.h:13,
                 von HardwareInterface.h:15,
                 von ChessBoard.h:28,
                 von ChessBoard.cpp:1:
SHARED/magic_enum-master/include/magic_enum.hpp:639:75: Fehler: expected initializer before Â»<Â« token
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                           ^
SHARED/magic_enum-master/include/magic_enum.hpp:649:63: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  649 | [[nodiscard]] constexpr auto enum_count() noexcept -> detail::enable_if_enum_t<E, std::size_t> {
      |                                                               ^~~~~~~~~~~~~~~~
      |                                                               enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:649:79: Fehler: expected initializer before Â»<Â« token
  649 | [[nodiscard]] constexpr auto enum_count() noexcept -> detail::enable_if_enum_t<E, std::size_t> {
      |                                                                               ^
SHARED/magic_enum-master/include/magic_enum.hpp:658:80: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  658 | [[nodiscard]] constexpr auto enum_value(std::size_t index) noexcept -> detail::enable_if_enum_t<E, std::decay_t<E>> {
      |                                                                                ^~~~~~~~~~~~~~~~
      |                                                                                enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:658:96: Fehler: expected initializer before Â»<Â« token
  658 | [[nodiscard]] constexpr auto enum_value(std::size_t index) noexcept -> detail::enable_if_enum_t<E, std::decay_t<E>> {
      |                                                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:670:64: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  670 | [[nodiscard]] constexpr auto enum_values() noexcept -> detail::enable_if_enum_t<E, detail::values_t<E>> {
      |                                                                ^~~~~~~~~~~~~~~~
      |                                                                enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:670:80: Fehler: expected initializer before Â»<Â« token
  670 | [[nodiscard]] constexpr auto enum_values() noexcept -> detail::enable_if_enum_t<E, detail::values_t<E>> {
      |                                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:678:11: Fehler: Â»autoÂ«-Parameter darf in diesem Kontext nicht verwendet werden
  678 | template <auto V>
      |           ^~~~
SHARED/magic_enum-master/include/magic_enum.hpp:679:76: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  679 | [[nodiscard]] constexpr auto enum_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<decltype(V)>>, string_view> {
      |                                                                            ^~~~~~~~~
      |                                                                            is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:679:76: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  679 | [[nodiscard]] constexpr auto enum_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<decltype(V)>>, string_view> {
      |                                                                            ^~~~~~~~~
      |                                                                            is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:679:99: Fehler: Templateargument 1 ist ungÃ¼ltig
  679 | [[nodiscard]] constexpr auto enum_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<decltype(V)>>, string_view> {
      |                                                                                                   ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:679:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  679 | [[nodiscard]] constexpr auto enum_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<decltype(V)>>, string_view> {
      |                                                                                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:690:69: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  690 | [[nodiscard]] constexpr auto enum_name(E value) noexcept -> detail::enable_if_enum_t<E, string_view> {
      |                                                                     ^~~~~~~~~~~~~~~~
      |                                                                     enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:690:85: Fehler: expected initializer before Â»<Â« token
  690 | [[nodiscard]] constexpr auto enum_name(E value) noexcept -> detail::enable_if_enum_t<E, string_view> {
      |                                                                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:702:63: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  702 | [[nodiscard]] constexpr auto enum_names() noexcept -> detail::enable_if_enum_t<E, detail::names_t<E>> {
      |                                                               ^~~~~~~~~~~~~~~~
      |                                                               enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:702:79: Fehler: expected initializer before Â»<Â« token
  702 | [[nodiscard]] constexpr auto enum_names() noexcept -> detail::enable_if_enum_t<E, detail::names_t<E>> {
      |                                                                               ^
SHARED/magic_enum-master/include/magic_enum.hpp:710:65: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  710 | [[nodiscard]] constexpr auto enum_entries() noexcept -> detail::enable_if_enum_t<E, detail::entries_t<E>> {
      |                                                                 ^~~~~~~~~~~~~~~~
      |                                                                 enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:710:81: Fehler: expected initializer before Â»<Â« token
  710 | [[nodiscard]] constexpr auto enum_entries() noexcept -> detail::enable_if_enum_t<E, detail::entries_t<E>> {
      |                                                                                 ^
SHARED/magic_enum-master/include/magic_enum.hpp:719:88: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  719 | [[nodiscard]] constexpr auto enum_cast(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                                                        ^~~~~~~~~~~~~~~~
      |                                                                                        enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:719:104: Fehler: expected initializer before Â»<Â« token
  719 | [[nodiscard]] constexpr auto enum_cast(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:732:40: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:732:40: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
SHARED/magic_enum-master/include/magic_enum.hpp:732:75: Fehler: expected primary-expression before Â»pÂ«
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                                           ^
SHARED/magic_enum-master/include/magic_enum.hpp:732:76: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                                            ^
SHARED/magic_enum-master/include/magic_enum.hpp:732:77: Fehler: expected Â»;Â« before Â»noexceptÂ«
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                                             ^~~~~~~~~
      |                                                                             ;
SHARED/magic_enum-master/include/magic_enum.hpp:748:40: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
  748 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:748:40: Fehler: Redeklaration von Â»template<class E> constexpr const auto magic_enum::enum_castÂ«
SHARED/magic_enum-master/include/magic_enum.hpp:732:30: Anmerkung: vorherige Deklaration von Â»template<class E, class BinaryPredicate> constexpr<TypprÃ¤fixfehler> magic_enum::enum_cast<E, BinaryPredicate>Â«
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                              ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:748:40: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  748 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:748:58: Fehler: expected Â»;Â« before Â»noexceptÂ«
  748 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                          ^~~~~~~~~
      |                                                          ;
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:756:64: Fehler: ungÃ¼ltige Verwendung des Template-Namens Â»std::enable_if_tÂ« ohne eine Argumentliste
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                ^~~
In Datei, eingebunden von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/bits/move.h:57,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/bits/stl_pair.h:59,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/bits/stl_algobase.h:64,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/bits/char_traits.h:39,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/string:40,
                 von ChessBoard.h:5,
                 von ChessBoard.cpp:1:
/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/type_traits:2554:11: Anmerkung: Â»template<bool _Cond, class _Tp> using enable_if_t = typename std::enable_if::typeÂ« ist hier deklariert
 2554 |     using enable_if_t = typename enable_if<_Cond, _Tp>::type;
      |           ^~~~~~~~~~~
In Datei, eingebunden von ConfigParser.h:13,
                 von HardwareInterface.h:15,
                 von ChessBoard.h:28,
                 von ChessBoard.cpp:1:
SHARED/magic_enum-master/include/magic_enum.hpp:756:80: Fehler: expected initializer before Â»<Â« token
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:763:70: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  763 | [[nodiscard]] constexpr auto enum_index(E value) noexcept -> detail::enable_if_enum_t<E, optional<std::size_t>> {
      |                                                                      ^~~~~~~~~~~~~~~~
      |                                                                      enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:763:86: Fehler: expected initializer before Â»<Â« token
  763 | [[nodiscard]] constexpr auto enum_index(E value) noexcept -> detail::enable_if_enum_t<E, optional<std::size_t>> {
      |                                                                                      ^
SHARED/magic_enum-master/include/magic_enum.hpp:775:73: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  775 | [[nodiscard]] constexpr auto enum_contains(E value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                                                         ^~~~~~~~~~~~~~~~
      |                                                                         enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:775:89: Fehler: expected initializer before Â»<Â« token
  775 | [[nodiscard]] constexpr auto enum_contains(E value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                                                                         ^
SHARED/magic_enum-master/include/magic_enum.hpp:783:92: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  783 | [[nodiscard]] constexpr auto enum_contains(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                                                                            ^~~~~~~~~~~~~~~~
      |                                                                                            enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:783:108: Fehler: expected initializer before Â»<Â« token
  783 | [[nodiscard]] constexpr auto enum_contains(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                                                                                            ^
SHARED/magic_enum-master/include/magic_enum.hpp:791:44: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
  791 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:791:44: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
SHARED/magic_enum-master/include/magic_enum.hpp:791:79: Fehler: expected primary-expression before Â»pÂ«
  791 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, bool> {
      |                                                                               ^
SHARED/magic_enum-master/include/magic_enum.hpp:791:80: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
  791 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, bool> {
      |                                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:791:81: Fehler: expected Â»;Â« before Â»noexceptÂ«
  791 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, bool> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 ;
SHARED/magic_enum-master/include/magic_enum.hpp:800:44: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
  800 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:800:44: Fehler: Redeklaration von Â»template<class E> constexpr const auto magic_enum::enum_containsÂ«
SHARED/magic_enum-master/include/magic_enum.hpp:791:30: Anmerkung: vorherige Deklaration von Â»template<class E, class BinaryPredicate> constexpr<TypprÃ¤fixfehler> magic_enum::enum_contains<E, BinaryPredicate>Â«
  791 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, bool> {
      |                              ^~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:800:44: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  800 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:800:62: Fehler: expected Â»;Â« before Â»noexceptÂ«
  800 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                                              ^~~~~~~~~
      |                                                              ;
SHARED/magic_enum-master/include/magic_enum.hpp:808:77: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  808 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                             ^~~~~~~~~
      |                                                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:808:77: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  808 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                             ^~~~~~~~~
      |                                                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:808:88: Fehler: Templateargument 1 ist ungÃ¼ltig
  808 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:808:96: Fehler: expected unqualified-id before Â»=Â« token
  808 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:823:77: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  823 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                             ^~~~~~~~~
      |                                                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:823:77: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  823 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                             ^~~~~~~~~
      |                                                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:823:88: Fehler: Templateargument 1 ist ungÃ¼ltig
  823 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:823:96: Fehler: expected unqualified-id before Â»=Â« token
  823 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:832:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  832 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:832:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  832 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:832:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  832 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:832:64: Fehler: expected unqualified-id before Â»=Â« token
  832 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:837:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  837 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:837:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  837 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:837:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  837 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:837:64: Fehler: expected unqualified-id before Â»=Â« token
  837 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:842:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  842 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:842:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  842 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:842:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  842 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:842:64: Fehler: expected unqualified-id before Â»=Â« token
  842 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:847:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  847 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:847:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  847 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:847:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  847 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:847:64: Fehler: expected unqualified-id before Â»=Â« token
  847 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:852:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  852 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:852:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  852 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:852:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  852 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:852:64: Fehler: expected unqualified-id before Â»=Â« token
  852 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:857:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  857 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:857:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  857 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:857:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  857 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:857:64: Fehler: expected unqualified-id before Â»=Â« token
  857 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:862:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  862 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:862:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  862 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:862:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  862 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:862:64: Fehler: expected unqualified-id before Â»=Â« token
  862 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:872:19: Fehler: Â»enum_type_nameÂ« wurde nicht innerhalb von Â»magic_enumÂ« deklariert
  872 | using magic_enum::enum_type_name;
      |                   ^~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:876:63: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  876 | [[nodiscard]] constexpr auto enum_count() noexcept -> detail::enable_if_enum_flags_t<E, std::size_t> {
      |                                                               ^~~~~~~~~~~~~~~~~~~~~~
      |                                                               enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:876:85: Fehler: expected initializer before Â»<Â« token
  876 | [[nodiscard]] constexpr auto enum_count() noexcept -> detail::enable_if_enum_flags_t<E, std::size_t> {
      |                                                                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:885:80: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  885 | [[nodiscard]] constexpr auto enum_value(std::size_t index) noexcept -> detail::enable_if_enum_flags_t<E, std::decay_t<E>> {
      |                                                                                ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                                enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:885:102: Fehler: expected initializer before Â»<Â« token
  885 | [[nodiscard]] constexpr auto enum_value(std::size_t index) noexcept -> detail::enable_if_enum_flags_t<E, std::decay_t<E>> {
      |                                                                                                      ^
SHARED/magic_enum-master/include/magic_enum.hpp:899:64: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  899 | [[nodiscard]] constexpr auto enum_values() noexcept -> detail::enable_if_enum_flags_t<E, detail::values_t<E, true>> {
      |                                                                ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:899:86: Fehler: expected initializer before Â»<Â« token
  899 | [[nodiscard]] constexpr auto enum_values() noexcept -> detail::enable_if_enum_flags_t<E, detail::values_t<E, true>> {
      |                                                                                      ^
SHARED/magic_enum-master/include/magic_enum.hpp:908:50: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  908 | [[nodiscard]] auto enum_name(E value) -> detail::enable_if_enum_flags_t<E, string> {
      |                                                  ^~~~~~~~~~~~~~~~~~~~~~
      |                                                  enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:908:72: Fehler: expected initializer before Â»<Â« token
  908 | [[nodiscard]] auto enum_name(E value) -> detail::enable_if_enum_flags_t<E, string> {
      |                                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:934:63: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  934 | [[nodiscard]] constexpr auto enum_names() noexcept -> detail::enable_if_enum_flags_t<E, detail::names_t<E, true>> {
      |                                                               ^~~~~~~~~~~~~~~~~~~~~~
      |                                                               enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:934:85: Fehler: expected initializer before Â»<Â« token
  934 | [[nodiscard]] constexpr auto enum_names() noexcept -> detail::enable_if_enum_flags_t<E, detail::names_t<E, true>> {
      |                                                                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:942:65: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  942 | [[nodiscard]] constexpr auto enum_entries() noexcept -> detail::enable_if_enum_flags_t<E, detail::entries_t<E, true>> {
      |                                                                 ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                 enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:942:87: Fehler: expected initializer before Â»<Â« token
  942 | [[nodiscard]] constexpr auto enum_entries() noexcept -> detail::enable_if_enum_flags_t<E, detail::entries_t<E, true>> {
      |                                                                                       ^
SHARED/magic_enum-master/include/magic_enum.hpp:951:88: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  951 | [[nodiscard]] constexpr auto enum_cast(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                                                        ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                                        enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:951:110: Fehler: expected initializer before Â»<Â« token
  951 | [[nodiscard]] constexpr auto enum_cast(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                                                                              ^
SHARED/magic_enum-master/include/magic_enum.hpp:981:40: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
  981 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:981:40: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
SHARED/magic_enum-master/include/magic_enum.hpp:981:75: Fehler: expected primary-expression before Â»pÂ«
  981 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                                           ^
SHARED/magic_enum-master/include/magic_enum.hpp:981:76: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
  981 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                                            ^
SHARED/magic_enum-master/include/magic_enum.hpp:981:77: Fehler: expected Â»;Â« before Â»noexceptÂ«
  981 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                                             ^~~~~~~~~
      |                                                                             ;
SHARED/magic_enum-master/include/magic_enum.hpp:1014:40: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
 1014 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1014:40: Fehler: Redeklaration von Â»template<class E> constexpr const auto magic_enum::flags::enum_castÂ«
SHARED/magic_enum-master/include/magic_enum.hpp:981:30: Anmerkung: vorherige Deklaration von Â»template<class E, class BinaryPredicate> constexpr<TypprÃ¤fixfehler> magic_enum::flags::enum_cast<E, BinaryPredicate>Â«
  981 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                              ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1014:40: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
 1014 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1014:58: Fehler: expected Â»;Â« before Â»noexceptÂ«
 1014 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                          ^~~~~~~~~
      |                                                          ;
SHARED/magic_enum-master/include/magic_enum.hpp:1021:19: Fehler: Â»enum_integerÂ« wurde nicht innerhalb von Â»magic_enumÂ« deklariert
 1021 | using magic_enum::enum_integer;
      |                   ^~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1026:70: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
 1026 | [[nodiscard]] constexpr auto enum_index(E value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::size_t>> {
      |                                                                      ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                      enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:1026:92: Fehler: expected initializer before Â»<Â« token
 1026 | [[nodiscard]] constexpr auto enum_index(E value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::size_t>> {
      |                                                                                            ^
SHARED/magic_enum-master/include/magic_enum.hpp:1043:73: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
 1043 | [[nodiscard]] constexpr auto enum_contains(E value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                         ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                         enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:1043:95: Fehler: expected initializer before Â»<Â« token
 1043 | [[nodiscard]] constexpr auto enum_contains(E value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                                               ^
SHARED/magic_enum-master/include/magic_enum.hpp:1052:92: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
 1052 | [[nodiscard]] constexpr auto enum_contains(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                                            ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                                            enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:1052:114: Fehler: expected initializer before Â»<Â« token
 1052 | [[nodiscard]] constexpr auto enum_contains(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                                                                  ^
SHARED/magic_enum-master/include/magic_enum.hpp:1060:44: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
 1060 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1060:44: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
SHARED/magic_enum-master/include/magic_enum.hpp:1060:79: Fehler: expected primary-expression before Â»pÂ«
 1060 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                               ^
SHARED/magic_enum-master/include/magic_enum.hpp:1060:80: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
 1060 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:1060:81: Fehler: expected Â»;Â« before Â»noexceptÂ«
 1060 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 ;
SHARED/magic_enum-master/include/magic_enum.hpp:1069:44: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
 1069 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1069:44: Fehler: Redeklaration von Â»template<class E> constexpr const auto magic_enum::flags::enum_containsÂ«
SHARED/magic_enum-master/include/magic_enum.hpp:1060:30: Anmerkung: vorherige Deklaration von Â»template<class E, class BinaryPredicate> constexpr<TypprÃ¤fixfehler> magic_enum::flags::enum_contains<E, BinaryPredicate>Â«
 1060 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, bool> {
      |                              ^~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1069:44: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
 1069 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1069:62: Fehler: expected Â»;Â« before Â»noexceptÂ«
 1069 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                              ^~~~~~~~~
      |                                                              ;
SHARED/magic_enum-master/include/magic_enum.hpp:1079:63: Fehler: Â»magic_enum::detail::enable_if_enum_flags_tÂ« wurde nicht deklariert
 1079 | template <typename Char, typename Traits, typename E, detail::enable_if_enum_flags_t<E, int> = 0>
      |                                                               ^~~~~~~~~~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1079:85: Fehler: expected Â»>Â« before Â»<Â« token
 1079 | template <typename Char, typename Traits, typename E, detail::enable_if_enum_flags_t<E, int> = 0>
      |                                                                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»std::basic_ostream<_CharT, _Traits>& magic_enum::flags::ostream_operators::operator<<(std::basic_ostream<_CharT, _Traits>&, E)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:1084:7: Warnung: Â»init-statement in AuswahlanweisungenÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
 1084 |   if (const auto name = magic_enum::flags::enum_name<D>(value); !name.empty()) {
      |       ^~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1084:44: Fehler: Â»enum_nameÂ« ist kein Element von Â»magic_enum::flagsÂ«; meinten Sie Â»enum_castÂ«?
 1084 |   if (const auto name = magic_enum::flags::enum_name<D>(value); !name.empty()) {
      |                                            ^~~~~~~~~
      |                                            enum_cast
SHARED/magic_enum-master/include/magic_enum.hpp:1084:55: Fehler: expected primary-expression before Â»>Â« token
 1084 |   if (const auto name = magic_enum::flags::enum_name<D>(value); !name.empty()) {
      |                                                       ^
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:1094:63: Fehler: Â»magic_enum::detail::enable_if_enum_flags_tÂ« wurde nicht deklariert
 1094 | template <typename Char, typename Traits, typename E, detail::enable_if_enum_flags_t<E, int> = 0>
      |                                                               ^~~~~~~~~~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1094:85: Fehler: expected Â»>Â« before Â»<Â« token
 1094 | template <typename Char, typename Traits, typename E, detail::enable_if_enum_flags_t<E, int> = 0>
      |                                                                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:1095:84: Fehler: Â»optionalÂ« wurde nicht deklariert
 1095 | std::basic_ostream<Char, Traits>& operator<<(std::basic_ostream<Char, Traits>& os, optional<E> value) {
      |                                                                                    ^~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1095:92: Fehler: expected Â»,Â« or Â»...Â« before Â»<Â« token
 1095 | std::basic_ostream<Char, Traits>& operator<<(std::basic_ostream<Char, Traits>& os, optional<E> value) {
      |                                                                                            ^
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»std::basic_ostream<_CharT, _Traits>& magic_enum::flags::ostream_operators::operator<<(std::basic_ostream<_CharT, _Traits>&, int)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:1096:10: Fehler: Â»valueÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht deklariert; meinten Sie Â»magic_enum::detail::valueÂ«?
 1096 |   return value.has_value() ? (os << value.value()) : os;
      |          ^~~~~
      |          magic_enum::detail::value
SHARED/magic_enum-master/include/magic_enum.hpp:395:13: Anmerkung: Â»magic_enum::detail::valueÂ« ist hier deklariert
  395 | constexpr E value(std::size_t i) noexcept {
      |             ^~~~~
ChessBoard.cpp: In Elementfunktion Â»bool ChessBoard::MoveWaypointsAlong(std::queue<ChessBoard::MV_POSITION>&)Â«:
ChessBoard.cpp:136:1: Warnung: keine return-Anweisung in nicht void zurÃ¼ckgebender Funktion [-Wreturn-type]
  136 | }
      | ^
ChessBoard.cpp: In Elementfunktion Â»void ChessBoard::getParkPositionCoordinates(ChessField::CHESS_FILEDS, int&, int&, IOController::COIL, bool)Â«:
ChessBoard.cpp:1230:28: Fehler: Â»enum_integerÂ« ist kein Element von Â»magic_enumÂ«
 1230 |    pp_entry = (magic_enum::enum_integer(_index) - magic_enum::enum_integer(ChessField::CHESS_FILEDS::CHESS_FIELD_PARK_POSTION_BLACK_1)) % 16;
      |                            ^~~~~~~~~~~~
ChessBoard.cpp:1230:63: Fehler: Â»enum_integerÂ« ist kein Element von Â»magic_enumÂ«
 1230 |    pp_entry = (magic_enum::enum_integer(_index) - magic_enum::enum_integer(ChessField::CHESS_FILEDS::CHESS_FIELD_PARK_POSTION_BLACK_1)) % 16;
      |                                                               ^~~~~~~~~~~~
ChessBoard.cpp:1234:27: Fehler: Â»enum_integerÂ« ist kein Element von Â»magic_enumÂ«
 1234 |   pp_entry = (magic_enum::enum_integer(_index) - magic_enum::enum_integer(ChessField::CHESS_FILEDS::CHESS_FIELD_PARK_POSTION_WHITE_1)) % 16;
      |                           ^~~~~~~~~~~~
ChessBoard.cpp:1234:62: Fehler: Â»enum_integerÂ« ist kein Element von Â»magic_enumÂ«
 1234 |   pp_entry = (magic_enum::enum_integer(_index) - magic_enum::enum_integer(ChessField::CHESS_FILEDS::CHESS_FIELD_PARK_POSTION_WHITE_1)) % 16;
      |                                                              ^~~~~~~~~~~~
ChessBoard.cpp: In Elementfunktion Â»ChessBoard::BOARD_ERROR ChessBoard::scanBoard(bool)Â«:
ChessBoard.cpp:1333:34: Fehler: Â»enum_integerÂ« ist kein Element von Â»magic_enumÂ«
 1333 |  for (int i = 0; i < magic_enum::enum_integer(ChessField::CHESS_FILEDS::CHESS_FIELD_PARK_POSTION_WHITE_1); i++)
      |                                  ^~~~~~~~~~~~
ChessBoard.cpp:1350:26: Fehler: Â»enum_integerÂ« ist kein Element von Â»magic_enumÂ«
 1350 |  for(int i = magic_enum::enum_integer(ChessField::CHESS_FILEDS::CHESS_FIELD_PARK_POSTION_BLACK_1) ; i < magic_enum::enum_integer(ChessField::CHESS_FILEDS::CHESS_FIELD_PARK_POSTION_BLACK_16) ; i++)
      |                          ^~~~~~~~~~~~
ChessBoard.cpp:1350:117: Fehler: Â»enum_integerÂ« ist kein Element von Â»magic_enumÂ«
 1350 |  for(int i = magic_enum::enum_integer(ChessField::CHESS_FILEDS::CHESS_FIELD_PARK_POSTION_BLACK_1) ; i < magic_enum::enum_integer(ChessField::CHESS_FILEDS::CHESS_FIELD_PARK_POSTION_BLACK_16) ; i++)
      |                                                                                                                     ^~~~~~~~~~~~
ChessBoard.cpp: In Funktion Â»std::__cxx11::list<ChessPiece::FIGURE> checkBoardForFullFigureSet(ChessPiece::FIGURE (&)[12][8])Â«:
ChessBoard.cpp:1398:1: Warnung: keine return-Anweisung in nicht void zurÃ¼ckgebender Funktion [-Wreturn-type]
 1398 | }
      | ^
ChessBoard.cpp: In Elementfunktion Â»ChessBoard::BOARD_ERROR ChessBoard::get_coil_offset(IOController::COIL, int&, int&)Â«:
ChessBoard.cpp:1532:1: Warnung: keine return-Anweisung in nicht void zurÃ¼ckgebender Funktion [-Wreturn-type]
 1532 | }
      | ^
Makefile:212: recipe for target 'Debug/ChessBoard.o' failed
make[1]: *** [Debug/ChessBoard.o] Error 1
In Datei, eingebunden von SHARED/guicommunicator/guicommunicator.h:22,
                 von SHARED/guicommunicator/guicommunicator.cpp:1:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:99:23: Fehler: Â»optionalÂ« in Namensraum Â»stdÂ« bezeichnet keinen Templatetyp
   99 | using optional = std::optional<T>;
      |                       ^~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:99:18: Anmerkung: Â»std::optionalÂ« ist erst ab C++17 verfÃ¼gbar
   99 | using optional = std::optional<T>;
      |                  ^~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:106:26: Fehler: Â»string_viewÂ« in Namensbereich Â»stdÂ« bezeichnet keinen Typ
  106 | using string_view = std::string_view;
      |                          ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:106:21: Anmerkung: Â»std::string_viewÂ« ist erst ab C++17 verfÃ¼gbar
  106 | using string_view = std::string_view;
      |                     ^~~
In Datei, eingebunden von SHARED/guicommunicator/guicommunicator.h:22,
                 von SHARED/guicommunicator/guicommunicator.cpp:1:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:123:22: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  123 |   static_assert(std::is_enum_v<E>, "magic_enum::customize::enum_range requires enum type.");
      |                      ^~~~~~~~~
      |                      is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:123:33: Fehler: expected primary-expression before Â»>Â« token
  123 |   static_assert(std::is_enum_v<E>, "magic_enum::customize::enum_range requires enum type.");
      |                                 ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:123:34: Fehler: expected primary-expression before Â»,Â« token
  123 |   static_assert(std::is_enum_v<E>, "magic_enum::customize::enum_range requires enum type.");
      |                                  ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:124:3: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  124 |   inline static constexpr int min = MAGIC_ENUM_RANGE_MIN;
      |   ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:125:3: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  125 |   inline static constexpr int max = MAGIC_ENUM_RANGE_MAX;
      |   ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:139:11: Fehler: Â»string_viewÂ« bezeichnet keinen Typ
  139 | constexpr string_view enum_name(E) noexcept {
      |           ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:159:47: Fehler: expected Â»)Â« before Â»strÂ«
  159 |   constexpr explicit static_string(string_view str) noexcept : static_string{str, std::make_index_sequence<N>{}} {
      |                                   ~           ^~~~
      |                                               )
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:159:114: Fehler: expected unqualified-id before Â»{Â« token
  159 |   constexpr explicit static_string(string_view str) noexcept : static_string{str, std::make_index_sequence<N>{}} {
      |                                                                                                                  ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:167:22: Fehler: expected type-specifier before Â»string_viewÂ«
  167 |   constexpr operator string_view() const noexcept { return {data(), size()}; }
      |                      ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:171:38: Fehler: expected Â»)Â« before Â»strÂ«
  171 |   constexpr static_string(string_view str, std::index_sequence<I...>) noexcept : chars{{str[I]..., '\0'}} {}
      |                          ~           ^~~~
      |                                      )
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:171:107: Fehler: expected unqualified-id before Â»{Â« token
  171 |   constexpr static_string(string_view str, std::index_sequence<I...>) noexcept : chars{{str[I]..., '\0'}} {}
      |                                                                                                           ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:178:13: Fehler: nur Deklarationen von Konstruktoren und Umwandlungsoperatoren kÃ¶nnen Â»explicitÂ« sein
  178 |   constexpr explicit static_string(string_view) noexcept {}
      |             ^~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:178:36: Fehler: Feld Â»string_viewÂ« hat unvollstÃ¤ndigen Typen Â»const magic_enum::detail::static_string<0>Â«
  178 |   constexpr explicit static_string(string_view) noexcept {}
      |                                    ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:177:8: Anmerkung: Definition von Â»struct magic_enum::detail::static_string<0>Â« ist erst nach der schlieÃŸenden Klammer vollendet
  177 | struct static_string<0> {
      |        ^~~~~~~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:178:3: Fehler: nicht-statisches Datenelement Â»string_viewÂ« als Â»constexprÂ« deklariert
  178 |   constexpr explicit static_string(string_view) noexcept {}
      |   ^~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:178:47: Fehler: Â»;Â« am Ende von Elementdeklaration erwartet
  178 |   constexpr explicit static_string(string_view) noexcept {}
      |                                               ^
      |                                                ;
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:178:49: Fehler: expected unqualified-id before Â»noexceptÂ«
  178 |   constexpr explicit static_string(string_view) noexcept {}
      |                                                 ^~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:184:22: Fehler: expected type-specifier before Â»string_viewÂ«
  184 |   constexpr operator string_view() const noexcept { return {}; }
      |                      ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:193:11: Fehler: Â»string_viewÂ« bezeichnet keinen Typ
  193 | constexpr string_view pretty_name(string_view name) noexcept {
      |           ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:213:28: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  213 | constexpr std::size_t find(string_view str, char c) noexcept {
      |                            ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:213:45: Fehler: expected primary-expression before Â»charÂ«
  213 | constexpr std::size_t find(string_view str, char c) noexcept {
      |                                             ^~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:213:51: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
  213 | constexpr std::size_t find(string_view str, char c) noexcept {
      |                                                   ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:235:26: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                          ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:235:43: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                                           ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:235:75: Fehler: expected primary-expression before Â»&&Â« token
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                                                                           ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:235:78: Fehler: Â»pÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                                                                              ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:235:79: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                                                                               ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:235:80: Fehler: expected Â»;Â« before Â»noexceptÂ«
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                                                                                ^~~~~~~~~
      |                                                                                ;
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr bool magic_enum::detail::cmp_less(L, R)Â«:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:264:22: Fehler: Â»is_integral_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_integralÂ«?
  264 |   static_assert(std::is_integral_v<L> && std::is_integral_v<R>, "magic_enum::detail::cmp_less requires integral type.");
      |                      ^~~~~~~~~~~~~
      |                      is_integral
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:264:37: Fehler: expected primary-expression before Â»>Â« token
  264 |   static_assert(std::is_integral_v<L> && std::is_integral_v<R>, "magic_enum::detail::cmp_less requires integral type.");
      |                                     ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:264:45: Fehler: expected Â»,Â« before Â»::Â« token
  264 |   static_assert(std::is_integral_v<L> && std::is_integral_v<R>, "magic_enum::detail::cmp_less requires integral type.");
      |                                             ^~
      |                                             ,
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:264:45: Fehler: expected string-literal before Â»::Â« token
  264 |   static_assert(std::is_integral_v<L> && std::is_integral_v<R>, "magic_enum::detail::cmp_less requires integral type.");
      |                                             ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:264:45: Fehler: expected Â»)Â« before Â»::Â« token
  264 |   static_assert(std::is_integral_v<L> && std::is_integral_v<R>, "magic_enum::detail::cmp_less requires integral type.");
      |                ~                            ^~
      |                                             )
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:266:6: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |      ^~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:266:22: Fehler: Â»is_signed_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_signedÂ«?
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                      ^~~~~~~~~~~
      |                      is_signed
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:266:35: Fehler: expected primary-expression before Â»>Â« token
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                                   ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:266:37: Fehler: expected primary-expression before Â»==Â« token
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                                     ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:266:45: Fehler: Â»is_signed_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_signedÂ«?
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                                             ^~~~~~~~~~~
      |                                             is_signed
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:266:58: Fehler: expected primary-expression before Â»>Â« token
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                                                          ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:266:59: Fehler: expected primary-expression before Â»)Â« token
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                                                           ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:269:13: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  269 |   } else if constexpr (std::is_signed_v<R>) {
      |             ^~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:269:29: Fehler: Â»is_signed_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_signedÂ«?
  269 |   } else if constexpr (std::is_signed_v<R>) {
      |                             ^~~~~~~~~~~
      |                             is_signed
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:269:42: Fehler: expected primary-expression before Â»>Â« token
  269 |   } else if constexpr (std::is_signed_v<R>) {
      |                                          ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:269:43: Fehler: expected primary-expression before Â»)Â« token
  269 |   } else if constexpr (std::is_signed_v<R>) {
      |                                           ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr I magic_enum::detail::log2(I)Â«:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:280:22: Fehler: Â»is_integral_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_integralÂ«?
  280 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::log2 requires integral type.");
      |                      ^~~~~~~~~~~~~
      |                      is_integral
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:280:37: Fehler: expected primary-expression before Â»>Â« token
  280 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::log2 requires integral type.");
      |                                     ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:280:38: Fehler: expected primary-expression before Â»,Â« token
  280 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::log2 requires integral type.");
      |                                      ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr bool magic_enum::detail::is_pow2(I)Â«:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:290:22: Fehler: Â»is_integral_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_integralÂ«?
  290 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::is_pow2 requires integral type.");
      |                      ^~~~~~~~~~~~~
      |                      is_integral
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:290:37: Fehler: expected primary-expression before Â»>Â« token
  290 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::is_pow2 requires integral type.");
      |                                     ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:290:38: Fehler: expected primary-expression before Â»,Â« token
  290 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::is_pow2 requires integral type.");
      |                                      ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:296:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  296 | inline constexpr bool is_enum_v = std::is_enum_v<T> && std::is_same_v<T, std::decay_t<T>>;
      | ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:296:40: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  296 | inline constexpr bool is_enum_v = std::is_enum_v<T> && std::is_same_v<T, std::decay_t<T>>;
      |                                        ^~~~~~~~~
      |                                        is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:296:51: Fehler: expected primary-expression before Â»>Â« token
  296 | inline constexpr bool is_enum_v = std::is_enum_v<T> && std::is_same_v<T, std::decay_t<T>>;
      |                                                   ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:296:56: Fehler: Marke Â»stdÂ« auÃŸerhalb einer Funktion referenziert
  296 | inline constexpr bool is_enum_v = std::is_enum_v<T> && std::is_same_v<T, std::decay_t<T>>;
      |                                                        ^~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr auto magic_enum::detail::n()Â«:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:305:13: Fehler: Â»string_viewÂ« bezeichnet keinen Typ
  305 |   constexpr string_view name{__PRETTY_FUNCTION__ + 49, sizeof(__PRETTY_FUNCTION__) - 51};
      |             ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:309:24: Fehler: Â»nameÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  309 |   return static_string<name.size()>{name};
      |                        ^~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:309:35: Fehler: Templateargument 1 ist ungÃ¼ltig
  309 |   return static_string<name.size()>{name};
      |                                   ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:316:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  316 | inline constexpr auto type_name_v = n<E>();
      | ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr auto magic_enum::detail::n()Â«:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:321:43: Fehler: Â»enum_nameÂ« ist kein Element von Â»magic_enum::customizeÂ«; meinten Sie Â»enum_rangeÂ«?
  321 |   constexpr auto custom_name = customize::enum_name<E>(V);
      |                                           ^~~~~~~~~
      |                                           enum_range
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:321:54: Fehler: expected primary-expression before Â»>Â« token
  321 |   constexpr auto custom_name = customize::enum_name<E>(V);
      |                                                      ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:323:6: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  323 |   if constexpr (custom_name.empty()) {
      |      ^~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:341:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  341 | inline constexpr auto enum_name_v = n<E, V>();
      | ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:343:23: Fehler: Â»autoÂ«-Parameter darf in diesem Kontext nicht verwendet werden
  343 | template <typename E, auto V>
      |                       ^~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr int magic_enum::detail::reflected_min()Â«:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:354:6: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  354 |   if constexpr (IsFlags) {
      |      ^~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:361:8: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  361 |     if constexpr (cmp_less(lhs, rhs)) {
      |        ^~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr int magic_enum::detail::reflected_max()Â«:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:373:6: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  373 |   if constexpr (IsFlags) {
      |      ^~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:380:8: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  380 |     if constexpr (cmp_less(lhs, rhs)) {
      |        ^~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:389:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  389 | inline constexpr auto reflected_min_v = reflected_min<E, IsFlags>();
      | ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:392:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  392 | inline constexpr auto reflected_max_v = reflected_max<E, IsFlags>();
      | ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr E magic_enum::detail::value(std::size_t)Â«:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:398:6: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  398 |   if constexpr (IsFlags) {
      |      ^~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr auto magic_enum::detail::values(std::index_sequence<I ...>)Â«:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:409:62: Fehler: Â»constexprÂ«-Lambda ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  409 |   constexpr std::size_t count = [](decltype((valid)) valid_) constexpr noexcept -> std::size_t {
      |                                                              ^~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:419:22: Fehler: der Wert von Â»countÂ« ist in konstantem Ausdruck nicht verwendbar
  419 |   std::array<E, count> values{};
      |                      ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:409:25: Anmerkung: Â»countÂ« in seiner eigenen Initialisierung verwendet
  409 |   constexpr std::size_t count = [](decltype((valid)) valid_) constexpr noexcept -> std::size_t {
      |                         ^~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:419:22: Anmerkung: in Templateargument fÃ¼r Typ Â»unsigned intÂ«
  419 |   std::array<E, count> values{};
      |                      ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:422:13: Fehler: ungÃ¼ltige Typen Â»int[std::size_t {aka unsigned int}]Â« fÃ¼r Feldindex
  422 |       values[v++] = value<E, Min, IsFlags>(i);
      |             ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:440:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  440 | inline constexpr auto values_v = values<E, IsFlags>();
      | ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:446:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  446 | inline constexpr auto count_v = values_v<E, IsFlags>.size();
      | ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:449:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  449 | inline constexpr auto min_v = static_cast<U>(values_v<E, IsFlags>.front());
      | ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:452:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  452 | inline constexpr auto max_v = static_cast<U>(values_v<E, IsFlags>.back());
      | ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:467:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  467 | inline constexpr auto range_size_v = range_size<E, IsFlags>();
      | ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:473:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  473 | inline constexpr auto invalid_index_v = (std::numeric_limits<index_t<E, IsFlags>>::max)();
      | ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:485:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  485 | inline constexpr auto indexes_v = indexes<E, IsFlags>(std::make_index_sequence<range_size_v<E, IsFlags>>{});
      | ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr auto magic_enum::detail::names(std::index_sequence<I ...>)Â«:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:491:21: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  491 |   return std::array<string_view, sizeof...(I)>{{enum_name_v<E, values_v<E, IsFlags>[I]>...}};
      |                     ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:491:46: Fehler: Templateargument 1 ist ungÃ¼ltig
  491 |   return std::array<string_view, sizeof...(I)>{{enum_name_v<E, values_v<E, IsFlags>[I]>...}};
      |                                              ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:495:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  495 | inline constexpr auto names_v = names<E, IsFlags>(std::make_index_sequence<count_v<E, IsFlags>>{});
      | ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr auto magic_enum::detail::entries(std::index_sequence<I ...>)Â«:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:504:34: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  504 |   return std::array<std::pair<E, string_view>, sizeof...(I)>{{{values_v<E, IsFlags>[I], enum_name_v<E, values_v<E, IsFlags>[I]>}...}};
      |                                  ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:504:45: Fehler: Templateargument 2 ist ungÃ¼ltig
  504 |   return std::array<std::pair<E, string_view>, sizeof...(I)>{{{values_v<E, IsFlags>[I], enum_name_v<E, values_v<E, IsFlags>[I]>}...}};
      |                                             ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:504:60: Fehler: Templateargument 1 ist ungÃ¼ltig
  504 |   return std::array<std::pair<E, string_view>, sizeof...(I)>{{{values_v<E, IsFlags>[I], enum_name_v<E, values_v<E, IsFlags>[I]>}...}};
      |                                                            ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:508:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  508 | inline constexpr auto entries_v = entries<E, IsFlags>(std::make_index_sequence<count_v<E, IsFlags>>{});
      | ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:521:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  521 | inline constexpr bool is_sparse_v = is_sparse<E, IsFlags>();
      | ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr std::size_t magic_enum::detail::undex(U)Â«:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:527:7: Warnung: Â»init-statement in AuswahlanweisungenÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  527 |   if (const auto i = static_cast<std::size_t>(value - min_v<E>); value >= min_v<E> && value <= max_v<E>) {
      |       ^~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:528:8: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  528 |     if constexpr (is_sparse_v<E>) {
      |        ^~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:529:11: Warnung: Â»init-statement in AuswahlanweisungenÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  529 |       if (const auto idx = indexes_v<E>[i]; idx != invalid_index_v<E>) {
      |           ^~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:579:55: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  579 | using enable_if_enum_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, false, T, R>::type;
      |                                                       ^~~~~~~~~
      |                                                       is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:579:55: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  579 | using enable_if_enum_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, false, T, R>::type;
      |                                                       ^~~~~~~~~
      |                                                       is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:579:79: Fehler: falsche Anzahl der Templateargumente (1, sollte 4 sein)
  579 | using enable_if_enum_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, false, T, R>::type;
      |                                                                               ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:560:8: Anmerkung: fÃ¼r Â»template<bool <anonym>, bool <anonym>, class T, class R> struct magic_enum::detail::enable_if_enumÂ« bereitgestellt
  560 | struct enable_if_enum {};
      |        ^~~~~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:579:35: Fehler: Spezifikation mit geschachteltem Namen erwartet
  579 | using enable_if_enum_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, false, T, R>::type;
      |                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:582:61: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  582 | using enable_if_enum_flags_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, true, T, R>::type;
      |                                                             ^~~~~~~~~
      |                                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:582:61: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  582 | using enable_if_enum_flags_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, true, T, R>::type;
      |                                                             ^~~~~~~~~
      |                                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:582:85: Fehler: falsche Anzahl der Templateargumente (1, sollte 4 sein)
  582 | using enable_if_enum_flags_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, true, T, R>::type;
      |                                                                                     ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:560:8: Anmerkung: fÃ¼r Â»template<bool <anonym>, bool <anonym>, class T, class R> struct magic_enum::detail::enable_if_enumÂ« bereitgestellt
  560 | struct enable_if_enum {};
      |        ^~~~~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:582:41: Fehler: Spezifikation mit geschachteltem Namen erwartet
  582 | using enable_if_enum_flags_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, true, T, R>::type;
      |                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:584:63: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  584 | template <typename T, typename Enable = std::enable_if_t<std::is_enum_v<std::decay_t<T>>>>
      |                                                               ^~~~~~~~~
      |                                                               is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:584:63: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  584 | template <typename T, typename Enable = std::enable_if_t<std::is_enum_v<std::decay_t<T>>>>
      |                                                               ^~~~~~~~~
      |                                                               is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:584:87: Fehler: Templateargument 1 ist ungÃ¼ltig
  584 | template <typename T, typename Enable = std::enable_if_t<std::is_enum_v<std::decay_t<T>>>>
      |                                                                                       ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:584:89: Fehler: expected Â»>Â« before Â»>>Â« token
  584 | template <typename T, typename Enable = std::enable_if_t<std::is_enum_v<std::decay_t<T>>>>
      |                                                                                         ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:587:35: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  587 | template <typename T, bool = std::is_enum_v<T>>
      |                                   ^~~~~~~~~
      |                                   is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:587:46: Fehler: expected primary-expression before Â»>>Â« token
  587 | template <typename T, bool = std::is_enum_v<T>>
      |                                              ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:587:46: Fehler: expected Â»>Â« before Â»>>Â« token
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:591:52: Fehler: expected template-name before Â»<Â« token
  591 | struct is_scoped_enum<T, true> : std::bool_constant<!std::is_convertible_v<T, std::underlying_type_t<T>>> {};
      |                                                    ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:591:52: Fehler: expected Â»{Â« before Â»<Â« token
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:593:35: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  593 | template <typename T, bool = std::is_enum_v<T>>
      |                                   ^~~~~~~~~
      |                                   is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:593:46: Fehler: expected primary-expression before Â»>>Â« token
  593 | template <typename T, bool = std::is_enum_v<T>>
      |                                              ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:593:46: Fehler: expected Â»>Â« before Â»>>Â« token
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:597:54: Fehler: expected template-name before Â»<Â« token
  597 | struct is_unscoped_enum<T, true> : std::bool_constant<std::is_convertible_v<T, std::underlying_type_t<T>>> {};
      |                                                      ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:597:54: Fehler: expected Â»{Â« before Â»<Â« token
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:599:35: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  599 | template <typename T, bool = std::is_enum_v<std::decay_t<T>>>
      |                                   ^~~~~~~~~
      |                                   is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:599:59: Fehler: expected primary-expression before Â»>Â« token
  599 | template <typename T, bool = std::is_enum_v<std::decay_t<T>>>
      |                                                           ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:599:61: Fehler: expected unqualified-id before Â»>Â« token
  599 | template <typename T, bool = std::is_enum_v<std::decay_t<T>>>
      |                                                             ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:603:8: Fehler: Â»underlying_typeÂ« ist kein Klassentemplate
  603 | struct underlying_type<T, true> : std::underlying_type<std::decay_t<T>> {};
      |        ^~~~~~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:608:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  608 | inline constexpr bool is_magic_enum_supported = detail::supported<void>::value;
      | ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:611:36: Fehler: Templateargument 2 ist ungÃ¼ltig
  611 | using Enum = detail::enum_concept<T>;
      |                                    ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:616:53: Fehler: Templateargument 2 ist ungÃ¼ltig
  616 | struct is_unscoped_enum : detail::is_unscoped_enum<T> {};
      |                                                     ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:619:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  619 | inline constexpr bool is_unscoped_enum_v = is_unscoped_enum<T>::value;
      | ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:624:49: Fehler: Templateargument 2 ist ungÃ¼ltig
  624 | struct is_scoped_enum : detail::is_scoped_enum<T> {};
      |                                                 ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:627:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  627 | inline constexpr bool is_scoped_enum_v = is_scoped_enum<T>::value;
      | ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:639:105: Fehler: Templateargument 1 ist ungÃ¼ltig
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                                         ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:639:105: Fehler: Templateargument 1 ist ungÃ¼ltig
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                                         ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:639:105: Fehler: Templateargument 1 ist ungÃ¼ltig
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                                         ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:639:105: Fehler: Templateargument 1 ist ungÃ¼ltig
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                                         ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:639:105: Fehler: Templateargument 1 ist ungÃ¼ltig
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                                         ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:639:59: Fehler: ungÃ¼ltige Verwendung des Template-Namens Â»std::enable_if_tÂ« ohne eine Argumentliste
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                           ^~~
In Datei, eingebunden von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/bits/move.h:57,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/bits/stl_pair.h:59,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/bits/stl_algobase.h:64,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/bits/char_traits.h:39,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/string:40,
                 von SHARED/guicommunicator/guicommunicator.h:8,
                 von SHARED/guicommunicator/guicommunicator.cpp:1:
/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/type_traits:2554:11: Anmerkung: Â»template<bool _Cond, class _Tp> using enable_if_t = typename std::enable_if::typeÂ« ist hier deklariert
 2554 |     using enable_if_t = typename enable_if<_Cond, _Tp>::type;
      |           ^~~~~~~~~~~
In Datei, eingebunden von SHARED/guicommunicator/guicommunicator.h:22,
                 von SHARED/guicommunicator/guicommunicator.cpp:1:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:639:75: Fehler: expected initializer before Â»<Â« token
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                           ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:649:63: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  649 | [[nodiscard]] constexpr auto enum_count() noexcept -> detail::enable_if_enum_t<E, std::size_t> {
      |                                                               ^~~~~~~~~~~~~~~~
      |                                                               enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:649:79: Fehler: expected initializer before Â»<Â« token
  649 | [[nodiscard]] constexpr auto enum_count() noexcept -> detail::enable_if_enum_t<E, std::size_t> {
      |                                                                               ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:658:80: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  658 | [[nodiscard]] constexpr auto enum_value(std::size_t index) noexcept -> detail::enable_if_enum_t<E, std::decay_t<E>> {
      |                                                                                ^~~~~~~~~~~~~~~~
      |                                                                                enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:658:96: Fehler: expected initializer before Â»<Â« token
  658 | [[nodiscard]] constexpr auto enum_value(std::size_t index) noexcept -> detail::enable_if_enum_t<E, std::decay_t<E>> {
      |                                                                                                ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:670:64: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  670 | [[nodiscard]] constexpr auto enum_values() noexcept -> detail::enable_if_enum_t<E, detail::values_t<E>> {
      |                                                                ^~~~~~~~~~~~~~~~
      |                                                                enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:670:80: Fehler: expected initializer before Â»<Â« token
  670 | [[nodiscard]] constexpr auto enum_values() noexcept -> detail::enable_if_enum_t<E, detail::values_t<E>> {
      |                                                                                ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:678:11: Fehler: Â»autoÂ«-Parameter darf in diesem Kontext nicht verwendet werden
  678 | template <auto V>
      |           ^~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:679:76: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  679 | [[nodiscard]] constexpr auto enum_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<decltype(V)>>, string_view> {
      |                                                                            ^~~~~~~~~
      |                                                                            is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:679:76: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  679 | [[nodiscard]] constexpr auto enum_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<decltype(V)>>, string_view> {
      |                                                                            ^~~~~~~~~
      |                                                                            is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:679:99: Fehler: Templateargument 1 ist ungÃ¼ltig
  679 | [[nodiscard]] constexpr auto enum_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<decltype(V)>>, string_view> {
      |                                                                                                   ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:679:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  679 | [[nodiscard]] constexpr auto enum_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<decltype(V)>>, string_view> {
      |                                                                                                              ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:690:69: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  690 | [[nodiscard]] constexpr auto enum_name(E value) noexcept -> detail::enable_if_enum_t<E, string_view> {
      |                                                                     ^~~~~~~~~~~~~~~~
      |                                                                     enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:690:85: Fehler: expected initializer before Â»<Â« token
  690 | [[nodiscard]] constexpr auto enum_name(E value) noexcept -> detail::enable_if_enum_t<E, string_view> {
      |                                                                                     ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:702:63: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  702 | [[nodiscard]] constexpr auto enum_names() noexcept -> detail::enable_if_enum_t<E, detail::names_t<E>> {
      |                                                               ^~~~~~~~~~~~~~~~
      |                                                               enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:702:79: Fehler: expected initializer before Â»<Â« token
  702 | [[nodiscard]] constexpr auto enum_names() noexcept -> detail::enable_if_enum_t<E, detail::names_t<E>> {
      |                                                                               ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:710:65: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  710 | [[nodiscard]] constexpr auto enum_entries() noexcept -> detail::enable_if_enum_t<E, detail::entries_t<E>> {
      |                                                                 ^~~~~~~~~~~~~~~~
      |                                                                 enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:710:81: Fehler: expected initializer before Â»<Â« token
  710 | [[nodiscard]] constexpr auto enum_entries() noexcept -> detail::enable_if_enum_t<E, detail::entries_t<E>> {
      |                                                                                 ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:719:88: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  719 | [[nodiscard]] constexpr auto enum_cast(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                                                        ^~~~~~~~~~~~~~~~
      |                                                                                        enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:719:104: Fehler: expected initializer before Â»<Â« token
  719 | [[nodiscard]] constexpr auto enum_cast(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                                                                        ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:732:40: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:732:40: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:732:75: Fehler: expected primary-expression before Â»pÂ«
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                                           ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:732:76: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                                            ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:732:77: Fehler: expected Â»;Â« before Â»noexceptÂ«
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                                             ^~~~~~~~~
      |                                                                             ;
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:748:40: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
  748 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:748:40: Fehler: Redeklaration von Â»template<class E> constexpr const auto magic_enum::enum_castÂ«
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:732:30: Anmerkung: vorherige Deklaration von Â»template<class E, class BinaryPredicate> constexpr<TypprÃ¤fixfehler> magic_enum::enum_cast<E, BinaryPredicate>Â«
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                              ^~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:748:40: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  748 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:748:58: Fehler: expected Â»;Â« before Â»noexceptÂ«
  748 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                          ^~~~~~~~~
      |                                                          ;
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:756:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                                              ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:756:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                                              ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:756:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                                              ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:756:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                                              ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:756:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                                              ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:756:64: Fehler: ungÃ¼ltige Verwendung des Template-Namens Â»std::enable_if_tÂ« ohne eine Argumentliste
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                ^~~
In Datei, eingebunden von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/bits/move.h:57,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/bits/stl_pair.h:59,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/bits/stl_algobase.h:64,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/bits/char_traits.h:39,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/string:40,
                 von SHARED/guicommunicator/guicommunicator.h:8,
                 von SHARED/guicommunicator/guicommunicator.cpp:1:
/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/type_traits:2554:11: Anmerkung: Â»template<bool _Cond, class _Tp> using enable_if_t = typename std::enable_if::typeÂ« ist hier deklariert
 2554 |     using enable_if_t = typename enable_if<_Cond, _Tp>::type;
      |           ^~~~~~~~~~~
In Datei, eingebunden von SHARED/guicommunicator/guicommunicator.h:22,
                 von SHARED/guicommunicator/guicommunicator.cpp:1:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:756:80: Fehler: expected initializer before Â»<Â« token
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:763:70: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  763 | [[nodiscard]] constexpr auto enum_index(E value) noexcept -> detail::enable_if_enum_t<E, optional<std::size_t>> {
      |                                                                      ^~~~~~~~~~~~~~~~
      |                                                                      enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:763:86: Fehler: expected initializer before Â»<Â« token
  763 | [[nodiscard]] constexpr auto enum_index(E value) noexcept -> detail::enable_if_enum_t<E, optional<std::size_t>> {
      |                                                                                      ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:775:73: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  775 | [[nodiscard]] constexpr auto enum_contains(E value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                                                         ^~~~~~~~~~~~~~~~
      |                                                                         enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:775:89: Fehler: expected initializer before Â»<Â« token
  775 | [[nodiscard]] constexpr auto enum_contains(E value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                                                                         ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:783:92: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  783 | [[nodiscard]] constexpr auto enum_contains(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                                                                            ^~~~~~~~~~~~~~~~
      |                                                                                            enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:783:108: Fehler: expected initializer before Â»<Â« token
  783 | [[nodiscard]] constexpr auto enum_contains(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                                                                                            ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:791:44: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
  791 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:791:44: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:791:79: Fehler: expected primary-expression before Â»pÂ«
  791 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, bool> {
      |                                                                               ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:791:80: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
  791 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, bool> {
      |                                                                                ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:791:81: Fehler: expected Â»;Â« before Â»noexceptÂ«
  791 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, bool> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 ;
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:800:44: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
  800 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:800:44: Fehler: Redeklaration von Â»template<class E> constexpr const auto magic_enum::enum_containsÂ«
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:791:30: Anmerkung: vorherige Deklaration von Â»template<class E, class BinaryPredicate> constexpr<TypprÃ¤fixfehler> magic_enum::enum_contains<E, BinaryPredicate>Â«
  791 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, bool> {
      |                              ^~~~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:800:44: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  800 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:800:62: Fehler: expected Â»;Â« before Â»noexceptÂ«
  800 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                                              ^~~~~~~~~
      |                                                              ;
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:808:77: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  808 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                             ^~~~~~~~~
      |                                                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:808:77: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  808 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                             ^~~~~~~~~
      |                                                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:808:88: Fehler: Templateargument 1 ist ungÃ¼ltig
  808 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                                        ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:808:96: Fehler: expected unqualified-id before Â»=Â« token
  808 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                                                ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:823:77: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  823 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                             ^~~~~~~~~
      |                                                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:823:77: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  823 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                             ^~~~~~~~~
      |                                                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:823:88: Fehler: Templateargument 1 ist ungÃ¼ltig
  823 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                                        ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:823:96: Fehler: expected unqualified-id before Â»=Â« token
  823 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                                                ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:832:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  832 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:832:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  832 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:832:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  832 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:832:64: Fehler: expected unqualified-id before Â»=Â« token
  832 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:837:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  837 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:837:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  837 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:837:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  837 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:837:64: Fehler: expected unqualified-id before Â»=Â« token
  837 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:842:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  842 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:842:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  842 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:842:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  842 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:842:64: Fehler: expected unqualified-id before Â»=Â« token
  842 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:847:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  847 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:847:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  847 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:847:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  847 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:847:64: Fehler: expected unqualified-id before Â»=Â« token
  847 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:852:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  852 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:852:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  852 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:852:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  852 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:852:64: Fehler: expected unqualified-id before Â»=Â« token
  852 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:857:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  857 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:857:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  857 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:857:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  857 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:857:64: Fehler: expected unqualified-id before Â»=Â« token
  857 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:862:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  862 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:862:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  862 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:862:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  862 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:862:64: Fehler: expected unqualified-id before Â»=Â« token
  862 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:872:19: Fehler: Â»enum_type_nameÂ« wurde nicht innerhalb von Â»magic_enumÂ« deklariert
  872 | using magic_enum::enum_type_name;
      |                   ^~~~~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:876:63: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  876 | [[nodiscard]] constexpr auto enum_count() noexcept -> detail::enable_if_enum_flags_t<E, std::size_t> {
      |                                                               ^~~~~~~~~~~~~~~~~~~~~~
      |                                                               enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:876:85: Fehler: expected initializer before Â»<Â« token
  876 | [[nodiscard]] constexpr auto enum_count() noexcept -> detail::enable_if_enum_flags_t<E, std::size_t> {
      |                                                                                     ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:885:80: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  885 | [[nodiscard]] constexpr auto enum_value(std::size_t index) noexcept -> detail::enable_if_enum_flags_t<E, std::decay_t<E>> {
      |                                                                                ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                                enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:885:102: Fehler: expected initializer before Â»<Â« token
  885 | [[nodiscard]] constexpr auto enum_value(std::size_t index) noexcept -> detail::enable_if_enum_flags_t<E, std::decay_t<E>> {
      |                                                                                                      ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:899:64: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  899 | [[nodiscard]] constexpr auto enum_values() noexcept -> detail::enable_if_enum_flags_t<E, detail::values_t<E, true>> {
      |                                                                ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:899:86: Fehler: expected initializer before Â»<Â« token
  899 | [[nodiscard]] constexpr auto enum_values() noexcept -> detail::enable_if_enum_flags_t<E, detail::values_t<E, true>> {
      |                                                                                      ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:908:50: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  908 | [[nodiscard]] auto enum_name(E value) -> detail::enable_if_enum_flags_t<E, string> {
      |                                                  ^~~~~~~~~~~~~~~~~~~~~~
      |                                                  enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:908:72: Fehler: expected initializer before Â»<Â« token
  908 | [[nodiscard]] auto enum_name(E value) -> detail::enable_if_enum_flags_t<E, string> {
      |                                                                        ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:934:63: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  934 | [[nodiscard]] constexpr auto enum_names() noexcept -> detail::enable_if_enum_flags_t<E, detail::names_t<E, true>> {
      |                                                               ^~~~~~~~~~~~~~~~~~~~~~
      |                                                               enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:934:85: Fehler: expected initializer before Â»<Â« token
  934 | [[nodiscard]] constexpr auto enum_names() noexcept -> detail::enable_if_enum_flags_t<E, detail::names_t<E, true>> {
      |                                                                                     ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:942:65: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  942 | [[nodiscard]] constexpr auto enum_entries() noexcept -> detail::enable_if_enum_flags_t<E, detail::entries_t<E, true>> {
      |                                                                 ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                 enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:942:87: Fehler: expected initializer before Â»<Â« token
  942 | [[nodiscard]] constexpr auto enum_entries() noexcept -> detail::enable_if_enum_flags_t<E, detail::entries_t<E, true>> {
      |                                                                                       ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:951:88: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  951 | [[nodiscard]] constexpr auto enum_cast(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                                                        ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                                        enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:951:110: Fehler: expected initializer before Â»<Â« token
  951 | [[nodiscard]] constexpr auto enum_cast(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                                                                              ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:981:40: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
  981 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:981:40: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:981:75: Fehler: expected primary-expression before Â»pÂ«
  981 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                                           ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:981:76: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
  981 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                                            ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:981:77: Fehler: expected Â»;Â« before Â»noexceptÂ«
  981 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                                             ^~~~~~~~~
      |                                                                             ;
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1014:40: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
 1014 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1014:40: Fehler: Redeklaration von Â»template<class E> constexpr const auto magic_enum::flags::enum_castÂ«
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:981:30: Anmerkung: vorherige Deklaration von Â»template<class E, class BinaryPredicate> constexpr<TypprÃ¤fixfehler> magic_enum::flags::enum_cast<E, BinaryPredicate>Â«
  981 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                              ^~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1014:40: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
 1014 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1014:58: Fehler: expected Â»;Â« before Â»noexceptÂ«
 1014 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                          ^~~~~~~~~
      |                                                          ;
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1021:19: Fehler: Â»enum_integerÂ« wurde nicht innerhalb von Â»magic_enumÂ« deklariert
 1021 | using magic_enum::enum_integer;
      |                   ^~~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1026:70: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
 1026 | [[nodiscard]] constexpr auto enum_index(E value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::size_t>> {
      |                                                                      ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                      enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1026:92: Fehler: expected initializer before Â»<Â« token
 1026 | [[nodiscard]] constexpr auto enum_index(E value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::size_t>> {
      |                                                                                            ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1043:73: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
 1043 | [[nodiscard]] constexpr auto enum_contains(E value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                         ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                         enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1043:95: Fehler: expected initializer before Â»<Â« token
 1043 | [[nodiscard]] constexpr auto enum_contains(E value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                                               ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1052:92: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
 1052 | [[nodiscard]] constexpr auto enum_contains(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                                            ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                                            enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1052:114: Fehler: expected initializer before Â»<Â« token
 1052 | [[nodiscard]] constexpr auto enum_contains(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                                                                  ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1060:44: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
 1060 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1060:44: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1060:79: Fehler: expected primary-expression before Â»pÂ«
 1060 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                               ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1060:80: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
 1060 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                                ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1060:81: Fehler: expected Â»;Â« before Â»noexceptÂ«
 1060 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 ;
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1069:44: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
 1069 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1069:44: Fehler: Redeklaration von Â»template<class E> constexpr const auto magic_enum::flags::enum_containsÂ«
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1060:30: Anmerkung: vorherige Deklaration von Â»template<class E, class BinaryPredicate> constexpr<TypprÃ¤fixfehler> magic_enum::flags::enum_contains<E, BinaryPredicate>Â«
 1060 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, bool> {
      |                              ^~~~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1069:44: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
 1069 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1069:62: Fehler: expected Â»;Â« before Â»noexceptÂ«
 1069 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                              ^~~~~~~~~
      |                                                              ;
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1079:63: Fehler: Â»magic_enum::detail::enable_if_enum_flags_tÂ« wurde nicht deklariert
 1079 | template <typename Char, typename Traits, typename E, detail::enable_if_enum_flags_t<E, int> = 0>
      |                                                               ^~~~~~~~~~~~~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1079:85: Fehler: expected Â»>Â« before Â»<Â« token
 1079 | template <typename Char, typename Traits, typename E, detail::enable_if_enum_flags_t<E, int> = 0>
      |                                                                                     ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: In Funktion Â»std::basic_ostream<_CharT, _Traits>& magic_enum::flags::ostream_operators::operator<<(std::basic_ostream<_CharT, _Traits>&, E)Â«:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1084:7: Warnung: Â»init-statement in AuswahlanweisungenÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
 1084 |   if (const auto name = magic_enum::flags::enum_name<D>(value); !name.empty()) {
      |       ^~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1084:44: Fehler: Â»enum_nameÂ« ist kein Element von Â»magic_enum::flagsÂ«; meinten Sie Â»enum_castÂ«?
 1084 |   if (const auto name = magic_enum::flags::enum_name<D>(value); !name.empty()) {
      |                                            ^~~~~~~~~
      |                                            enum_cast
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1084:55: Fehler: expected primary-expression before Â»>Â« token
 1084 |   if (const auto name = magic_enum::flags::enum_name<D>(value); !name.empty()) {
      |                                                       ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1094:63: Fehler: Â»magic_enum::detail::enable_if_enum_flags_tÂ« wurde nicht deklariert
 1094 | template <typename Char, typename Traits, typename E, detail::enable_if_enum_flags_t<E, int> = 0>
      |                                                               ^~~~~~~~~~~~~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1094:85: Fehler: expected Â»>Â« before Â»<Â« token
 1094 | template <typename Char, typename Traits, typename E, detail::enable_if_enum_flags_t<E, int> = 0>
      |                                                                                     ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1095:84: Fehler: Â»optionalÂ« wurde nicht deklariert
 1095 | std::basic_ostream<Char, Traits>& operator<<(std::basic_ostream<Char, Traits>& os, optional<E> value) {
      |                                                                                    ^~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1095:92: Fehler: expected Â»,Â« or Â»...Â« before Â»<Â« token
 1095 | std::basic_ostream<Char, Traits>& operator<<(std::basic_ostream<Char, Traits>& os, optional<E> value) {
      |                                                                                            ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: In Funktion Â»std::basic_ostream<_CharT, _Traits>& magic_enum::flags::ostream_operators::operator<<(std::basic_ostream<_CharT, _Traits>&, int)Â«:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1096:10: Fehler: Â»valueÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht deklariert; meinten Sie Â»magic_enum::detail::valueÂ«?
 1096 |   return value.has_value() ? (os << value.value()) : os;
      |          ^~~~~
      |          magic_enum::detail::value
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:395:13: Anmerkung: Â»magic_enum::detail::valueÂ« ist hier deklariert
  395 | constexpr E value(std::size_t i) noexcept {
      |             ^~~~~
SHARED/guicommunicator/guicommunicator.cpp: In Elementfunktion Â»void guicommunicator::debug_event(guicommunicator::GUI_EVENT, bool)Â«:
SHARED/guicommunicator/guicommunicator.cpp:41:19: Fehler: Â»enum_nameÂ« ist kein Element von Â»magic_enumÂ«; meinten Sie Â»enum_castÂ«?
   41 |  e += magic_enum::enum_name(_event.event);
      |                   ^~~~~~~~~
      |                   enum_cast
SHARED/guicommunicator/guicommunicator.cpp:44:19: Fehler: Â»enum_nameÂ« ist kein Element von Â»magic_enumÂ«; meinten Sie Â»enum_castÂ«?
   44 |  e += magic_enum::enum_name(_event.type);
      |                   ^~~~~~~~~
      |                   enum_cast
SHARED/guicommunicator/guicommunicator.cpp: In Elementfunktion Â»void guicommunicator::createEvent(guicommunicator::GUI_ELEMENT, guicommunicator::GUI_VALUE_TYPE, std::string)Â«:
SHARED/guicommunicator/guicommunicator.cpp:73:8: Fehler: Â»string_viewÂ« ist kein Element von Â»stdÂ«
   73 |   std::string_view cfg_name = magic_enum::enum_name(_type);
      |        ^~~~~~~~~~~
SHARED/guicommunicator/guicommunicator.cpp:73:8: Anmerkung: Â»std::string_viewÂ« ist erst ab C++17 verfÃ¼gbar
SHARED/guicommunicator/guicommunicator.cpp:74:18: Fehler: Â»cfg_nameÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
   74 |  if (std::string(cfg_name).rfind("_SCREEN", 0) == 0) {tmp_event.ispageswitchevent = true; }
      |                  ^~~~~~~~
SHARED/guicommunicator/guicommunicator.cpp: In Elementfunktion Â»std::string guicommunicator::guievent2Json(guicommunicator::GUI_EVENT)Â«:
SHARED/guicommunicator/guicommunicator.cpp:122:30: Fehler: Â»enum_integerÂ« ist kein Element von Â»magic_enumÂ«
  122 |  root["event"] = magic_enum::enum_integer(_ev.event);
      |                              ^~~~~~~~~~~~
SHARED/guicommunicator/guicommunicator.cpp:123:29: Fehler: Â»enum_integerÂ« ist kein Element von Â»magic_enumÂ«
  123 |  root["type"] = magic_enum::enum_integer(_ev.type);
      |                             ^~~~~~~~~~~~
SHARED/guicommunicator/guicommunicator.cpp: In Elementfunktion Â»guicommunicator::GUI_EVENT guicommunicator::json2Guievent(json11::Json::object)Â«:
SHARED/guicommunicator/guicommunicator.cpp:165:29: Fehler: falsche Anzahl der Templateargumente (1, sollte 2 sein)
  165 |   auto enres =  magic_enum::enum_cast<guicommunicator::GUI_ELEMENT>(_jsobj["event"].int_value());
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In Datei, eingebunden von SHARED/guicommunicator/guicommunicator.h:22,
                 von SHARED/guicommunicator/guicommunicator.cpp:1:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:732:30: Anmerkung: fÃ¼r Â»template<class E, class BinaryPredicate> constexpr<typeprefixerror> magic_enum::enum_cast<E, BinaryPredicate>Â« bereitgestellt
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                              ^~~~~~~~~
SHARED/guicommunicator/guicommunicator.cpp:181:29: Fehler: falsche Anzahl der Templateargumente (1, sollte 2 sein)
  181 |   auto enres =  magic_enum::enum_cast<guicommunicator::GUI_VALUE_TYPE>(_jsobj["type"].int_value());
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In Datei, eingebunden von SHARED/guicommunicator/guicommunicator.h:22,
                 von SHARED/guicommunicator/guicommunicator.cpp:1:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:732:30: Anmerkung: fÃ¼r Â»template<class E, class BinaryPredicate> constexpr<typeprefixerror> magic_enum::enum_cast<E, BinaryPredicate>Â« bereitgestellt
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                              ^~~~~~~~~
SHARED/guicommunicator/guicommunicator.cpp: In Elementfunktion Â»guicommunicator::GUI_MESSAGE_BOX_RESULT guicommunicator::show_message_box(guicommunicator::GUI_MESSAGE_BOX_TYPE, std::string, int)Â«:
SHARED/guicommunicator/guicommunicator.cpp:473:1: Warnung: keine return-Anweisung in nicht void zurÃ¼ckgebender Funktion [-Wreturn-type]
  473 | }
      | ^
Makefile:233: recipe for target 'Debug/guicommunicator.o' failed
make[1]: *** [Debug/guicommunicator.o] Error 1
In Datei, eingebunden von BackendConnector.h:23,
                 von BackendConnector.cpp:1:
SHARED/magic_enum-master/include/magic_enum.hpp:99:23: Fehler: Â»optionalÂ« in Namensraum Â»stdÂ« bezeichnet keinen Templatetyp
   99 | using optional = std::optional<T>;
      |                       ^~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:99:18: Anmerkung: Â»std::optionalÂ« ist erst ab C++17 verfÃ¼gbar
   99 | using optional = std::optional<T>;
      |                  ^~~
SHARED/magic_enum-master/include/magic_enum.hpp:106:26: Fehler: Â»string_viewÂ« in Namensbereich Â»stdÂ« bezeichnet keinen Typ
  106 | using string_view = std::string_view;
      |                          ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:106:21: Anmerkung: Â»std::string_viewÂ« ist erst ab C++17 verfÃ¼gbar
  106 | using string_view = std::string_view;
      |                     ^~~
In Datei, eingebunden von BackendConnector.h:23,
                 von BackendConnector.cpp:1:
SHARED/magic_enum-master/include/magic_enum.hpp:123:22: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  123 |   static_assert(std::is_enum_v<E>, "magic_enum::customize::enum_range requires enum type.");
      |                      ^~~~~~~~~
      |                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:123:33: Fehler: expected primary-expression before Â»>Â« token
  123 |   static_assert(std::is_enum_v<E>, "magic_enum::customize::enum_range requires enum type.");
      |                                 ^
SHARED/magic_enum-master/include/magic_enum.hpp:123:34: Fehler: expected primary-expression before Â»,Â« token
  123 |   static_assert(std::is_enum_v<E>, "magic_enum::customize::enum_range requires enum type.");
      |                                  ^
SHARED/magic_enum-master/include/magic_enum.hpp:124:3: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  124 |   inline static constexpr int min = MAGIC_ENUM_RANGE_MIN;
      |   ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:125:3: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  125 |   inline static constexpr int max = MAGIC_ENUM_RANGE_MAX;
      |   ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:139:11: Fehler: Â»string_viewÂ« bezeichnet keinen Typ
  139 | constexpr string_view enum_name(E) noexcept {
      |           ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:159:47: Fehler: expected Â»)Â« before Â»strÂ«
  159 |   constexpr explicit static_string(string_view str) noexcept : static_string{str, std::make_index_sequence<N>{}} {
      |                                   ~           ^~~~
      |                                               )
SHARED/magic_enum-master/include/magic_enum.hpp:159:114: Fehler: expected unqualified-id before Â»{Â« token
  159 |   constexpr explicit static_string(string_view str) noexcept : static_string{str, std::make_index_sequence<N>{}} {
      |                                                                                                                  ^
SHARED/magic_enum-master/include/magic_enum.hpp:167:22: Fehler: expected type-specifier before Â»string_viewÂ«
  167 |   constexpr operator string_view() const noexcept { return {data(), size()}; }
      |                      ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:171:38: Fehler: expected Â»)Â« before Â»strÂ«
  171 |   constexpr static_string(string_view str, std::index_sequence<I...>) noexcept : chars{{str[I]..., '\0'}} {}
      |                          ~           ^~~~
      |                                      )
SHARED/magic_enum-master/include/magic_enum.hpp:171:107: Fehler: expected unqualified-id before Â»{Â« token
  171 |   constexpr static_string(string_view str, std::index_sequence<I...>) noexcept : chars{{str[I]..., '\0'}} {}
      |                                                                                                           ^
SHARED/magic_enum-master/include/magic_enum.hpp:178:13: Fehler: nur Deklarationen von Konstruktoren und Umwandlungsoperatoren kÃ¶nnen Â»explicitÂ« sein
  178 |   constexpr explicit static_string(string_view) noexcept {}
      |             ^~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:178:36: Fehler: Feld Â»string_viewÂ« hat unvollstÃ¤ndigen Typen Â»const magic_enum::detail::static_string<0>Â«
  178 |   constexpr explicit static_string(string_view) noexcept {}
      |                                    ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:177:8: Anmerkung: Definition von Â»struct magic_enum::detail::static_string<0>Â« ist erst nach der schlieÃŸenden Klammer vollendet
  177 | struct static_string<0> {
      |        ^~~~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:178:3: Fehler: nicht-statisches Datenelement Â»string_viewÂ« als Â»constexprÂ« deklariert
  178 |   constexpr explicit static_string(string_view) noexcept {}
      |   ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:178:47: Fehler: Â»;Â« am Ende von Elementdeklaration erwartet
  178 |   constexpr explicit static_string(string_view) noexcept {}
      |                                               ^
      |                                                ;
SHARED/magic_enum-master/include/magic_enum.hpp:178:49: Fehler: expected unqualified-id before Â»noexceptÂ«
  178 |   constexpr explicit static_string(string_view) noexcept {}
      |                                                 ^~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:184:22: Fehler: expected type-specifier before Â»string_viewÂ«
  184 |   constexpr operator string_view() const noexcept { return {}; }
      |                      ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:193:11: Fehler: Â»string_viewÂ« bezeichnet keinen Typ
  193 | constexpr string_view pretty_name(string_view name) noexcept {
      |           ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:213:28: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  213 | constexpr std::size_t find(string_view str, char c) noexcept {
      |                            ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:213:45: Fehler: expected primary-expression before Â»charÂ«
  213 | constexpr std::size_t find(string_view str, char c) noexcept {
      |                                             ^~~~
SHARED/magic_enum-master/include/magic_enum.hpp:213:51: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
  213 | constexpr std::size_t find(string_view str, char c) noexcept {
      |                                                   ^
SHARED/magic_enum-master/include/magic_enum.hpp:235:26: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                          ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:235:43: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                                           ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:235:75: Fehler: expected primary-expression before Â»&&Â« token
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                                                                           ^~
SHARED/magic_enum-master/include/magic_enum.hpp:235:78: Fehler: Â»pÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                                                                              ^
SHARED/magic_enum-master/include/magic_enum.hpp:235:79: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                                                                               ^
SHARED/magic_enum-master/include/magic_enum.hpp:235:80: Fehler: expected Â»;Â« before Â»noexceptÂ«
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                                                                                ^~~~~~~~~
      |                                                                                ;
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr bool magic_enum::detail::cmp_less(L, R)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:264:22: Fehler: Â»is_integral_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_integralÂ«?
  264 |   static_assert(std::is_integral_v<L> && std::is_integral_v<R>, "magic_enum::detail::cmp_less requires integral type.");
      |                      ^~~~~~~~~~~~~
      |                      is_integral
SHARED/magic_enum-master/include/magic_enum.hpp:264:37: Fehler: expected primary-expression before Â»>Â« token
  264 |   static_assert(std::is_integral_v<L> && std::is_integral_v<R>, "magic_enum::detail::cmp_less requires integral type.");
      |                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:264:45: Fehler: expected Â»,Â« before Â»::Â« token
  264 |   static_assert(std::is_integral_v<L> && std::is_integral_v<R>, "magic_enum::detail::cmp_less requires integral type.");
      |                                             ^~
      |                                             ,
SHARED/magic_enum-master/include/magic_enum.hpp:264:45: Fehler: expected string-literal before Â»::Â« token
  264 |   static_assert(std::is_integral_v<L> && std::is_integral_v<R>, "magic_enum::detail::cmp_less requires integral type.");
      |                                             ^~
SHARED/magic_enum-master/include/magic_enum.hpp:264:45: Fehler: expected Â»)Â« before Â»::Â« token
  264 |   static_assert(std::is_integral_v<L> && std::is_integral_v<R>, "magic_enum::detail::cmp_less requires integral type.");
      |                ~                            ^~
      |                                             )
SHARED/magic_enum-master/include/magic_enum.hpp:266:6: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |      ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:266:22: Fehler: Â»is_signed_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_signedÂ«?
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                      ^~~~~~~~~~~
      |                      is_signed
SHARED/magic_enum-master/include/magic_enum.hpp:266:35: Fehler: expected primary-expression before Â»>Â« token
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                                   ^
SHARED/magic_enum-master/include/magic_enum.hpp:266:37: Fehler: expected primary-expression before Â»==Â« token
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                                     ^~
SHARED/magic_enum-master/include/magic_enum.hpp:266:45: Fehler: Â»is_signed_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_signedÂ«?
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                                             ^~~~~~~~~~~
      |                                             is_signed
SHARED/magic_enum-master/include/magic_enum.hpp:266:58: Fehler: expected primary-expression before Â»>Â« token
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                                                          ^
SHARED/magic_enum-master/include/magic_enum.hpp:266:59: Fehler: expected primary-expression before Â»)Â« token
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                                                           ^
SHARED/magic_enum-master/include/magic_enum.hpp:269:13: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  269 |   } else if constexpr (std::is_signed_v<R>) {
      |             ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:269:29: Fehler: Â»is_signed_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_signedÂ«?
  269 |   } else if constexpr (std::is_signed_v<R>) {
      |                             ^~~~~~~~~~~
      |                             is_signed
SHARED/magic_enum-master/include/magic_enum.hpp:269:42: Fehler: expected primary-expression before Â»>Â« token
  269 |   } else if constexpr (std::is_signed_v<R>) {
      |                                          ^
SHARED/magic_enum-master/include/magic_enum.hpp:269:43: Fehler: expected primary-expression before Â»)Â« token
  269 |   } else if constexpr (std::is_signed_v<R>) {
      |                                           ^
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr I magic_enum::detail::log2(I)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:280:22: Fehler: Â»is_integral_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_integralÂ«?
  280 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::log2 requires integral type.");
      |                      ^~~~~~~~~~~~~
      |                      is_integral
SHARED/magic_enum-master/include/magic_enum.hpp:280:37: Fehler: expected primary-expression before Â»>Â« token
  280 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::log2 requires integral type.");
      |                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:280:38: Fehler: expected primary-expression before Â»,Â« token
  280 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::log2 requires integral type.");
      |                                      ^
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr bool magic_enum::detail::is_pow2(I)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:290:22: Fehler: Â»is_integral_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_integralÂ«?
  290 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::is_pow2 requires integral type.");
      |                      ^~~~~~~~~~~~~
      |                      is_integral
SHARED/magic_enum-master/include/magic_enum.hpp:290:37: Fehler: expected primary-expression before Â»>Â« token
  290 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::is_pow2 requires integral type.");
      |                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:290:38: Fehler: expected primary-expression before Â»,Â« token
  290 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::is_pow2 requires integral type.");
      |                                      ^
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:296:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  296 | inline constexpr bool is_enum_v = std::is_enum_v<T> && std::is_same_v<T, std::decay_t<T>>;
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:296:40: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  296 | inline constexpr bool is_enum_v = std::is_enum_v<T> && std::is_same_v<T, std::decay_t<T>>;
      |                                        ^~~~~~~~~
      |                                        is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:296:51: Fehler: expected primary-expression before Â»>Â« token
  296 | inline constexpr bool is_enum_v = std::is_enum_v<T> && std::is_same_v<T, std::decay_t<T>>;
      |                                                   ^
SHARED/magic_enum-master/include/magic_enum.hpp:296:56: Fehler: Marke Â»stdÂ« auÃŸerhalb einer Funktion referenziert
  296 | inline constexpr bool is_enum_v = std::is_enum_v<T> && std::is_same_v<T, std::decay_t<T>>;
      |                                                        ^~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr auto magic_enum::detail::n()Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:305:13: Fehler: Â»string_viewÂ« bezeichnet keinen Typ
  305 |   constexpr string_view name{__PRETTY_FUNCTION__ + 49, sizeof(__PRETTY_FUNCTION__) - 51};
      |             ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:309:24: Fehler: Â»nameÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  309 |   return static_string<name.size()>{name};
      |                        ^~~~
SHARED/magic_enum-master/include/magic_enum.hpp:309:35: Fehler: Templateargument 1 ist ungÃ¼ltig
  309 |   return static_string<name.size()>{name};
      |                                   ^
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:316:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  316 | inline constexpr auto type_name_v = n<E>();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr auto magic_enum::detail::n()Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:321:43: Fehler: Â»enum_nameÂ« ist kein Element von Â»magic_enum::customizeÂ«; meinten Sie Â»enum_rangeÂ«?
  321 |   constexpr auto custom_name = customize::enum_name<E>(V);
      |                                           ^~~~~~~~~
      |                                           enum_range
SHARED/magic_enum-master/include/magic_enum.hpp:321:54: Fehler: expected primary-expression before Â»>Â« token
  321 |   constexpr auto custom_name = customize::enum_name<E>(V);
      |                                                      ^
SHARED/magic_enum-master/include/magic_enum.hpp:323:6: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  323 |   if constexpr (custom_name.empty()) {
      |      ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:341:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  341 | inline constexpr auto enum_name_v = n<E, V>();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:343:23: Fehler: Â»autoÂ«-Parameter darf in diesem Kontext nicht verwendet werden
  343 | template <typename E, auto V>
      |                       ^~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr int magic_enum::detail::reflected_min()Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:354:6: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  354 |   if constexpr (IsFlags) {
      |      ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:361:8: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  361 |     if constexpr (cmp_less(lhs, rhs)) {
      |        ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr int magic_enum::detail::reflected_max()Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:373:6: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  373 |   if constexpr (IsFlags) {
      |      ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:380:8: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  380 |     if constexpr (cmp_less(lhs, rhs)) {
      |        ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:389:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  389 | inline constexpr auto reflected_min_v = reflected_min<E, IsFlags>();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:392:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  392 | inline constexpr auto reflected_max_v = reflected_max<E, IsFlags>();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr E magic_enum::detail::value(std::size_t)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:398:6: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  398 |   if constexpr (IsFlags) {
      |      ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr auto magic_enum::detail::values(std::index_sequence<I ...>)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:409:62: Fehler: Â»constexprÂ«-Lambda ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  409 |   constexpr std::size_t count = [](decltype((valid)) valid_) constexpr noexcept -> std::size_t {
      |                                                              ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:419:22: Fehler: der Wert von Â»countÂ« ist in konstantem Ausdruck nicht verwendbar
  419 |   std::array<E, count> values{};
      |                      ^
SHARED/magic_enum-master/include/magic_enum.hpp:409:25: Anmerkung: Â»countÂ« in seiner eigenen Initialisierung verwendet
  409 |   constexpr std::size_t count = [](decltype((valid)) valid_) constexpr noexcept -> std::size_t {
      |                         ^~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:419:22: Anmerkung: in Templateargument fÃ¼r Typ Â»unsigned intÂ«
  419 |   std::array<E, count> values{};
      |                      ^
SHARED/magic_enum-master/include/magic_enum.hpp:422:13: Fehler: ungÃ¼ltige Typen Â»int[std::size_t {aka unsigned int}]Â« fÃ¼r Feldindex
  422 |       values[v++] = value<E, Min, IsFlags>(i);
      |             ^
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:440:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  440 | inline constexpr auto values_v = values<E, IsFlags>();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:446:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  446 | inline constexpr auto count_v = values_v<E, IsFlags>.size();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:449:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  449 | inline constexpr auto min_v = static_cast<U>(values_v<E, IsFlags>.front());
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:452:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  452 | inline constexpr auto max_v = static_cast<U>(values_v<E, IsFlags>.back());
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:467:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  467 | inline constexpr auto range_size_v = range_size<E, IsFlags>();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:473:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  473 | inline constexpr auto invalid_index_v = (std::numeric_limits<index_t<E, IsFlags>>::max)();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:485:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  485 | inline constexpr auto indexes_v = indexes<E, IsFlags>(std::make_index_sequence<range_size_v<E, IsFlags>>{});
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr auto magic_enum::detail::names(std::index_sequence<I ...>)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:491:21: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  491 |   return std::array<string_view, sizeof...(I)>{{enum_name_v<E, values_v<E, IsFlags>[I]>...}};
      |                     ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:491:46: Fehler: Templateargument 1 ist ungÃ¼ltig
  491 |   return std::array<string_view, sizeof...(I)>{{enum_name_v<E, values_v<E, IsFlags>[I]>...}};
      |                                              ^
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:495:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  495 | inline constexpr auto names_v = names<E, IsFlags>(std::make_index_sequence<count_v<E, IsFlags>>{});
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr auto magic_enum::detail::entries(std::index_sequence<I ...>)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:504:34: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  504 |   return std::array<std::pair<E, string_view>, sizeof...(I)>{{{values_v<E, IsFlags>[I], enum_name_v<E, values_v<E, IsFlags>[I]>}...}};
      |                                  ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:504:45: Fehler: Templateargument 2 ist ungÃ¼ltig
  504 |   return std::array<std::pair<E, string_view>, sizeof...(I)>{{{values_v<E, IsFlags>[I], enum_name_v<E, values_v<E, IsFlags>[I]>}...}};
      |                                             ^
SHARED/magic_enum-master/include/magic_enum.hpp:504:60: Fehler: Templateargument 1 ist ungÃ¼ltig
  504 |   return std::array<std::pair<E, string_view>, sizeof...(I)>{{{values_v<E, IsFlags>[I], enum_name_v<E, values_v<E, IsFlags>[I]>}...}};
      |                                                            ^
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:508:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  508 | inline constexpr auto entries_v = entries<E, IsFlags>(std::make_index_sequence<count_v<E, IsFlags>>{});
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:521:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  521 | inline constexpr bool is_sparse_v = is_sparse<E, IsFlags>();
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr std::size_t magic_enum::detail::undex(U)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:527:7: Warnung: Â»init-statement in AuswahlanweisungenÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  527 |   if (const auto i = static_cast<std::size_t>(value - min_v<E>); value >= min_v<E> && value <= max_v<E>) {
      |       ^~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:528:8: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  528 |     if constexpr (is_sparse_v<E>) {
      |        ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:529:11: Warnung: Â»init-statement in AuswahlanweisungenÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  529 |       if (const auto idx = indexes_v<E>[i]; idx != invalid_index_v<E>) {
      |           ^~~~~
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:579:55: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  579 | using enable_if_enum_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, false, T, R>::type;
      |                                                       ^~~~~~~~~
      |                                                       is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:579:55: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  579 | using enable_if_enum_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, false, T, R>::type;
      |                                                       ^~~~~~~~~
      |                                                       is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:579:79: Fehler: falsche Anzahl der Templateargumente (1, sollte 4 sein)
  579 | using enable_if_enum_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, false, T, R>::type;
      |                                                                               ^~
SHARED/magic_enum-master/include/magic_enum.hpp:560:8: Anmerkung: fÃ¼r Â»template<bool <anonymous>, bool <anonymous>, class T, class R> struct magic_enum::detail::enable_if_enumÂ« bereitgestellt
  560 | struct enable_if_enum {};
      |        ^~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:579:35: Fehler: Spezifikation mit geschachteltem Namen erwartet
  579 | using enable_if_enum_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, false, T, R>::type;
      |                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:582:61: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  582 | using enable_if_enum_flags_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, true, T, R>::type;
      |                                                             ^~~~~~~~~
      |                                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:582:61: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  582 | using enable_if_enum_flags_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, true, T, R>::type;
      |                                                             ^~~~~~~~~
      |                                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:582:85: Fehler: falsche Anzahl der Templateargumente (1, sollte 4 sein)
  582 | using enable_if_enum_flags_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, true, T, R>::type;
      |                                                                                     ^~
SHARED/magic_enum-master/include/magic_enum.hpp:560:8: Anmerkung: fÃ¼r Â»template<bool <anonymous>, bool <anonymous>, class T, class R> struct magic_enum::detail::enable_if_enumÂ« bereitgestellt
  560 | struct enable_if_enum {};
      |        ^~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:582:41: Fehler: Spezifikation mit geschachteltem Namen erwartet
  582 | using enable_if_enum_flags_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, true, T, R>::type;
      |                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:584:63: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  584 | template <typename T, typename Enable = std::enable_if_t<std::is_enum_v<std::decay_t<T>>>>
      |                                                               ^~~~~~~~~
      |                                                               is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:584:63: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  584 | template <typename T, typename Enable = std::enable_if_t<std::is_enum_v<std::decay_t<T>>>>
      |                                                               ^~~~~~~~~
      |                                                               is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:584:87: Fehler: Templateargument 1 ist ungÃ¼ltig
  584 | template <typename T, typename Enable = std::enable_if_t<std::is_enum_v<std::decay_t<T>>>>
      |                                                                                       ^~
SHARED/magic_enum-master/include/magic_enum.hpp:584:89: Fehler: expected Â»>Â« before Â»>>Â« token
  584 | template <typename T, typename Enable = std::enable_if_t<std::is_enum_v<std::decay_t<T>>>>
      |                                                                                         ^~
SHARED/magic_enum-master/include/magic_enum.hpp:587:35: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  587 | template <typename T, bool = std::is_enum_v<T>>
      |                                   ^~~~~~~~~
      |                                   is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:587:46: Fehler: expected primary-expression before Â»>>Â« token
  587 | template <typename T, bool = std::is_enum_v<T>>
      |                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:587:46: Fehler: expected Â»>Â« before Â»>>Â« token
SHARED/magic_enum-master/include/magic_enum.hpp:591:52: Fehler: expected template-name before Â»<Â« token
  591 | struct is_scoped_enum<T, true> : std::bool_constant<!std::is_convertible_v<T, std::underlying_type_t<T>>> {};
      |                                                    ^
SHARED/magic_enum-master/include/magic_enum.hpp:591:52: Fehler: expected Â»{Â« before Â»<Â« token
SHARED/magic_enum-master/include/magic_enum.hpp:593:35: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  593 | template <typename T, bool = std::is_enum_v<T>>
      |                                   ^~~~~~~~~
      |                                   is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:593:46: Fehler: expected primary-expression before Â»>>Â« token
  593 | template <typename T, bool = std::is_enum_v<T>>
      |                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:593:46: Fehler: expected Â»>Â« before Â»>>Â« token
SHARED/magic_enum-master/include/magic_enum.hpp:597:54: Fehler: expected template-name before Â»<Â« token
  597 | struct is_unscoped_enum<T, true> : std::bool_constant<std::is_convertible_v<T, std::underlying_type_t<T>>> {};
      |                                                      ^
SHARED/magic_enum-master/include/magic_enum.hpp:597:54: Fehler: expected Â»{Â« before Â»<Â« token
SHARED/magic_enum-master/include/magic_enum.hpp:599:35: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  599 | template <typename T, bool = std::is_enum_v<std::decay_t<T>>>
      |                                   ^~~~~~~~~
      |                                   is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:599:59: Fehler: expected primary-expression before Â»>Â« token
  599 | template <typename T, bool = std::is_enum_v<std::decay_t<T>>>
      |                                                           ^~
SHARED/magic_enum-master/include/magic_enum.hpp:599:61: Fehler: expected unqualified-id before Â»>Â« token
  599 | template <typename T, bool = std::is_enum_v<std::decay_t<T>>>
      |                                                             ^
SHARED/magic_enum-master/include/magic_enum.hpp:603:8: Fehler: Â»underlying_typeÂ« ist kein Klassentemplate
  603 | struct underlying_type<T, true> : std::underlying_type<std::decay_t<T>> {};
      |        ^~~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:608:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  608 | inline constexpr bool is_magic_enum_supported = detail::supported<void>::value;
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:611:36: Fehler: Templateargument 2 ist ungÃ¼ltig
  611 | using Enum = detail::enum_concept<T>;
      |                                    ^
SHARED/magic_enum-master/include/magic_enum.hpp:616:53: Fehler: Templateargument 2 ist ungÃ¼ltig
  616 | struct is_unscoped_enum : detail::is_unscoped_enum<T> {};
      |                                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:619:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  619 | inline constexpr bool is_unscoped_enum_v = is_unscoped_enum<T>::value;
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:624:49: Fehler: Templateargument 2 ist ungÃ¼ltig
  624 | struct is_scoped_enum : detail::is_scoped_enum<T> {};
      |                                                 ^
SHARED/magic_enum-master/include/magic_enum.hpp:627:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  627 | inline constexpr bool is_scoped_enum_v = is_scoped_enum<T>::value;
      | ^~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:105: Fehler: Templateargument 1 ist ungÃ¼ltig
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                                         ^~
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:105: Fehler: Templateargument 1 ist ungÃ¼ltig
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                                         ^~
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:105: Fehler: Templateargument 1 ist ungÃ¼ltig
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                                         ^~
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:105: Fehler: Templateargument 1 ist ungÃ¼ltig
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                                         ^~
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:639:105: Fehler: Templateargument 1 ist ungÃ¼ltig
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                                         ^~
SHARED/magic_enum-master/include/magic_enum.hpp:639:59: Fehler: ungÃ¼ltige Verwendung des Template-Namens Â»std::enable_if_tÂ« ohne eine Argumentliste
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                           ^~~
In Datei, eingebunden von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/bits/move.h:57,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/bits/stl_pair.h:59,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/bits/stl_algobase.h:64,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/bits/char_traits.h:39,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/string:40,
                 von BackendConnector.h:5,
                 von BackendConnector.cpp:1:
/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/type_traits:2554:11: Anmerkung: Â»template<bool _Cond, class _Tp> using enable_if_t = typename std::enable_if::typeÂ« ist hier deklariert
 2554 |     using enable_if_t = typename enable_if<_Cond, _Tp>::type;
      |           ^~~~~~~~~~~
In Datei, eingebunden von BackendConnector.h:23,
                 von BackendConnector.cpp:1:
SHARED/magic_enum-master/include/magic_enum.hpp:639:75: Fehler: expected initializer before Â»<Â« token
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                           ^
SHARED/magic_enum-master/include/magic_enum.hpp:649:63: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  649 | [[nodiscard]] constexpr auto enum_count() noexcept -> detail::enable_if_enum_t<E, std::size_t> {
      |                                                               ^~~~~~~~~~~~~~~~
      |                                                               enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:649:79: Fehler: expected initializer before Â»<Â« token
  649 | [[nodiscard]] constexpr auto enum_count() noexcept -> detail::enable_if_enum_t<E, std::size_t> {
      |                                                                               ^
SHARED/magic_enum-master/include/magic_enum.hpp:658:80: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  658 | [[nodiscard]] constexpr auto enum_value(std::size_t index) noexcept -> detail::enable_if_enum_t<E, std::decay_t<E>> {
      |                                                                                ^~~~~~~~~~~~~~~~
      |                                                                                enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:658:96: Fehler: expected initializer before Â»<Â« token
  658 | [[nodiscard]] constexpr auto enum_value(std::size_t index) noexcept -> detail::enable_if_enum_t<E, std::decay_t<E>> {
      |                                                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:670:64: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  670 | [[nodiscard]] constexpr auto enum_values() noexcept -> detail::enable_if_enum_t<E, detail::values_t<E>> {
      |                                                                ^~~~~~~~~~~~~~~~
      |                                                                enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:670:80: Fehler: expected initializer before Â»<Â« token
  670 | [[nodiscard]] constexpr auto enum_values() noexcept -> detail::enable_if_enum_t<E, detail::values_t<E>> {
      |                                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:678:11: Fehler: Â»autoÂ«-Parameter darf in diesem Kontext nicht verwendet werden
  678 | template <auto V>
      |           ^~~~
SHARED/magic_enum-master/include/magic_enum.hpp:679:76: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  679 | [[nodiscard]] constexpr auto enum_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<decltype(V)>>, string_view> {
      |                                                                            ^~~~~~~~~
      |                                                                            is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:679:76: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  679 | [[nodiscard]] constexpr auto enum_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<decltype(V)>>, string_view> {
      |                                                                            ^~~~~~~~~
      |                                                                            is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:679:99: Fehler: Templateargument 1 ist ungÃ¼ltig
  679 | [[nodiscard]] constexpr auto enum_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<decltype(V)>>, string_view> {
      |                                                                                                   ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:679:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  679 | [[nodiscard]] constexpr auto enum_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<decltype(V)>>, string_view> {
      |                                                                                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:690:69: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  690 | [[nodiscard]] constexpr auto enum_name(E value) noexcept -> detail::enable_if_enum_t<E, string_view> {
      |                                                                     ^~~~~~~~~~~~~~~~
      |                                                                     enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:690:85: Fehler: expected initializer before Â»<Â« token
  690 | [[nodiscard]] constexpr auto enum_name(E value) noexcept -> detail::enable_if_enum_t<E, string_view> {
      |                                                                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:702:63: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  702 | [[nodiscard]] constexpr auto enum_names() noexcept -> detail::enable_if_enum_t<E, detail::names_t<E>> {
      |                                                               ^~~~~~~~~~~~~~~~
      |                                                               enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:702:79: Fehler: expected initializer before Â»<Â« token
  702 | [[nodiscard]] constexpr auto enum_names() noexcept -> detail::enable_if_enum_t<E, detail::names_t<E>> {
      |                                                                               ^
SHARED/magic_enum-master/include/magic_enum.hpp:710:65: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  710 | [[nodiscard]] constexpr auto enum_entries() noexcept -> detail::enable_if_enum_t<E, detail::entries_t<E>> {
      |                                                                 ^~~~~~~~~~~~~~~~
      |                                                                 enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:710:81: Fehler: expected initializer before Â»<Â« token
  710 | [[nodiscard]] constexpr auto enum_entries() noexcept -> detail::enable_if_enum_t<E, detail::entries_t<E>> {
      |                                                                                 ^
SHARED/magic_enum-master/include/magic_enum.hpp:719:88: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  719 | [[nodiscard]] constexpr auto enum_cast(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                                                        ^~~~~~~~~~~~~~~~
      |                                                                                        enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:719:104: Fehler: expected initializer before Â»<Â« token
  719 | [[nodiscard]] constexpr auto enum_cast(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:732:40: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:732:40: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
SHARED/magic_enum-master/include/magic_enum.hpp:732:75: Fehler: expected primary-expression before Â»pÂ«
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                                           ^
SHARED/magic_enum-master/include/magic_enum.hpp:732:76: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                                            ^
SHARED/magic_enum-master/include/magic_enum.hpp:732:77: Fehler: expected Â»;Â« before Â»noexceptÂ«
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                                             ^~~~~~~~~
      |                                                                             ;
SHARED/magic_enum-master/include/magic_enum.hpp:748:40: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
  748 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:748:40: Fehler: Redeklaration von Â»template<class E> constexpr const auto magic_enum::enum_castÂ«
SHARED/magic_enum-master/include/magic_enum.hpp:732:30: Anmerkung: vorherige Deklaration von Â»template<class E, class BinaryPredicate> constexpr<typeprefixerror> magic_enum::enum_cast<E, BinaryPredicate>Â«
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                              ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:748:40: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  748 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:748:58: Fehler: expected Â»;Â« before Â»noexceptÂ«
  748 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                          ^~~~~~~~~
      |                                                          ;
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:756:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                                              ^~
SHARED/magic_enum-master/include/magic_enum.hpp:756:64: Fehler: ungÃ¼ltige Verwendung des Template-Namens Â»std::enable_if_tÂ« ohne eine Argumentliste
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                ^~~
In Datei, eingebunden von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/bits/move.h:57,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/bits/stl_pair.h:59,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/bits/stl_algobase.h:64,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/bits/char_traits.h:39,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/string:40,
                 von BackendConnector.h:5,
                 von BackendConnector.cpp:1:
/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/type_traits:2554:11: Anmerkung: Â»template<bool _Cond, class _Tp> using enable_if_t = typename std::enable_if::typeÂ« ist hier deklariert
 2554 |     using enable_if_t = typename enable_if<_Cond, _Tp>::type;
      |           ^~~~~~~~~~~
In Datei, eingebunden von BackendConnector.h:23,
                 von BackendConnector.cpp:1:
SHARED/magic_enum-master/include/magic_enum.hpp:756:80: Fehler: expected initializer before Â»<Â« token
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:763:70: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  763 | [[nodiscard]] constexpr auto enum_index(E value) noexcept -> detail::enable_if_enum_t<E, optional<std::size_t>> {
      |                                                                      ^~~~~~~~~~~~~~~~
      |                                                                      enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:763:86: Fehler: expected initializer before Â»<Â« token
  763 | [[nodiscard]] constexpr auto enum_index(E value) noexcept -> detail::enable_if_enum_t<E, optional<std::size_t>> {
      |                                                                                      ^
SHARED/magic_enum-master/include/magic_enum.hpp:775:73: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  775 | [[nodiscard]] constexpr auto enum_contains(E value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                                                         ^~~~~~~~~~~~~~~~
      |                                                                         enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:775:89: Fehler: expected initializer before Â»<Â« token
  775 | [[nodiscard]] constexpr auto enum_contains(E value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                                                                         ^
SHARED/magic_enum-master/include/magic_enum.hpp:783:92: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  783 | [[nodiscard]] constexpr auto enum_contains(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                                                                            ^~~~~~~~~~~~~~~~
      |                                                                                            enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:783:108: Fehler: expected initializer before Â»<Â« token
  783 | [[nodiscard]] constexpr auto enum_contains(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                                                                                            ^
SHARED/magic_enum-master/include/magic_enum.hpp:791:44: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
  791 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:791:44: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
SHARED/magic_enum-master/include/magic_enum.hpp:791:79: Fehler: expected primary-expression before Â»pÂ«
  791 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, bool> {
      |                                                                               ^
SHARED/magic_enum-master/include/magic_enum.hpp:791:80: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
  791 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, bool> {
      |                                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:791:81: Fehler: expected Â»;Â« before Â»noexceptÂ«
  791 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, bool> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 ;
SHARED/magic_enum-master/include/magic_enum.hpp:800:44: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
  800 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:800:44: Fehler: Redeklaration von Â»template<class E> constexpr const auto magic_enum::enum_containsÂ«
SHARED/magic_enum-master/include/magic_enum.hpp:791:30: Anmerkung: vorherige Deklaration von Â»template<class E, class BinaryPredicate> constexpr<typeprefixerror> magic_enum::enum_contains<E, BinaryPredicate>Â«
  791 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, bool> {
      |                              ^~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:800:44: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  800 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:800:62: Fehler: expected Â»;Â« before Â»noexceptÂ«
  800 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                                              ^~~~~~~~~
      |                                                              ;
SHARED/magic_enum-master/include/magic_enum.hpp:808:77: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  808 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                             ^~~~~~~~~
      |                                                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:808:77: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  808 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                             ^~~~~~~~~
      |                                                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:808:88: Fehler: Templateargument 1 ist ungÃ¼ltig
  808 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:808:96: Fehler: expected unqualified-id before Â»=Â« token
  808 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:823:77: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  823 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                             ^~~~~~~~~
      |                                                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:823:77: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  823 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                             ^~~~~~~~~
      |                                                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:823:88: Fehler: Templateargument 1 ist ungÃ¼ltig
  823 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:823:96: Fehler: expected unqualified-id before Â»=Â« token
  823 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:832:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  832 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:832:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  832 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:832:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  832 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:832:64: Fehler: expected unqualified-id before Â»=Â« token
  832 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:837:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  837 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:837:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  837 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:837:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  837 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:837:64: Fehler: expected unqualified-id before Â»=Â« token
  837 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:842:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  842 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:842:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  842 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:842:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  842 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:842:64: Fehler: expected unqualified-id before Â»=Â« token
  842 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:847:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  847 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:847:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  847 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:847:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  847 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:847:64: Fehler: expected unqualified-id before Â»=Â« token
  847 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:852:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  852 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:852:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  852 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:852:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  852 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:852:64: Fehler: expected unqualified-id before Â»=Â« token
  852 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:857:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  857 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:857:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  857 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:857:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  857 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:857:64: Fehler: expected unqualified-id before Â»=Â« token
  857 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:862:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  862 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:862:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  862 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/magic_enum-master/include/magic_enum.hpp:862:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  862 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:862:64: Fehler: expected unqualified-id before Â»=Â« token
  862 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:872:19: Fehler: Â»enum_type_nameÂ« wurde nicht innerhalb von Â»magic_enumÂ« deklariert
  872 | using magic_enum::enum_type_name;
      |                   ^~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:876:63: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  876 | [[nodiscard]] constexpr auto enum_count() noexcept -> detail::enable_if_enum_flags_t<E, std::size_t> {
      |                                                               ^~~~~~~~~~~~~~~~~~~~~~
      |                                                               enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:876:85: Fehler: expected initializer before Â»<Â« token
  876 | [[nodiscard]] constexpr auto enum_count() noexcept -> detail::enable_if_enum_flags_t<E, std::size_t> {
      |                                                                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:885:80: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  885 | [[nodiscard]] constexpr auto enum_value(std::size_t index) noexcept -> detail::enable_if_enum_flags_t<E, std::decay_t<E>> {
      |                                                                                ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                                enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:885:102: Fehler: expected initializer before Â»<Â« token
  885 | [[nodiscard]] constexpr auto enum_value(std::size_t index) noexcept -> detail::enable_if_enum_flags_t<E, std::decay_t<E>> {
      |                                                                                                      ^
SHARED/magic_enum-master/include/magic_enum.hpp:899:64: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  899 | [[nodiscard]] constexpr auto enum_values() noexcept -> detail::enable_if_enum_flags_t<E, detail::values_t<E, true>> {
      |                                                                ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:899:86: Fehler: expected initializer before Â»<Â« token
  899 | [[nodiscard]] constexpr auto enum_values() noexcept -> detail::enable_if_enum_flags_t<E, detail::values_t<E, true>> {
      |                                                                                      ^
SHARED/magic_enum-master/include/magic_enum.hpp:908:50: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  908 | [[nodiscard]] auto enum_name(E value) -> detail::enable_if_enum_flags_t<E, string> {
      |                                                  ^~~~~~~~~~~~~~~~~~~~~~
      |                                                  enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:908:72: Fehler: expected initializer before Â»<Â« token
  908 | [[nodiscard]] auto enum_name(E value) -> detail::enable_if_enum_flags_t<E, string> {
      |                                                                        ^
SHARED/magic_enum-master/include/magic_enum.hpp:934:63: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  934 | [[nodiscard]] constexpr auto enum_names() noexcept -> detail::enable_if_enum_flags_t<E, detail::names_t<E, true>> {
      |                                                               ^~~~~~~~~~~~~~~~~~~~~~
      |                                                               enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:934:85: Fehler: expected initializer before Â»<Â« token
  934 | [[nodiscard]] constexpr auto enum_names() noexcept -> detail::enable_if_enum_flags_t<E, detail::names_t<E, true>> {
      |                                                                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:942:65: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  942 | [[nodiscard]] constexpr auto enum_entries() noexcept -> detail::enable_if_enum_flags_t<E, detail::entries_t<E, true>> {
      |                                                                 ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                 enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:942:87: Fehler: expected initializer before Â»<Â« token
  942 | [[nodiscard]] constexpr auto enum_entries() noexcept -> detail::enable_if_enum_flags_t<E, detail::entries_t<E, true>> {
      |                                                                                       ^
SHARED/magic_enum-master/include/magic_enum.hpp:951:88: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  951 | [[nodiscard]] constexpr auto enum_cast(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                                                        ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                                        enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:951:110: Fehler: expected initializer before Â»<Â« token
  951 | [[nodiscard]] constexpr auto enum_cast(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                                                                              ^
SHARED/magic_enum-master/include/magic_enum.hpp:981:40: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
  981 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:981:40: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
SHARED/magic_enum-master/include/magic_enum.hpp:981:75: Fehler: expected primary-expression before Â»pÂ«
  981 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                                           ^
SHARED/magic_enum-master/include/magic_enum.hpp:981:76: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
  981 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                                            ^
SHARED/magic_enum-master/include/magic_enum.hpp:981:77: Fehler: expected Â»;Â« before Â»noexceptÂ«
  981 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                                             ^~~~~~~~~
      |                                                                             ;
SHARED/magic_enum-master/include/magic_enum.hpp:1014:40: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
 1014 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1014:40: Fehler: Redeklaration von Â»template<class E> constexpr const auto magic_enum::flags::enum_castÂ«
SHARED/magic_enum-master/include/magic_enum.hpp:981:30: Anmerkung: vorherige Deklaration von Â»template<class E, class BinaryPredicate> constexpr<typeprefixerror> magic_enum::flags::enum_cast<E, BinaryPredicate>Â«
  981 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                              ^~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1014:40: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
 1014 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1014:58: Fehler: expected Â»;Â« before Â»noexceptÂ«
 1014 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                          ^~~~~~~~~
      |                                                          ;
SHARED/magic_enum-master/include/magic_enum.hpp:1021:19: Fehler: Â»enum_integerÂ« wurde nicht innerhalb von Â»magic_enumÂ« deklariert
 1021 | using magic_enum::enum_integer;
      |                   ^~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1026:70: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
 1026 | [[nodiscard]] constexpr auto enum_index(E value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::size_t>> {
      |                                                                      ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                      enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:1026:92: Fehler: expected initializer before Â»<Â« token
 1026 | [[nodiscard]] constexpr auto enum_index(E value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::size_t>> {
      |                                                                                            ^
SHARED/magic_enum-master/include/magic_enum.hpp:1043:73: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
 1043 | [[nodiscard]] constexpr auto enum_contains(E value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                         ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                         enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:1043:95: Fehler: expected initializer before Â»<Â« token
 1043 | [[nodiscard]] constexpr auto enum_contains(E value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                                               ^
SHARED/magic_enum-master/include/magic_enum.hpp:1052:92: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
 1052 | [[nodiscard]] constexpr auto enum_contains(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                                            ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                                            enable_if_enum
SHARED/magic_enum-master/include/magic_enum.hpp:1052:114: Fehler: expected initializer before Â»<Â« token
 1052 | [[nodiscard]] constexpr auto enum_contains(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                                                                  ^
SHARED/magic_enum-master/include/magic_enum.hpp:1060:44: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
 1060 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1060:44: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
SHARED/magic_enum-master/include/magic_enum.hpp:1060:79: Fehler: expected primary-expression before Â»pÂ«
 1060 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                               ^
SHARED/magic_enum-master/include/magic_enum.hpp:1060:80: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
 1060 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                                ^
SHARED/magic_enum-master/include/magic_enum.hpp:1060:81: Fehler: expected Â»;Â« before Â»noexceptÂ«
 1060 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 ;
SHARED/magic_enum-master/include/magic_enum.hpp:1069:44: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
 1069 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1069:44: Fehler: Redeklaration von Â»template<class E> constexpr const auto magic_enum::flags::enum_containsÂ«
SHARED/magic_enum-master/include/magic_enum.hpp:1060:30: Anmerkung: vorherige Deklaration von Â»template<class E, class BinaryPredicate> constexpr<typeprefixerror> magic_enum::flags::enum_contains<E, BinaryPredicate>Â«
 1060 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, bool> {
      |                              ^~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1069:44: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
 1069 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1069:62: Fehler: expected Â»;Â« before Â»noexceptÂ«
 1069 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                              ^~~~~~~~~
      |                                                              ;
SHARED/magic_enum-master/include/magic_enum.hpp:1079:63: Fehler: Â»magic_enum::detail::enable_if_enum_flags_tÂ« wurde nicht deklariert
 1079 | template <typename Char, typename Traits, typename E, detail::enable_if_enum_flags_t<E, int> = 0>
      |                                                               ^~~~~~~~~~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1079:85: Fehler: expected Â»>Â« before Â»<Â« token
 1079 | template <typename Char, typename Traits, typename E, detail::enable_if_enum_flags_t<E, int> = 0>
      |                                                                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»std::basic_ostream<_CharT, _Traits>& magic_enum::flags::ostream_operators::operator<<(std::basic_ostream<_CharT, _Traits>&, E)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:1084:7: Warnung: Â»init-statement in AuswahlanweisungenÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
 1084 |   if (const auto name = magic_enum::flags::enum_name<D>(value); !name.empty()) {
      |       ^~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1084:44: Fehler: Â»enum_nameÂ« ist kein Element von Â»magic_enum::flagsÂ«; meinten Sie Â»enum_castÂ«?
 1084 |   if (const auto name = magic_enum::flags::enum_name<D>(value); !name.empty()) {
      |                                            ^~~~~~~~~
      |                                            enum_cast
SHARED/magic_enum-master/include/magic_enum.hpp:1084:55: Fehler: expected primary-expression before Â»>Â« token
 1084 |   if (const auto name = magic_enum::flags::enum_name<D>(value); !name.empty()) {
      |                                                       ^
SHARED/magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/magic_enum-master/include/magic_enum.hpp:1094:63: Fehler: Â»magic_enum::detail::enable_if_enum_flags_tÂ« wurde nicht deklariert
 1094 | template <typename Char, typename Traits, typename E, detail::enable_if_enum_flags_t<E, int> = 0>
      |                                                               ^~~~~~~~~~~~~~~~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1094:85: Fehler: expected Â»>Â« before Â»<Â« token
 1094 | template <typename Char, typename Traits, typename E, detail::enable_if_enum_flags_t<E, int> = 0>
      |                                                                                     ^
SHARED/magic_enum-master/include/magic_enum.hpp:1095:84: Fehler: Â»optionalÂ« wurde nicht deklariert
 1095 | std::basic_ostream<Char, Traits>& operator<<(std::basic_ostream<Char, Traits>& os, optional<E> value) {
      |                                                                                    ^~~~~~~~
SHARED/magic_enum-master/include/magic_enum.hpp:1095:92: Fehler: expected Â»,Â« or Â»...Â« before Â»<Â« token
 1095 | std::basic_ostream<Char, Traits>& operator<<(std::basic_ostream<Char, Traits>& os, optional<E> value) {
      |                                                                                            ^
SHARED/magic_enum-master/include/magic_enum.hpp: In Funktion Â»std::basic_ostream<_CharT, _Traits>& magic_enum::flags::ostream_operators::operator<<(std::basic_ostream<_CharT, _Traits>&, int)Â«:
SHARED/magic_enum-master/include/magic_enum.hpp:1096:10: Fehler: Â»valueÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht deklariert; meinten Sie Â»magic_enum::detail::valueÂ«?
 1096 |   return value.has_value() ? (os << value.value()) : os;
      |          ^~~~~
      |          magic_enum::detail::value
SHARED/magic_enum-master/include/magic_enum.hpp:395:13: Anmerkung: Â»magic_enum::detail::valueÂ« ist hier deklariert
  395 | constexpr E value(std::size_t i) noexcept {
      |             ^~~~~
BackendConnector.cpp: In Elementfunktion Â»BackendConnector::PLAYER_STATUS BackendConnector::get_player_state()Â«:
BackendConnector.cpp:125:28: Fehler: falsche Anzahl der Templateargumente (1, sollte 2 sein)
  125 |     auto val = magic_enum::enum_cast<PLAYER_STATE>(mm_detailed["player_state"].int_value());
      |                            ^~~~~~~~~~~~~~~~~~~~~~~
In Datei, eingebunden von BackendConnector.h:23,
                 von BackendConnector.cpp:1:
SHARED/magic_enum-master/include/magic_enum.hpp:732:30: Anmerkung: fÃ¼r Â»template<class E, class BinaryPredicate> constexpr<typeprefixerror> magic_enum::enum_cast<E, BinaryPredicate>Â« bereitgestellt
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                              ^~~~~~~~~
BackendConnector.cpp: In Elementfunktion Â»bool BackendConnector::set_player_setup_confirmation(BackendConnector::PLAYER_SETUP_STATE)Â«:
BackendConnector.cpp:244:32: Fehler: Â»enum_integerÂ« ist kein Element von Â»magic_enumÂ«
  244 |  int state_index = magic_enum::enum_integer(_state);
      |                                ^~~~~~~~~~~~
BackendConnector.cpp: In Elementfunktion Â»bool BackendConnector::set_player_state(BackendConnector::PLAYER_STATE)Â«:
BackendConnector.cpp:287:29: Fehler: Â»enum_integerÂ« ist kein Element von Â»magic_enumÂ«
  287 |  int ps_index = magic_enum::enum_integer(_ps);
      |                             ^~~~~~~~~~~~
Makefile:212: recipe for target 'Debug/BackendConnector.o' failed
make[1]: *** [Debug/BackendConnector.o] Error 1
In Datei, eingebunden von SHARED/guicommunicator/guicommunicator.h:22,
                 von controller.cpp:25:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:99:23: Fehler: Â»optionalÂ« in Namensraum Â»stdÂ« bezeichnet keinen Templatetyp
   99 | using optional = std::optional<T>;
      |                       ^~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:99:18: Anmerkung: Â»std::optionalÂ« ist erst ab C++17 verfÃ¼gbar
   99 | using optional = std::optional<T>;
      |                  ^~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:106:26: Fehler: Â»string_viewÂ« in Namensbereich Â»stdÂ« bezeichnet keinen Typ
  106 | using string_view = std::string_view;
      |                          ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:106:21: Anmerkung: Â»std::string_viewÂ« ist erst ab C++17 verfÃ¼gbar
  106 | using string_view = std::string_view;
      |                     ^~~
In Datei, eingebunden von SHARED/guicommunicator/guicommunicator.h:22,
                 von controller.cpp:25:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:123:22: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  123 |   static_assert(std::is_enum_v<E>, "magic_enum::customize::enum_range requires enum type.");
      |                      ^~~~~~~~~
      |                      is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:123:33: Fehler: expected primary-expression before Â»>Â« token
  123 |   static_assert(std::is_enum_v<E>, "magic_enum::customize::enum_range requires enum type.");
      |                                 ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:123:34: Fehler: expected primary-expression before Â»,Â« token
  123 |   static_assert(std::is_enum_v<E>, "magic_enum::customize::enum_range requires enum type.");
      |                                  ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:124:3: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  124 |   inline static constexpr int min = MAGIC_ENUM_RANGE_MIN;
      |   ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:125:3: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  125 |   inline static constexpr int max = MAGIC_ENUM_RANGE_MAX;
      |   ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:139:11: Fehler: Â»string_viewÂ« bezeichnet keinen Typ
  139 | constexpr string_view enum_name(E) noexcept {
      |           ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:159:47: Fehler: expected Â»)Â« before Â»strÂ«
  159 |   constexpr explicit static_string(string_view str) noexcept : static_string{str, std::make_index_sequence<N>{}} {
      |                                   ~           ^~~~
      |                                               )
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:159:114: Fehler: expected unqualified-id before Â»{Â« token
  159 |   constexpr explicit static_string(string_view str) noexcept : static_string{str, std::make_index_sequence<N>{}} {
      |                                                                                                                  ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:167:22: Fehler: expected type-specifier before Â»string_viewÂ«
  167 |   constexpr operator string_view() const noexcept { return {data(), size()}; }
      |                      ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:171:38: Fehler: expected Â»)Â« before Â»strÂ«
  171 |   constexpr static_string(string_view str, std::index_sequence<I...>) noexcept : chars{{str[I]..., '\0'}} {}
      |                          ~           ^~~~
      |                                      )
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:171:107: Fehler: expected unqualified-id before Â»{Â« token
  171 |   constexpr static_string(string_view str, std::index_sequence<I...>) noexcept : chars{{str[I]..., '\0'}} {}
      |                                                                                                           ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:178:13: Fehler: nur Deklarationen von Konstruktoren und Umwandlungsoperatoren kÃ¶nnen Â»explicitÂ« sein
  178 |   constexpr explicit static_string(string_view) noexcept {}
      |             ^~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:178:36: Fehler: Feld Â»string_viewÂ« hat unvollstÃ¤ndigen Typen Â»const magic_enum::detail::static_string<0>Â«
  178 |   constexpr explicit static_string(string_view) noexcept {}
      |                                    ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:177:8: Anmerkung: Definition von Â»struct magic_enum::detail::static_string<0>Â« ist erst nach der schlieÃŸenden Klammer vollendet
  177 | struct static_string<0> {
      |        ^~~~~~~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:178:3: Fehler: nicht-statisches Datenelement Â»string_viewÂ« als Â»constexprÂ« deklariert
  178 |   constexpr explicit static_string(string_view) noexcept {}
      |   ^~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:178:47: Fehler: Â»;Â« am Ende von Elementdeklaration erwartet
  178 |   constexpr explicit static_string(string_view) noexcept {}
      |                                               ^
      |                                                ;
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:178:49: Fehler: expected unqualified-id before Â»noexceptÂ«
  178 |   constexpr explicit static_string(string_view) noexcept {}
      |                                                 ^~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:184:22: Fehler: expected type-specifier before Â»string_viewÂ«
  184 |   constexpr operator string_view() const noexcept { return {}; }
      |                      ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:193:11: Fehler: Â»string_viewÂ« bezeichnet keinen Typ
  193 | constexpr string_view pretty_name(string_view name) noexcept {
      |           ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:213:28: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  213 | constexpr std::size_t find(string_view str, char c) noexcept {
      |                            ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:213:45: Fehler: expected primary-expression before Â»charÂ«
  213 | constexpr std::size_t find(string_view str, char c) noexcept {
      |                                             ^~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:213:51: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
  213 | constexpr std::size_t find(string_view str, char c) noexcept {
      |                                                   ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:235:26: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                          ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:235:43: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                                           ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:235:75: Fehler: expected primary-expression before Â»&&Â« token
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                                                                           ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:235:78: Fehler: Â»pÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                                                                              ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:235:79: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                                                                               ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:235:80: Fehler: expected Â»;Â« before Â»noexceptÂ«
  235 | constexpr bool cmp_equal(string_view lhs, string_view rhs, BinaryPredicate&& p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) {
      |                                                                                ^~~~~~~~~
      |                                                                                ;
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr bool magic_enum::detail::cmp_less(L, R)Â«:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:264:22: Fehler: Â»is_integral_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_integralÂ«?
  264 |   static_assert(std::is_integral_v<L> && std::is_integral_v<R>, "magic_enum::detail::cmp_less requires integral type.");
      |                      ^~~~~~~~~~~~~
      |                      is_integral
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:264:37: Fehler: expected primary-expression before Â»>Â« token
  264 |   static_assert(std::is_integral_v<L> && std::is_integral_v<R>, "magic_enum::detail::cmp_less requires integral type.");
      |                                     ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:264:45: Fehler: expected Â»,Â« before Â»::Â« token
  264 |   static_assert(std::is_integral_v<L> && std::is_integral_v<R>, "magic_enum::detail::cmp_less requires integral type.");
      |                                             ^~
      |                                             ,
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:264:45: Fehler: expected string-literal before Â»::Â« token
  264 |   static_assert(std::is_integral_v<L> && std::is_integral_v<R>, "magic_enum::detail::cmp_less requires integral type.");
      |                                             ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:264:45: Fehler: expected Â»)Â« before Â»::Â« token
  264 |   static_assert(std::is_integral_v<L> && std::is_integral_v<R>, "magic_enum::detail::cmp_less requires integral type.");
      |                ~                            ^~
      |                                             )
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:266:6: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |      ^~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:266:22: Fehler: Â»is_signed_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_signedÂ«?
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                      ^~~~~~~~~~~
      |                      is_signed
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:266:35: Fehler: expected primary-expression before Â»>Â« token
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                                   ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:266:37: Fehler: expected primary-expression before Â»==Â« token
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                                     ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:266:45: Fehler: Â»is_signed_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_signedÂ«?
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                                             ^~~~~~~~~~~
      |                                             is_signed
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:266:58: Fehler: expected primary-expression before Â»>Â« token
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                                                          ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:266:59: Fehler: expected primary-expression before Â»)Â« token
  266 |   if constexpr (std::is_signed_v<L> == std::is_signed_v<R>) {
      |                                                           ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:269:13: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  269 |   } else if constexpr (std::is_signed_v<R>) {
      |             ^~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:269:29: Fehler: Â»is_signed_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_signedÂ«?
  269 |   } else if constexpr (std::is_signed_v<R>) {
      |                             ^~~~~~~~~~~
      |                             is_signed
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:269:42: Fehler: expected primary-expression before Â»>Â« token
  269 |   } else if constexpr (std::is_signed_v<R>) {
      |                                          ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:269:43: Fehler: expected primary-expression before Â»)Â« token
  269 |   } else if constexpr (std::is_signed_v<R>) {
      |                                           ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr I magic_enum::detail::log2(I)Â«:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:280:22: Fehler: Â»is_integral_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_integralÂ«?
  280 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::log2 requires integral type.");
      |                      ^~~~~~~~~~~~~
      |                      is_integral
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:280:37: Fehler: expected primary-expression before Â»>Â« token
  280 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::log2 requires integral type.");
      |                                     ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:280:38: Fehler: expected primary-expression before Â»,Â« token
  280 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::log2 requires integral type.");
      |                                      ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr bool magic_enum::detail::is_pow2(I)Â«:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:290:22: Fehler: Â»is_integral_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_integralÂ«?
  290 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::is_pow2 requires integral type.");
      |                      ^~~~~~~~~~~~~
      |                      is_integral
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:290:37: Fehler: expected primary-expression before Â»>Â« token
  290 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::is_pow2 requires integral type.");
      |                                     ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:290:38: Fehler: expected primary-expression before Â»,Â« token
  290 |   static_assert(std::is_integral_v<I>, "magic_enum::detail::is_pow2 requires integral type.");
      |                                      ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:296:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  296 | inline constexpr bool is_enum_v = std::is_enum_v<T> && std::is_same_v<T, std::decay_t<T>>;
      | ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:296:40: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  296 | inline constexpr bool is_enum_v = std::is_enum_v<T> && std::is_same_v<T, std::decay_t<T>>;
      |                                        ^~~~~~~~~
      |                                        is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:296:51: Fehler: expected primary-expression before Â»>Â« token
  296 | inline constexpr bool is_enum_v = std::is_enum_v<T> && std::is_same_v<T, std::decay_t<T>>;
      |                                                   ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:296:56: Fehler: Marke Â»stdÂ« auÃŸerhalb einer Funktion referenziert
  296 | inline constexpr bool is_enum_v = std::is_enum_v<T> && std::is_same_v<T, std::decay_t<T>>;
      |                                                        ^~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr auto magic_enum::detail::n()Â«:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:305:13: Fehler: Â»string_viewÂ« bezeichnet keinen Typ
  305 |   constexpr string_view name{__PRETTY_FUNCTION__ + 49, sizeof(__PRETTY_FUNCTION__) - 51};
      |             ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:309:24: Fehler: Â»nameÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  309 |   return static_string<name.size()>{name};
      |                        ^~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:309:35: Fehler: Templateargument 1 ist ungÃ¼ltig
  309 |   return static_string<name.size()>{name};
      |                                   ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:316:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  316 | inline constexpr auto type_name_v = n<E>();
      | ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr auto magic_enum::detail::n()Â«:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:321:43: Fehler: Â»enum_nameÂ« ist kein Element von Â»magic_enum::customizeÂ«; meinten Sie Â»enum_rangeÂ«?
  321 |   constexpr auto custom_name = customize::enum_name<E>(V);
      |                                           ^~~~~~~~~
      |                                           enum_range
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:321:54: Fehler: expected primary-expression before Â»>Â« token
  321 |   constexpr auto custom_name = customize::enum_name<E>(V);
      |                                                      ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:323:6: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  323 |   if constexpr (custom_name.empty()) {
      |      ^~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:341:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  341 | inline constexpr auto enum_name_v = n<E, V>();
      | ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:343:23: Fehler: Â»autoÂ«-Parameter darf in diesem Kontext nicht verwendet werden
  343 | template <typename E, auto V>
      |                       ^~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr int magic_enum::detail::reflected_min()Â«:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:354:6: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  354 |   if constexpr (IsFlags) {
      |      ^~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:361:8: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  361 |     if constexpr (cmp_less(lhs, rhs)) {
      |        ^~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr int magic_enum::detail::reflected_max()Â«:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:373:6: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  373 |   if constexpr (IsFlags) {
      |      ^~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:380:8: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  380 |     if constexpr (cmp_less(lhs, rhs)) {
      |        ^~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:389:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  389 | inline constexpr auto reflected_min_v = reflected_min<E, IsFlags>();
      | ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:392:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  392 | inline constexpr auto reflected_max_v = reflected_max<E, IsFlags>();
      | ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr E magic_enum::detail::value(std::size_t)Â«:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:398:6: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  398 |   if constexpr (IsFlags) {
      |      ^~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr auto magic_enum::detail::values(std::index_sequence<I ...>)Â«:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:409:62: Fehler: Â»constexprÂ«-Lambda ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  409 |   constexpr std::size_t count = [](decltype((valid)) valid_) constexpr noexcept -> std::size_t {
      |                                                              ^~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:419:22: Fehler: der Wert von Â»countÂ« ist in konstantem Ausdruck nicht verwendbar
  419 |   std::array<E, count> values{};
      |                      ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:409:25: Anmerkung: Â»countÂ« in seiner eigenen Initialisierung verwendet
  409 |   constexpr std::size_t count = [](decltype((valid)) valid_) constexpr noexcept -> std::size_t {
      |                         ^~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:419:22: Anmerkung: in Templateargument fÃ¼r Typ Â»unsigned intÂ«
  419 |   std::array<E, count> values{};
      |                      ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:422:13: Fehler: ungÃ¼ltige Typen Â»int[std::size_t {aka unsigned int}]Â« fÃ¼r Feldindex
  422 |       values[v++] = value<E, Min, IsFlags>(i);
      |             ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:440:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  440 | inline constexpr auto values_v = values<E, IsFlags>();
      | ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:446:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  446 | inline constexpr auto count_v = values_v<E, IsFlags>.size();
      | ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:449:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  449 | inline constexpr auto min_v = static_cast<U>(values_v<E, IsFlags>.front());
      | ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:452:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  452 | inline constexpr auto max_v = static_cast<U>(values_v<E, IsFlags>.back());
      | ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:467:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  467 | inline constexpr auto range_size_v = range_size<E, IsFlags>();
      | ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:473:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  473 | inline constexpr auto invalid_index_v = (std::numeric_limits<index_t<E, IsFlags>>::max)();
      | ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:485:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  485 | inline constexpr auto indexes_v = indexes<E, IsFlags>(std::make_index_sequence<range_size_v<E, IsFlags>>{});
      | ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr auto magic_enum::detail::names(std::index_sequence<I ...>)Â«:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:491:21: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  491 |   return std::array<string_view, sizeof...(I)>{{enum_name_v<E, values_v<E, IsFlags>[I]>...}};
      |                     ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:491:46: Fehler: Templateargument 1 ist ungÃ¼ltig
  491 |   return std::array<string_view, sizeof...(I)>{{enum_name_v<E, values_v<E, IsFlags>[I]>...}};
      |                                              ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:495:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  495 | inline constexpr auto names_v = names<E, IsFlags>(std::make_index_sequence<count_v<E, IsFlags>>{});
      | ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr auto magic_enum::detail::entries(std::index_sequence<I ...>)Â«:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:504:34: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  504 |   return std::array<std::pair<E, string_view>, sizeof...(I)>{{{values_v<E, IsFlags>[I], enum_name_v<E, values_v<E, IsFlags>[I]>}...}};
      |                                  ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:504:45: Fehler: Templateargument 2 ist ungÃ¼ltig
  504 |   return std::array<std::pair<E, string_view>, sizeof...(I)>{{{values_v<E, IsFlags>[I], enum_name_v<E, values_v<E, IsFlags>[I]>}...}};
      |                                             ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:504:60: Fehler: Templateargument 1 ist ungÃ¼ltig
  504 |   return std::array<std::pair<E, string_view>, sizeof...(I)>{{{values_v<E, IsFlags>[I], enum_name_v<E, values_v<E, IsFlags>[I]>}...}};
      |                                                            ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:508:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  508 | inline constexpr auto entries_v = entries<E, IsFlags>(std::make_index_sequence<count_v<E, IsFlags>>{});
      | ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:521:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  521 | inline constexpr bool is_sparse_v = is_sparse<E, IsFlags>();
      | ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: In Funktion Â»constexpr std::size_t magic_enum::detail::undex(U)Â«:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:527:7: Warnung: Â»init-statement in AuswahlanweisungenÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  527 |   if (const auto i = static_cast<std::size_t>(value - min_v<E>); value >= min_v<E> && value <= max_v<E>) {
      |       ^~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:528:8: Warnung: Â»if constexprÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  528 |     if constexpr (is_sparse_v<E>) {
      |        ^~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:529:11: Warnung: Â»init-statement in AuswahlanweisungenÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  529 |       if (const auto idx = indexes_v<E>[i]; idx != invalid_index_v<E>) {
      |           ^~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:579:55: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  579 | using enable_if_enum_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, false, T, R>::type;
      |                                                       ^~~~~~~~~
      |                                                       is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:579:55: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  579 | using enable_if_enum_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, false, T, R>::type;
      |                                                       ^~~~~~~~~
      |                                                       is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:579:79: Fehler: falsche Anzahl der Templateargumente (1, sollte 4 sein)
  579 | using enable_if_enum_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, false, T, R>::type;
      |                                                                               ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:560:8: Anmerkung: fÃ¼r Â»template<bool <anonym>, bool <anonym>, class T, class R> struct magic_enum::detail::enable_if_enumÂ« bereitgestellt
  560 | struct enable_if_enum {};
      |        ^~~~~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:579:35: Fehler: Spezifikation mit geschachteltem Namen erwartet
  579 | using enable_if_enum_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, false, T, R>::type;
      |                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:582:61: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  582 | using enable_if_enum_flags_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, true, T, R>::type;
      |                                                             ^~~~~~~~~
      |                                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:582:61: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  582 | using enable_if_enum_flags_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, true, T, R>::type;
      |                                                             ^~~~~~~~~
      |                                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:582:85: Fehler: falsche Anzahl der Templateargumente (1, sollte 4 sein)
  582 | using enable_if_enum_flags_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, true, T, R>::type;
      |                                                                                     ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:560:8: Anmerkung: fÃ¼r Â»template<bool <anonym>, bool <anonym>, class T, class R> struct magic_enum::detail::enable_if_enumÂ« bereitgestellt
  560 | struct enable_if_enum {};
      |        ^~~~~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:582:41: Fehler: Spezifikation mit geschachteltem Namen erwartet
  582 | using enable_if_enum_flags_t = typename enable_if_enum<std::is_enum_v<std::decay_t<T>>, true, T, R>::type;
      |                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:584:63: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  584 | template <typename T, typename Enable = std::enable_if_t<std::is_enum_v<std::decay_t<T>>>>
      |                                                               ^~~~~~~~~
      |                                                               is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:584:63: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  584 | template <typename T, typename Enable = std::enable_if_t<std::is_enum_v<std::decay_t<T>>>>
      |                                                               ^~~~~~~~~
      |                                                               is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:584:87: Fehler: Templateargument 1 ist ungÃ¼ltig
  584 | template <typename T, typename Enable = std::enable_if_t<std::is_enum_v<std::decay_t<T>>>>
      |                                                                                       ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:584:89: Fehler: expected Â»>Â« before Â»>>Â« token
  584 | template <typename T, typename Enable = std::enable_if_t<std::is_enum_v<std::decay_t<T>>>>
      |                                                                                         ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:587:35: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  587 | template <typename T, bool = std::is_enum_v<T>>
      |                                   ^~~~~~~~~
      |                                   is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:587:46: Fehler: expected primary-expression before Â»>>Â« token
  587 | template <typename T, bool = std::is_enum_v<T>>
      |                                              ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:587:46: Fehler: expected Â»>Â« before Â»>>Â« token
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:591:52: Fehler: expected template-name before Â»<Â« token
  591 | struct is_scoped_enum<T, true> : std::bool_constant<!std::is_convertible_v<T, std::underlying_type_t<T>>> {};
      |                                                    ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:591:52: Fehler: expected Â»{Â« before Â»<Â« token
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:593:35: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  593 | template <typename T, bool = std::is_enum_v<T>>
      |                                   ^~~~~~~~~
      |                                   is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:593:46: Fehler: expected primary-expression before Â»>>Â« token
  593 | template <typename T, bool = std::is_enum_v<T>>
      |                                              ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:593:46: Fehler: expected Â»>Â« before Â»>>Â« token
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:597:54: Fehler: expected template-name before Â»<Â« token
  597 | struct is_unscoped_enum<T, true> : std::bool_constant<std::is_convertible_v<T, std::underlying_type_t<T>>> {};
      |                                                      ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:597:54: Fehler: expected Â»{Â« before Â»<Â« token
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:599:35: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  599 | template <typename T, bool = std::is_enum_v<std::decay_t<T>>>
      |                                   ^~~~~~~~~
      |                                   is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:599:59: Fehler: expected primary-expression before Â»>Â« token
  599 | template <typename T, bool = std::is_enum_v<std::decay_t<T>>>
      |                                                           ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:599:61: Fehler: expected unqualified-id before Â»>Â« token
  599 | template <typename T, bool = std::is_enum_v<std::decay_t<T>>>
      |                                                             ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:603:8: Fehler: Â»underlying_typeÂ« ist kein Klassentemplate
  603 | struct underlying_type<T, true> : std::underlying_type<std::decay_t<T>> {};
      |        ^~~~~~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:608:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  608 | inline constexpr bool is_magic_enum_supported = detail::supported<void>::value;
      | ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:611:36: Fehler: Templateargument 2 ist ungÃ¼ltig
  611 | using Enum = detail::enum_concept<T>;
      |                                    ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:616:53: Fehler: Templateargument 2 ist ungÃ¼ltig
  616 | struct is_unscoped_enum : detail::is_unscoped_enum<T> {};
      |                                                     ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:619:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  619 | inline constexpr bool is_unscoped_enum_v = is_unscoped_enum<T>::value;
      | ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:624:49: Fehler: Templateargument 2 ist ungÃ¼ltig
  624 | struct is_scoped_enum : detail::is_scoped_enum<T> {};
      |                                                 ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:627:1: Warnung: Â»inlineÂ«-Variablen sind nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
  627 | inline constexpr bool is_scoped_enum_v = is_scoped_enum<T>::value;
      | ^~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:639:105: Fehler: Templateargument 1 ist ungÃ¼ltig
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                                         ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:639:105: Fehler: Templateargument 1 ist ungÃ¼ltig
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                                         ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:639:105: Fehler: Templateargument 1 ist ungÃ¼ltig
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                                         ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:639:105: Fehler: Templateargument 1 ist ungÃ¼ltig
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                                         ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:639:81: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:639:105: Fehler: Templateargument 1 ist ungÃ¼ltig
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                                                         ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:639:59: Fehler: ungÃ¼ltige Verwendung des Template-Namens Â»std::enable_if_tÂ« ohne eine Argumentliste
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                           ^~~
In Datei, eingebunden von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/bits/move.h:57,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/bits/nested_exception.h:40,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/exception:148,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/ios:39,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/ostream:38,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/iostream:39,
                 von controller.cpp:1:
/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/type_traits:2554:11: Anmerkung: Â»template<bool _Cond, class _Tp> using enable_if_t = typename std::enable_if::typeÂ« ist hier deklariert
 2554 |     using enable_if_t = typename enable_if<_Cond, _Tp>::type;
      |           ^~~~~~~~~~~
In Datei, eingebunden von SHARED/guicommunicator/guicommunicator.h:22,
                 von controller.cpp:25:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:639:75: Fehler: expected initializer before Â»<Â« token
  639 | [[nodiscard]] constexpr auto enum_type_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, string_view> {
      |                                                                           ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:649:63: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  649 | [[nodiscard]] constexpr auto enum_count() noexcept -> detail::enable_if_enum_t<E, std::size_t> {
      |                                                               ^~~~~~~~~~~~~~~~
      |                                                               enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:649:79: Fehler: expected initializer before Â»<Â« token
  649 | [[nodiscard]] constexpr auto enum_count() noexcept -> detail::enable_if_enum_t<E, std::size_t> {
      |                                                                               ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:658:80: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  658 | [[nodiscard]] constexpr auto enum_value(std::size_t index) noexcept -> detail::enable_if_enum_t<E, std::decay_t<E>> {
      |                                                                                ^~~~~~~~~~~~~~~~
      |                                                                                enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:658:96: Fehler: expected initializer before Â»<Â« token
  658 | [[nodiscard]] constexpr auto enum_value(std::size_t index) noexcept -> detail::enable_if_enum_t<E, std::decay_t<E>> {
      |                                                                                                ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:670:64: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  670 | [[nodiscard]] constexpr auto enum_values() noexcept -> detail::enable_if_enum_t<E, detail::values_t<E>> {
      |                                                                ^~~~~~~~~~~~~~~~
      |                                                                enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:670:80: Fehler: expected initializer before Â»<Â« token
  670 | [[nodiscard]] constexpr auto enum_values() noexcept -> detail::enable_if_enum_t<E, detail::values_t<E>> {
      |                                                                                ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:678:11: Fehler: Â»autoÂ«-Parameter darf in diesem Kontext nicht verwendet werden
  678 | template <auto V>
      |           ^~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:679:76: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  679 | [[nodiscard]] constexpr auto enum_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<decltype(V)>>, string_view> {
      |                                                                            ^~~~~~~~~
      |                                                                            is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:679:76: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  679 | [[nodiscard]] constexpr auto enum_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<decltype(V)>>, string_view> {
      |                                                                            ^~~~~~~~~
      |                                                                            is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:679:99: Fehler: Templateargument 1 ist ungÃ¼ltig
  679 | [[nodiscard]] constexpr auto enum_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<decltype(V)>>, string_view> {
      |                                                                                                   ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:679:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  679 | [[nodiscard]] constexpr auto enum_name() noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<decltype(V)>>, string_view> {
      |                                                                                                              ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:690:69: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  690 | [[nodiscard]] constexpr auto enum_name(E value) noexcept -> detail::enable_if_enum_t<E, string_view> {
      |                                                                     ^~~~~~~~~~~~~~~~
      |                                                                     enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:690:85: Fehler: expected initializer before Â»<Â« token
  690 | [[nodiscard]] constexpr auto enum_name(E value) noexcept -> detail::enable_if_enum_t<E, string_view> {
      |                                                                                     ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:702:63: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  702 | [[nodiscard]] constexpr auto enum_names() noexcept -> detail::enable_if_enum_t<E, detail::names_t<E>> {
      |                                                               ^~~~~~~~~~~~~~~~
      |                                                               enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:702:79: Fehler: expected initializer before Â»<Â« token
  702 | [[nodiscard]] constexpr auto enum_names() noexcept -> detail::enable_if_enum_t<E, detail::names_t<E>> {
      |                                                                               ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:710:65: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  710 | [[nodiscard]] constexpr auto enum_entries() noexcept -> detail::enable_if_enum_t<E, detail::entries_t<E>> {
      |                                                                 ^~~~~~~~~~~~~~~~
      |                                                                 enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:710:81: Fehler: expected initializer before Â»<Â« token
  710 | [[nodiscard]] constexpr auto enum_entries() noexcept -> detail::enable_if_enum_t<E, detail::entries_t<E>> {
      |                                                                                 ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:719:88: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  719 | [[nodiscard]] constexpr auto enum_cast(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                                                        ^~~~~~~~~~~~~~~~
      |                                                                                        enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:719:104: Fehler: expected initializer before Â»<Â« token
  719 | [[nodiscard]] constexpr auto enum_cast(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                                                                        ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:732:40: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:732:40: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:732:75: Fehler: expected primary-expression before Â»pÂ«
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                                           ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:732:76: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                                            ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:732:77: Fehler: expected Â»;Â« before Â»noexceptÂ«
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                                             ^~~~~~~~~
      |                                                                             ;
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:748:40: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
  748 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:748:40: Fehler: Redeklaration von Â»template<class E> constexpr const auto magic_enum::enum_castÂ«
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:732:30: Anmerkung: vorherige Deklaration von Â»template<class E, class BinaryPredicate> constexpr<TypprÃ¤fixfehler> magic_enum::enum_cast<E, BinaryPredicate>Â«
  732 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                              ^~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:748:40: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  748 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:748:58: Fehler: expected Â»;Â« before Â»noexceptÂ«
  748 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_t<E, optional<std::decay_t<E>>> {
      |                                                          ^~~~~~~~~
      |                                                          ;
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:756:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                                              ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:756:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                                              ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:756:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                                              ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:756:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                                              ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:756:86: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                      ^~~~~~~~~
      |                                                                                      is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:756:110: Fehler: Templateargument 1 ist ungÃ¼ltig
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                                              ^~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:756:64: Fehler: ungÃ¼ltige Verwendung des Template-Namens Â»std::enable_if_tÂ« ohne eine Argumentliste
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                ^~~
In Datei, eingebunden von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/bits/move.h:57,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/bits/nested_exception.h:40,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/exception:148,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/ios:39,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/ostream:38,
                 von /var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/iostream:39,
                 von controller.cpp:1:
/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/host/arm-buildroot-linux-gnueabihf/include/c++/10.2.0/type_traits:2554:11: Anmerkung: Â»template<bool _Cond, class _Tp> using enable_if_t = typename std::enable_if::typeÂ« ist hier deklariert
 2554 |     using enable_if_t = typename enable_if<_Cond, _Tp>::type;
      |           ^~~~~~~~~~~
In Datei, eingebunden von SHARED/guicommunicator/guicommunicator.h:22,
                 von controller.cpp:25:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:756:80: Fehler: expected initializer before Â»<Â« token
  756 | [[nodiscard]] constexpr auto enum_integer(E value) noexcept -> std::enable_if_t<std::is_enum_v<std::decay_t<E>>, underlying_type_t<E>> {
      |                                                                                ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:763:70: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  763 | [[nodiscard]] constexpr auto enum_index(E value) noexcept -> detail::enable_if_enum_t<E, optional<std::size_t>> {
      |                                                                      ^~~~~~~~~~~~~~~~
      |                                                                      enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:763:86: Fehler: expected initializer before Â»<Â« token
  763 | [[nodiscard]] constexpr auto enum_index(E value) noexcept -> detail::enable_if_enum_t<E, optional<std::size_t>> {
      |                                                                                      ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:775:73: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  775 | [[nodiscard]] constexpr auto enum_contains(E value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                                                         ^~~~~~~~~~~~~~~~
      |                                                                         enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:775:89: Fehler: expected initializer before Â»<Â« token
  775 | [[nodiscard]] constexpr auto enum_contains(E value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                                                                         ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:783:92: Fehler: Â»enable_if_enum_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  783 | [[nodiscard]] constexpr auto enum_contains(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                                                                            ^~~~~~~~~~~~~~~~
      |                                                                                            enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:783:108: Fehler: expected initializer before Â»<Â« token
  783 | [[nodiscard]] constexpr auto enum_contains(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                                                                                            ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:791:44: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
  791 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:791:44: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:791:79: Fehler: expected primary-expression before Â»pÂ«
  791 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, bool> {
      |                                                                               ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:791:80: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
  791 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, bool> {
      |                                                                                ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:791:81: Fehler: expected Â»;Â« before Â»noexceptÂ«
  791 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, bool> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 ;
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:800:44: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
  800 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:800:44: Fehler: Redeklaration von Â»template<class E> constexpr const auto magic_enum::enum_containsÂ«
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:791:30: Anmerkung: vorherige Deklaration von Â»template<class E, class BinaryPredicate> constexpr<TypprÃ¤fixfehler> magic_enum::enum_contains<E, BinaryPredicate>Â«
  791 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_t<E, bool> {
      |                              ^~~~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:800:44: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
  800 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:800:62: Fehler: expected Â»;Â« before Â»noexceptÂ«
  800 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_t<E, bool> {
      |                                                              ^~~~~~~~~
      |                                                              ;
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:808:77: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  808 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                             ^~~~~~~~~
      |                                                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:808:77: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  808 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                             ^~~~~~~~~
      |                                                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:808:88: Fehler: Templateargument 1 ist ungÃ¼ltig
  808 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                                        ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:808:96: Fehler: expected unqualified-id before Â»=Â« token
  808 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                                                ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:823:77: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  823 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                             ^~~~~~~~~
      |                                                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:823:77: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  823 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                             ^~~~~~~~~
      |                                                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:823:88: Fehler: Templateargument 1 ist ungÃ¼ltig
  823 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                                        ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:823:96: Fehler: expected unqualified-id before Â»=Â« token
  823 | template <typename Char, typename Traits, typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                                                ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:832:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  832 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:832:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  832 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:832:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  832 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:832:64: Fehler: expected unqualified-id before Â»=Â« token
  832 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:837:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  837 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:837:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  837 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:837:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  837 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:837:64: Fehler: expected unqualified-id before Â»=Â« token
  837 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:842:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  842 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:842:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  842 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:842:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  842 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:842:64: Fehler: expected unqualified-id before Â»=Â« token
  842 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:847:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  847 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:847:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  847 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:847:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  847 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:847:64: Fehler: expected unqualified-id before Â»=Â« token
  847 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:852:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  852 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:852:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  852 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:852:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  852 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:852:64: Fehler: expected unqualified-id before Â»=Â« token
  852 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:857:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  857 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:857:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  857 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:857:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  857 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:857:64: Fehler: expected unqualified-id before Â»=Â« token
  857 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:862:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  862 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:862:45: Fehler: Â»is_enum_vÂ« ist kein Element von Â»stdÂ«; meinten Sie Â»is_enumÂ«?
  862 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                             ^~~~~~~~~
      |                                             is_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:862:56: Fehler: Templateargument 1 ist ungÃ¼ltig
  862 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                        ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:862:64: Fehler: expected unqualified-id before Â»=Â« token
  862 | template <typename E, std::enable_if_t<std::is_enum_v<E>, int> = 0>
      |                                                                ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:872:19: Fehler: Â»enum_type_nameÂ« wurde nicht innerhalb von Â»magic_enumÂ« deklariert
  872 | using magic_enum::enum_type_name;
      |                   ^~~~~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:876:63: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  876 | [[nodiscard]] constexpr auto enum_count() noexcept -> detail::enable_if_enum_flags_t<E, std::size_t> {
      |                                                               ^~~~~~~~~~~~~~~~~~~~~~
      |                                                               enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:876:85: Fehler: expected initializer before Â»<Â« token
  876 | [[nodiscard]] constexpr auto enum_count() noexcept -> detail::enable_if_enum_flags_t<E, std::size_t> {
      |                                                                                     ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:885:80: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  885 | [[nodiscard]] constexpr auto enum_value(std::size_t index) noexcept -> detail::enable_if_enum_flags_t<E, std::decay_t<E>> {
      |                                                                                ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                                enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:885:102: Fehler: expected initializer before Â»<Â« token
  885 | [[nodiscard]] constexpr auto enum_value(std::size_t index) noexcept -> detail::enable_if_enum_flags_t<E, std::decay_t<E>> {
      |                                                                                                      ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:899:64: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  899 | [[nodiscard]] constexpr auto enum_values() noexcept -> detail::enable_if_enum_flags_t<E, detail::values_t<E, true>> {
      |                                                                ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:899:86: Fehler: expected initializer before Â»<Â« token
  899 | [[nodiscard]] constexpr auto enum_values() noexcept -> detail::enable_if_enum_flags_t<E, detail::values_t<E, true>> {
      |                                                                                      ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:908:50: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  908 | [[nodiscard]] auto enum_name(E value) -> detail::enable_if_enum_flags_t<E, string> {
      |                                                  ^~~~~~~~~~~~~~~~~~~~~~
      |                                                  enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:908:72: Fehler: expected initializer before Â»<Â« token
  908 | [[nodiscard]] auto enum_name(E value) -> detail::enable_if_enum_flags_t<E, string> {
      |                                                                        ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:934:63: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  934 | [[nodiscard]] constexpr auto enum_names() noexcept -> detail::enable_if_enum_flags_t<E, detail::names_t<E, true>> {
      |                                                               ^~~~~~~~~~~~~~~~~~~~~~
      |                                                               enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:934:85: Fehler: expected initializer before Â»<Â« token
  934 | [[nodiscard]] constexpr auto enum_names() noexcept -> detail::enable_if_enum_flags_t<E, detail::names_t<E, true>> {
      |                                                                                     ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:942:65: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  942 | [[nodiscard]] constexpr auto enum_entries() noexcept -> detail::enable_if_enum_flags_t<E, detail::entries_t<E, true>> {
      |                                                                 ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                 enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:942:87: Fehler: expected initializer before Â»<Â« token
  942 | [[nodiscard]] constexpr auto enum_entries() noexcept -> detail::enable_if_enum_flags_t<E, detail::entries_t<E, true>> {
      |                                                                                       ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:951:88: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
  951 | [[nodiscard]] constexpr auto enum_cast(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                                                        ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                                        enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:951:110: Fehler: expected initializer before Â»<Â« token
  951 | [[nodiscard]] constexpr auto enum_cast(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                                                                              ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:981:40: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
  981 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:981:40: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:981:75: Fehler: expected primary-expression before Â»pÂ«
  981 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                                           ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:981:76: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
  981 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                                            ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:981:77: Fehler: expected Â»;Â« before Â»noexceptÂ«
  981 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                                             ^~~~~~~~~
      |                                                                             ;
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1014:40: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
 1014 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1014:40: Fehler: Redeklaration von Â»template<class E> constexpr const auto magic_enum::flags::enum_castÂ«
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:981:30: Anmerkung: vorherige Deklaration von Â»template<class E, class BinaryPredicate> constexpr<TypprÃ¤fixfehler> magic_enum::flags::enum_cast<E, BinaryPredicate>Â«
  981 | [[nodiscard]] constexpr auto enum_cast(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                              ^~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1014:40: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
 1014 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                        ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1014:58: Fehler: expected Â»;Â« before Â»noexceptÂ«
 1014 | [[nodiscard]] constexpr auto enum_cast(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::decay_t<E>>> {
      |                                                          ^~~~~~~~~
      |                                                          ;
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1021:19: Fehler: Â»enum_integerÂ« wurde nicht innerhalb von Â»magic_enumÂ« deklariert
 1021 | using magic_enum::enum_integer;
      |                   ^~~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1026:70: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
 1026 | [[nodiscard]] constexpr auto enum_index(E value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::size_t>> {
      |                                                                      ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                      enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1026:92: Fehler: expected initializer before Â»<Â« token
 1026 | [[nodiscard]] constexpr auto enum_index(E value) noexcept -> detail::enable_if_enum_flags_t<E, optional<std::size_t>> {
      |                                                                                            ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1043:73: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
 1043 | [[nodiscard]] constexpr auto enum_contains(E value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                         ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                         enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1043:95: Fehler: expected initializer before Â»<Â« token
 1043 | [[nodiscard]] constexpr auto enum_contains(E value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                                               ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1052:92: Fehler: Â»enable_if_enum_flags_tÂ« in Namensraum Â»magic_enum::detailÂ« bezeichnet keinen Templatetyp; meinten Sie Â»enable_if_enumÂ«?
 1052 | [[nodiscard]] constexpr auto enum_contains(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                                            ^~~~~~~~~~~~~~~~~~~~~~
      |                                                                                            enable_if_enum
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1052:114: Fehler: expected initializer before Â»<Â« token
 1052 | [[nodiscard]] constexpr auto enum_contains(underlying_type_t<E> value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                                                                  ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1060:44: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
 1060 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1060:44: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1060:79: Fehler: expected primary-expression before Â»pÂ«
 1060 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                               ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1060:80: Fehler: Ausdrucksliste als zusammengesetzten Ausdruck in Initialisierung behandelt [-fpermissive]
 1060 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                                ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1060:81: Fehler: expected Â»;Â« before Â»noexceptÂ«
 1060 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                                                 ^~~~~~~~~
      |                                                                                 ;
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1069:44: Warnung: Attribut Â»nodiscardÂ« kann nur auf Funktionen oder auf Klasse- oder AufzÃ¤hlungstypen angewendet werden [-Wattributes]
 1069 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1069:44: Fehler: Redeklaration von Â»template<class E> constexpr const auto magic_enum::flags::enum_containsÂ«
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1060:30: Anmerkung: vorherige Deklaration von Â»template<class E, class BinaryPredicate> constexpr<TypprÃ¤fixfehler> magic_enum::flags::enum_contains<E, BinaryPredicate>Â«
 1060 | [[nodiscard]] constexpr auto enum_contains(string_view value, BinaryPredicate p) noexcept(std::is_nothrow_invocable_r_v<bool, BinaryPredicate, char, char>) -> detail::enable_if_enum_flags_t<E, bool> {
      |                              ^~~~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1069:44: Fehler: Â»string_viewÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht definiert
 1069 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                            ^~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1069:62: Fehler: expected Â»;Â« before Â»noexceptÂ«
 1069 | [[nodiscard]] constexpr auto enum_contains(string_view value) noexcept -> detail::enable_if_enum_flags_t<E, bool> {
      |                                                              ^~~~~~~~~
      |                                                              ;
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1079:63: Fehler: Â»magic_enum::detail::enable_if_enum_flags_tÂ« wurde nicht deklariert
 1079 | template <typename Char, typename Traits, typename E, detail::enable_if_enum_flags_t<E, int> = 0>
      |                                                               ^~~~~~~~~~~~~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1079:85: Fehler: expected Â»>Â« before Â»<Â« token
 1079 | template <typename Char, typename Traits, typename E, detail::enable_if_enum_flags_t<E, int> = 0>
      |                                                                                     ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: In Funktion Â»std::basic_ostream<_CharT, _Traits>& magic_enum::flags::ostream_operators::operator<<(std::basic_ostream<_CharT, _Traits>&, E)Â«:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1084:7: Warnung: Â»init-statement in AuswahlanweisungenÂ« ist nur mit Â»-std=c++17Â« oder Â»-std=gnu++17Â« verfÃ¼gbar
 1084 |   if (const auto name = magic_enum::flags::enum_name<D>(value); !name.empty()) {
      |       ^~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1084:44: Fehler: Â»enum_nameÂ« ist kein Element von Â»magic_enum::flagsÂ«; meinten Sie Â»enum_castÂ«?
 1084 |   if (const auto name = magic_enum::flags::enum_name<D>(value); !name.empty()) {
      |                                            ^~~~~~~~~
      |                                            enum_cast
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1084:55: Fehler: expected primary-expression before Â»>Â« token
 1084 |   if (const auto name = magic_enum::flags::enum_name<D>(value); !name.empty()) {
      |                                                       ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: Im globalen GÃ¼ltigkeitsbereich:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1094:63: Fehler: Â»magic_enum::detail::enable_if_enum_flags_tÂ« wurde nicht deklariert
 1094 | template <typename Char, typename Traits, typename E, detail::enable_if_enum_flags_t<E, int> = 0>
      |                                                               ^~~~~~~~~~~~~~~~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1094:85: Fehler: expected Â»>Â« before Â»<Â« token
 1094 | template <typename Char, typename Traits, typename E, detail::enable_if_enum_flags_t<E, int> = 0>
      |                                                                                     ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1095:84: Fehler: Â»optionalÂ« wurde nicht deklariert
 1095 | std::basic_ostream<Char, Traits>& operator<<(std::basic_ostream<Char, Traits>& os, optional<E> value) {
      |                                                                                    ^~~~~~~~
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1095:92: Fehler: expected Â»,Â« or Â»...Â« before Â»<Â« token
 1095 | std::basic_ostream<Char, Traits>& operator<<(std::basic_ostream<Char, Traits>& os, optional<E> value) {
      |                                                                                            ^
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp: In Funktion Â»std::basic_ostream<_CharT, _Traits>& magic_enum::flags::ostream_operators::operator<<(std::basic_ostream<_CharT, _Traits>&, int)Â«:
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:1096:10: Fehler: Â»valueÂ« wurde in diesem GÃ¼ltigkeitsbereich nicht deklariert; meinten Sie Â»magic_enum::detail::valueÂ«?
 1096 |   return value.has_value() ? (os << value.value()) : os;
      |          ^~~~~
      |          magic_enum::detail::value
SHARED/guicommunicator/../magic_enum-master/include/magic_enum.hpp:395:13: Anmerkung: Â»magic_enum::detail::valueÂ« ist hier deklariert
  395 | constexpr E value(std::size_t i) noexcept {
      |             ^~~~~
controller.cpp: In Funktion Â»std::string readHWID(std::string)Â«:
controller.cpp:60:1: Warnung: keine return-Anweisung in nicht void zurÃ¼ckgebender Funktion [-Wreturn-type]
   60 | }
      | ^
Makefile:212: recipe for target 'Debug/controller.o' failed
make[1]: *** [Debug/controller.o] Error 1
make[1]: Verzeichnis â€ž/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/build/atcctl-origin_controller/src/src_controller/controller/controllerâ€œ wird verlassen
package/pkg-generic.mk:247: recipe for target '/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/build/atcctl-origin_controller/.stamp_built' failed
make: *** [/var/jenkins_build/workspace/AtomicChessBuildroot/src/src_buildroot/buildroot/output/build/atcctl-origin_controller/.stamp_built] Error 2
--CREATING UPDATE FILE FOR SWUPDATE using script in ./SWUPDATE--
--- READ VERSION ---
build updatepacke for version 4.3.6
--- GENERATE SHA256 from rootfs.ext2.gz ---
sha256sum: ../output/images/rootfs.ext2.gz: Datei oder Verzeichnis nicht gefunden
rootfs hash 
sha256sum: ../output/images/rootfs.ext2.gz: Datei oder Verzeichnis nicht gefunden
--- PATCH sw-description from sw-description_template
software =
{
        version = "4.3.6";


        stable:
        {
                A:
                {
                        images: (
                        {
                                filename = "rootfs.ext2.gz";
                        	device = "/dev/mmcblk0p2";
                        	type = "raw";
                        	sha256 = "";
                        	compressed = true;
                        }
                        );

                };
                B:
                {
                        images: (
                        {
                                filename = "rootfs.ext2.gz";
                        	device = "/dev/mmcblk0p3";
                        	type = "raw";
                        	sha256 = "";
                        	compressed = true;
                        }
                        );
                };
        };
}
--- SIGN sw-description ---
--- COPY sw-description to ../output/images/ ---
--- RUN PACKAGE to .swu in ../output/images/ ---

sw-description
sw-description.sig
cpio: rootfs.ext2.gz: Funktion Â»statÂ« fehlgeschlagen: Datei oder Verzeichnis nicht gefunden
3 BlÃ¶cke
atctable_signed.swu
BUILD_DATE
sw-description
sw-description.sig
VERSION
Finished: SUCCESS
